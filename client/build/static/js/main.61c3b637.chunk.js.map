{"version":3,"sources":["ShowPaymentTable.js","DissolveFunctions.js","GetContractInfo.js","App.js","Main.js","bytecode.js","index.js"],"names":["web3","Web3","givenProvider","ShowPaymentTable","props","state","paymentIndexes","handleRequestPayment","bind","handleApprovePayment","contract","this","drizzle","contracts","DynamicProgPayETH","i","numberOfPayments","paymentIndex","methods","cacheCall","requestedIndex","approvedIndex","push","setState","drizzleState","stackIdReq","cacheSend","from","accounts","value","stackIdApp","transactions","txHash","transactionStack","console","log","status","isPayer","isPayee","address","payee","indexes","payeeIndex","payer","payerIndex","nextPayment","paymentDetails","map","x","rObj","paymentNumberToValue","paymentNumberToRequested","paymentNumberToApproved","statusReq","getStatusReq","statusApp","getStatusApp","numPayments","contractVal","contractValue","payment","index","key","parseFloat","utils","fromWei","toString","toFixed","requested","approved","Number","className","onClick","disabled","React","Component","DissolveFunctions","mediatorAddress","handleToggleDissolveStatus","handleDissolveContract","handleSetMediatorAddress","handleForceDissolveContract","handleForceDissolveContract2","handleResetDissolveContractTimer","payerDissolveIndex","payeeDissolveIndex","timeRemainingIndex","forceDissolveStartTimeIndex","forceDissolveDelayIndex","payerMediatorAddressIndex","payeeMediatorAddressIndex","nextPaymentRequestedIndex","stackIdToggleDis","stackIdSetMediator","event","target","stackIdDissolve","stackIdForceDissolve","stackIdForceDissolve2","stackIdresetForceDissolve","mediatorAddressesMatchButNot0x0","payerDissolve","payerWantsOut","payeeDissolve","payeeWantsOut","forceDissolveStartTime","forceDissolveDelay","payerMediatorAddress","payeeMediatorAddress","nextPaymentRequested","timerExpiresDate","payerMediatorSentence","payeeMediatorSentence","timerExpires","Date","timeRemaining","statusToggleDis","getStatusToggleDis","statusDissolve","getStatusDissolve","statusSetMediator","getStatusSetMediator","statusForceDissolve","getStatusForceDissolve","statusForceDissolve2","getStatusForceDissolve2","statusDissolveResetTimer","getStatusDissolveResetTimer","type","placeholder","aria-label","aria-describedby","onChange","handleChangeMediatorAddressInput","GetContractInfo","dissolve","handleInitialDeposit","handleDissolveFunctionsToggle","contractValueIndex","numberOfPaymentsIndex","fundedIndex","nextPaymentIndex","remainingBalanceIndex","terminatedIndex","contractValueInWei","stackIdDep","contractFunded","remainingBalance","terminated","contractTerminated","statusDep","getStatusDep","App","loading","cAddress","contractAdded","setTimeout","match","params","isETHAddress","isAddress","contractConfig","contractName","web3Contract","eth","Contract","options","abi","addContract","checkIfProgPayETHContract","unsubscribe","store","subscribe","getState","drizzleStatus","initialized","contractNameIndex","dS","d","Main","undefined","payerIsAddress","payeeIsAddress","dissolveDelayInSeconds","contractAddress","deployed","valueInETH","valueInWei","toWei","delayInSeconds","progPayETHContract","data","args","getAccounts","then","e","that","deploy","arguments","send","newContractInstance","contractURL","handlePayerInput","handlePayeeInput","handleValueInput","handleNumberOfPaymentsInput","handleDissolveDelayInput","handleDeployContract","href","syncAlways","fallback","url","drizzleStore","generateStore","Drizzle","routing","exact","path","component","render","ReactDOM","document","getElementById"],"mappings":"ol5XAIMA,EAAO,IAAIC,IAAKA,IAAKC,eAAiB,yBA4J7BC,E,kDAxJf,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAO,CAACC,eAAe,IAC5B,EAAKC,qBAAuB,EAAKA,qBAAqBC,KAA1B,gBAC5B,EAAKC,qBAAuB,EAAKA,qBAAqBD,KAA1B,gBAJZ,E,gEA2Bd,IANkB,IAGZE,EADcC,KAAKP,MAAjBQ,QACiBC,UAAUC,kBAC/BR,EAAiB,GAEZS,EAAE,EAAGA,EAAEJ,KAAKP,MAAMY,iBAAkBD,IAAI,CAC/C,IAAME,EAAeP,EAASQ,QAAT,qBAAyCC,UAAUJ,EAAE,GACpEK,EAAiBV,EAASQ,QAAT,yBAA6CC,UAAUJ,EAAE,GAC1EM,EAAgBX,EAASQ,QAAT,wBAA4CC,UAAUJ,EAAE,GAC9ET,EAAegB,KAAK,CAACL,eAAcG,iBAAgBC,kBAGrDV,KAAKY,SAAS,CAACjB,qB,6CAGK,IAAD,EACYK,KAAKP,MAA9BQ,EADa,EACbA,QAASY,EADI,EACJA,aAEVC,EADWb,EAAQC,UAAUC,kBACPI,QAAT,eAAmCQ,UAAU,CAACC,KAAMH,EAAaI,SAAS,GAAIC,MAAM,IACvGlB,KAAKY,SAAS,CAAEE,iB,6CAGK,IAAD,EACYd,KAAKP,MAA9BQ,EADa,EACbA,QAASY,EADI,EACJA,aAEVM,EADWlB,EAAQC,UAAUC,kBACPI,QAAT,eAAmCQ,UAAU,CAACC,KAAMH,EAAaI,SAAS,GAAIC,MAAM,IACvGlB,KAAKY,SAAS,CAAEO,iB,qCAGH,IAAD,EAC+BnB,KAAKP,MAAMoB,aAA9CO,EADI,EACJA,aAEFC,EAHM,EACUC,iBAEUtB,KAAKN,MAAMoB,YAE3C,OAAKO,EAEDD,EAAaC,IACjBE,QAAQC,IAAIJ,EAAaC,GAAQI,QAC1BL,EAAaC,GAAQI,aAF5B,EAFoB,O,qCAQP,IAAD,EAC+BzB,KAAKP,MAAMoB,aAA9CO,EADI,EACJA,aAEFC,EAHM,EACUC,iBAEUtB,KAAKN,MAAMyB,YAE3C,OAAKE,EAEDD,EAAaC,IACjBE,QAAQC,IAAIJ,EAAaC,GAAQI,QAC1BL,EAAaC,GAAQI,aAF5B,EAFoB,O,+BAUb,IAOJC,EACAC,EANI1B,EAAWD,KAAKP,MAAhBQ,QACAE,EAAsBH,KAAKP,MAAMoB,aAAaX,UAA9CC,kBAGRoB,QAAQC,IAAIvB,EAAQC,UAAUC,kBAAkByB,SAGhD,IAAMC,EAAQ1B,EAAkB0B,MAAM7B,KAAKP,MAAMqC,QAAQC,YACnDC,EAAQ7B,EAAkB6B,MAAMhC,KAAKP,MAAMqC,QAAQG,YACnDC,EAAc/B,EAAkB+B,YAAY,QAM9CF,GAASH,KACXH,EAAU1B,KAAKP,MAAMoB,aAAaI,SAAS,KAAKe,EAAMd,MACtDS,EAAU3B,KAAKP,MAAMoB,aAAaI,SAAS,KAAKY,EAAMX,OAK1D,IAAIiB,EAAiB,GAErBA,EAAiBnC,KAAKN,MAAMC,eAAeyC,KAAI,SAAAC,GAC7C,IAAIC,EAAO,GAIX,OAHAA,EAAI,aAAmBnC,EAAkBoC,qBAAqBF,EAAE/B,cAChEgC,EAAI,UAAgBnC,EAAkBqC,yBAAyBH,EAAE5B,gBACjE6B,EAAI,SAAenC,EAAkBsC,wBAAwBJ,EAAE3B,eACxD4B,KAIT,IAAII,EAAY1C,KAAK2C,eAEjBC,EAAY5C,KAAK6C,eAErBtB,QAAQC,IAAIW,GACZ,IAAIW,EAAc9C,KAAKP,MAAMY,iBACzB0C,EAAc/C,KAAKP,MAAMuD,cAEzB,OAEE,6BAEWb,EAAeC,KAAI,SAASa,EAASC,GAClC,OACE,yBAAKC,IAAKD,GACV,uBAAGC,IAAKD,GAAR,YAAyBA,EAAM,EAA/B,qBAAoDE,WAAY/D,EAAKgE,MAAMC,SAASP,EAAYD,GAAaS,WAAY,UAAWC,QAAQ,GAA5I,SACAP,EAAQQ,aAAwC,IAA1BR,EAAQQ,UAAUvC,MAAc,8BAA+B+B,EAAQS,WAAsC,IAAzBT,EAAQS,SAASxC,MAAc,gCAAgC,4DAGzKW,IAAmB,IAAVF,GAAkBO,GAAeyB,OAAOzB,EAAYhB,SAASgC,EAAM,GAAKD,EAAQQ,YAAuC,IAA1BR,EAAQQ,UAAUvC,OACxH,4BAAQ0C,UAAU,kBAAkBC,QAAS7D,KAAKJ,qBAAsBkE,SAAwB,YAAZpB,GAAoCA,EAAgC,YAAZA,EAAsB,WAAWA,EAA3C,WAGlIV,IAAmB,IAAVN,GAAkBQ,GAAeyB,OAAOzB,EAAYhB,SAASgC,EAAM,GAAKD,EAAQQ,YAAuC,IAA1BR,EAAQQ,UAAUvC,OACxH,4BAAQ0C,UAAU,kBAAkBC,QAAS7D,KAAKF,qBAAsBgE,SAAwB,YAAZlB,GAAoCA,EAAgC,YAAZA,EAAsB,WAAWA,EAA3C,eAOrI5C,W,GAnJY+D,IAAMC,WCmTtBC,E,kDArTb,WAAYxE,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAO,CAACwE,gBAAgB,MAC7B,EAAKC,2BAA6B,EAAKA,2BAA2BtE,KAAhC,gBAClC,EAAKuE,uBAAyB,EAAKA,uBAAuBvE,KAA5B,gBAC9B,EAAKwE,yBAA2B,EAAKA,yBAAyBxE,KAA9B,gBAChC,EAAKyE,4BAA8B,EAAKA,4BAA4BzE,KAAjC,gBACnC,EAAK0E,6BAA+B,EAAKA,6BAA6B1E,KAAlC,gBACpC,EAAK2E,iCAAmC,EAAKA,iCAAiC3E,KAAtC,gBARxB,E,gEAaG,IAGZE,EADcC,KAAKP,MAAjBQ,QACiBC,UAAUC,kBAE7BsE,EAAqB1E,EAASQ,QAAT,cAAkCC,YACvDkE,EAAqB3E,EAASQ,QAAT,cAAkCC,YAEvDmE,EAAqB5E,EAASQ,QAAT,cAAkCC,YAEvDoE,EAA8B7E,EAASQ,QAAT,uBAA2CC,YACzEqE,EAA0B9E,EAASQ,QAAT,mBAAuCC,YAEjEsE,EAA4B/E,EAASQ,QAAT,qBAAyCC,YACrEuE,EAA4BhF,EAASQ,QAAT,qBAAyCC,YAErEwE,EAA4BjF,EAASQ,QAAT,yBAA6CC,UAAUR,KAAKP,MAAMyC,aAIrGlC,KAAKY,SAAS,CAAC6D,qBAAoBC,qBAAoBC,qBAAoBC,8BAA6BC,0BAAyBC,4BAA2BC,4BAA2BC,gC,mDAG5J,IACnBnE,EAAiBb,KAAKP,MAAtBoB,aAEFoE,EADwBjF,KAAKP,MAAMQ,QAAQC,UAAzCC,kBACmCI,QAAlB,sBAAmDQ,UAAU,CAACC,KAAMH,EAAaI,SAAS,GAAIC,MAAM,IAC7HlB,KAAKY,SAAS,CAAEqE,uB,2CAGG,IAAD,EACyBjF,KAAKP,MAAMoB,aAA9CO,EADU,EACVA,aAEFC,EAHY,EACIC,iBAEUtB,KAAKN,MAAMuF,kBAE3C,OAAK5D,EAEDD,EAAaC,IACjBE,QAAQC,IAAIJ,EAAaC,GAAQI,QAC1BL,EAAaC,GAAQI,aAF5B,EAFoB,O,iDAQK,IACjBZ,EAAiBb,KAAKP,MAAtBoB,aAEFqE,EADwBlF,KAAKP,MAAMQ,QAAQC,UAAzCC,kBACqCI,QAAlB,mBAAgDQ,UAAUf,KAAKN,MAAMwE,gBAAgB,CAAClD,KAAMH,EAAaI,SAAS,GAAIC,MAAM,IACvJlB,KAAKY,SAAS,CAAEsE,yB,6CAGK,IAAD,EACuBlF,KAAKP,MAAMoB,aAA9CO,EADY,EACZA,aAEFC,EAHc,EACEC,iBAEUtB,KAAKN,MAAMwF,oBAE3C,OAAK7D,EAEDD,EAAaC,IACjBE,QAAQC,IAAIJ,EAAaC,GAAQI,QAC1BL,EAAaC,GAAQI,aAF5B,EAFoB,O,uDAQW0D,GAC/BnF,KAAKY,SAAS,CAACsD,gBAAgBiB,EAAMC,OAAOlE,QAC5CK,QAAQC,IAAIxB,KAAKN,MAAMwE,mB,+CAGA,IACfrD,EAAiBb,KAAKP,MAAtBoB,aAEFwE,EADwBrF,KAAKP,MAAMQ,QAAQC,UAAzCC,kBACkCI,QAAlB,SAAsCQ,UAAU,CAACC,KAAMH,EAAaI,SAAS,GAAIC,MAAM,IAC/GlB,KAAKY,SAAS,CAAEyE,sB,0CAGE,IAAD,EAC0BrF,KAAKP,MAAMoB,aAA9CO,EADS,EACTA,aAEFC,EAHW,EACKC,iBAEUtB,KAAKN,MAAM2F,iBAE3C,OAAKhE,EAEDD,EAAaC,IACjBE,QAAQC,IAAIJ,EAAaC,GAAQI,QAC1BL,EAAaC,GAAQI,aAF5B,EAFoB,O,oDAQQ,IACpBZ,EAAiBb,KAAKP,MAAtBoB,aAEFyE,EADwBtF,KAAKP,MAAMQ,QAAQC,UAAzCC,kBACuCI,QAAlB,cAA2CQ,UAAU,CAACC,KAAMH,EAAaI,SAAS,GAAIC,MAAM,IACzHlB,KAAKY,SAAS,CAAE0E,2B,+CAGO,IAAD,EACqBtF,KAAKP,MAAMoB,aAA9CO,EADc,EACdA,aAEFC,EAHgB,EACAC,iBAEUtB,KAAKN,MAAM4F,sBAE3C,OAAKjE,EAEDD,EAAaC,IACjBE,QAAQC,IAAIJ,EAAaC,GAAQI,QAC1BL,EAAaC,GAAQI,aAF5B,EAFoB,O,qDAUS,IACrBZ,EAAiBb,KAAKP,MAAtBoB,aAEF0E,EADwBvF,KAAKP,MAAMQ,QAAQC,UAAzCC,kBACwCI,QAAlB,cAA2CQ,UAAU,CAACC,KAAMH,EAAaI,SAAS,GAAIC,MAAM,IAC1HlB,KAAKY,SAAS,CAAE2E,4B,gDAGQ,IAAD,EACoBvF,KAAKP,MAAMoB,aAA9CO,EADe,EACfA,aAEFC,EAHiB,EACDC,iBAEUtB,KAAKN,MAAM6F,uBAE3C,OAAKlE,EAEDD,EAAaC,IACjBE,QAAQC,IAAIJ,EAAaC,GAAQI,QAC1BL,EAAaC,GAAQI,aAF5B,EAFoB,O,yDAQa,IACzBZ,EAAiBb,KAAKP,MAAtBoB,aAEF2E,EADwBxF,KAAKP,MAAMQ,QAAQC,UAAzCC,kBAC4CI,QAAlB,mBAAgDQ,UAAU,CAACC,KAAMH,EAAaI,SAAS,GAAIC,MAAM,IACnIlB,KAAKY,SAAS,CAAE4E,gC,oDAGY,IAAD,EACgBxF,KAAKP,MAAMoB,aAA9CO,EADmB,EACnBA,aAEFC,EAHqB,EACLC,iBAEUtB,KAAKN,MAAM8F,2BAE3C,OAAKnE,EAEDD,EAAaC,IACjBE,QAAQC,IAAIJ,EAAaC,GAAQI,QAC1BL,EAAaC,GAAQI,aAF5B,EAFoB,O,+BAUb,IAeHgE,EAZItF,EAAsBH,KAAKP,MAAMoB,aAAaX,UAA9CC,kBAEFuF,EAAgBvF,EAAkBwF,cAAc3F,KAAKN,MAAM+E,oBAC3DmB,EAAgBzF,EAAkB0F,cAAc7F,KAAKN,MAAMgF,oBAC3DoB,EAAyB3F,EAAkB2F,uBAAuB9F,KAAKN,MAAMkF,6BAC7EmB,EAAqB5F,EAAkB4F,mBAAmB/F,KAAKN,MAAMmF,yBAErEmB,EAAuB7F,EAAkB6F,qBAAqBhG,KAAKN,MAAMoF,2BACzEmB,EAAuB9F,EAAkB8F,qBAAqBjG,KAAKN,MAAMqF,2BAEzEmB,EAAuB/F,EAAkBqC,yBAAyBxC,KAAKN,MAAMsF,2BAG/EgB,GAAwBC,IAE5BR,EAAkCO,EAAqB9E,QAAQ+E,EAAqB/E,OAAwC,+CAA/B8E,EAAqB9E,OAAyF,+CAA/B+E,EAAqB/E,MACjMK,QAAQC,IAAI,kBAAkBiE,IAG9B,IAKIU,EAWAzE,EACAC,EAjBAyE,EAAyBJ,GAAwB,wCAAwCA,EAAqB9E,MAAM,KACpHmF,EAAyBJ,GAAwB,wCAAwCA,EAAqB/E,MAAM,KAKxH,GAJAK,QAAQC,IAAIwE,GAAwB,QAAQA,EAAqB9E,OACjEK,QAAQC,IAAIyE,GAAwB,QAAQA,EAAqB/E,OAG7D4E,GAA0BC,EAAmB,CAC/CxE,QAAQC,IAAI,SAAUsE,EAAuB5E,OAC7CK,QAAQC,IAAI,SAAUuE,EAAmB7E,OACzC,IAAIoF,EAAe3C,OAAOmC,EAAuB5E,OAASyC,OAAOoC,EAAmB7E,OACpFK,QAAQC,IAAI,SAAU8E,GACtBH,EAAmB,IAAII,KAAkB,IAAbD,GAAmB/C,WAC/ChC,QAAQC,IAAI,OAAO2E,GAOrB,IAAMtE,EAAQ1B,EAAkB0B,MAAM7B,KAAKP,MAAMqC,QAAQC,YACnDC,EAAQ7B,EAAkB6B,MAAMhC,KAAKP,MAAMqC,QAAQG,YAEnDuE,EAAgBrG,EAAkBqG,cAAcxG,KAAKN,MAAMiF,qBAE7D3C,GAASH,KACXH,EAAU1B,KAAKP,MAAMoB,aAAaI,SAAS,KAAKe,EAAMd,MACtDS,EAAU3B,KAAKP,MAAMoB,aAAaI,SAAS,KAAKY,EAAMX,MACtDK,QAAQC,IAAIE,EAAQ,QAAQC,EAAQ,QAAQ,2BAG9CJ,QAAQC,IAAIgF,GAAiB,mBAAqBA,EAActF,OAEhE,IAAIuF,EAAkBzG,KAAK0G,qBACvBC,EAAiB3G,KAAK4G,oBACtBC,EAAoB7G,KAAK8G,uBACzBC,EAAsB/G,KAAKgH,yBAC3BC,EAAuBjH,KAAKkH,0BAC5BC,EAA2BnH,KAAKoH,8BAEpC,OAEE,6BACA,6BACA,6BACA,6BACA,oDAECpF,IAAmB,IAAVN,GACR,6BACA,oDAA0BgE,IAAuC,IAAtBA,EAAcxE,MAAa,OAAO,cAA7E,kBAA0G,4BAAQ2C,QAAS7D,KAAKmE,2BAA4BL,SAA4B,YAAlB2C,GAA0CA,EAA2C,YAAlBA,EAA4B,SAASA,EAA9C,WAChO,oCAAUb,IAAuC,IAAtBA,EAAc1E,MAAa,QAAQ,gBAA9D,kBAIDc,IAAmB,IAAVL,GACR,6BACA,oDAA0BiE,IAAuC,IAAtBA,EAAc1E,MAAa,OAAO,cAA7E,kBAA0G,4BAAQ2C,QAAS7D,KAAKmE,2BAA4BL,SAA4B,YAAlB2C,MAAkCP,IAAqD,IAA7BA,EAAqBhF,QAAgBwE,IAAuC,IAAtBA,EAAcxE,QAA6BuF,EAA2C,YAAlBA,EAA4B,wBAAwBA,EAA7D,WAChVP,IAAqD,IAA7BA,EAAqBhF,OAC9C,qLACA,oCAAUwE,IAAuC,IAAtBA,EAAcxE,MAAa,QAAQ,gBAA9D,kBAGAsF,GAAiBA,EAActF,MAAM,GAAKwE,IAAuC,IAAtBA,EAAcxE,OAAiB0E,IAAuC,IAAtBA,EAAc1E,OACzH,4BAAQ2C,QAAS7D,KAAKwE,iCAAkCV,SAAqC,YAA3BqD,GAAmDA,EAAmE,YAA3BA,EAAqC,0BAA0BA,EAA9E,gBAG/IzB,IAAuC,IAAtBA,EAAcxE,OAAgB0E,IAAuC,IAAtBA,EAAc1E,OAC7E,6BACA,mGAAyEgF,IAAqD,IAA7BA,EAAqBhF,MAAa,0CAA0C,GAA7K,0CAAwNgF,IAAqD,IAA7BA,EAAqBhF,MAAa,8EAA8E,0DAAhW,sCACA,4BAAQ2C,QAAS7D,KAAKoE,uBAAwBN,SAA2B,YAAjB6C,GAAyCA,EAAiD,YAAjBA,EAA2B,8BAA8BA,EAA1E,oBAI/GjB,IAAuC,IAAtBA,EAAcxE,OAAkB0E,IAAuC,IAAtBA,EAAc1E,QACjF,6BACA,6HACA,4BACE,uFACA,4BACA,2DAAiC6E,GAAsBpC,OAAOoC,EAAmB7E,MAAM,GAAG,GAAG,IAAIsC,QAAQ,GAAzG,uNACA,4BAAQK,QAAS7D,KAAKsE,4BAA6BR,SAAgC,YAAtBiD,OAAsCP,GAAiBA,EAActF,MAAM,OAASgF,IAAqD,IAA7BA,EAAqBhF,SAA4B6F,EAAoE,YAAtBA,EAAgC,yBAAyBA,EAAnF,4BAC7Ob,IAAqD,IAA7BA,EAAqBhF,OAC9C,4GACA,8JAGA,iKACCc,IAAmB,IAAVN,IACPsE,GAAqD,+CAA7BA,EAAqB9E,MAAqD,yCAAyC,2BAAIkF,IAEjJpE,IAAmB,IAAVL,IACLsE,GAAqD,+CAA7BA,EAAqB/E,MAAqD,yCAAyC,2BAAImF,IALpJ,2JAOI,6BACA,2BAAOgB,KAAK,OAAOC,YAAY,UAAU1D,UAAU,eAAe2D,aAAW,iBAAiBC,mBAAiB,iBAAiBC,SAAUzH,KAAK0H,iCAAiC7H,KAAKG,QACrL,4BAAQ6D,QAAS7D,KAAKqE,yBAA0BP,SAA8B,YAApB+C,GAA4CA,EAAiE,YAApBA,EAA8B,WAAWA,EAApE,4BACxH,6BACCpB,GACC,4BAAQ5B,QAAS7D,KAAKuE,6BAA8BT,SAAiC,YAAvBmD,IAAuCxB,GAA8CwB,GAAuBxB,GAAiFwB,GAAsBxB,EAAgC,6BAAoD,YAAvBwB,EAAiC,8BAA8BA,EAAnM,mDAIlN,oKAGDT,GAAiBA,EAActF,MAAM,GACpC,6BACA,qLAA2JiF,EAA3J,0OAEA,uGAA4E,wFAA6D,qCAA7D,uBAC3EK,GAAiBA,EAActF,MAAM,MACpC,4BAAQ2C,QAAS7D,KAAKsE,4BAA6BR,SAAgC,YAAtBiD,GAA8CA,EAA2D,YAAtBA,EAAgC,8BAA8BA,EAA/E,wB,GA5SzGhD,IAAMC,WCIhC3E,EAAO,IAAIC,IAAKA,IAAKC,eAAiB,yBAoL7BoI,E,kDAhLf,WAAYlI,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CAACkI,UAAS,GACvB,EAAKC,qBAAuB,EAAKA,qBAAqBhI,KAA1B,gBAC5B,EAAKiI,8BAAgC,EAAKA,8BAA8BjI,KAAnC,gBAJrB,E,gEASG,IAIXE,EAFYC,KAAKP,MAAhBQ,QAEkBC,UAAUC,kBAG/B4B,EAAahC,EAASQ,QAAT,MAA0BC,YACvCyB,EAAalC,EAASQ,QAAT,MAA0BC,YACvCuH,EAAqBhI,EAASQ,QAAT,mBAAuCC,YAC5DwH,EAAwBjI,EAASQ,QAAT,iBAAqCC,YAC7DyH,EAAclI,EAASQ,QAAT,eAAmCC,YACjD0H,EAAmBnI,EAASQ,QAAT,YAAgCC,YACnD2H,EAAwBpI,EAASQ,QAAT,iBAAqCC,YAC7D4H,EAAkBrI,EAASQ,QAAT,mBAAuCC,YAE7DR,KAAKY,SAAS,CAACmB,aAAYE,aAAY8F,qBAAoBC,wBAAuBC,cAAaC,mBAAkBC,wBAAuBC,sB,sDAI1IpI,KAAKY,SAAS,CAACgH,UAAU5H,KAAKN,MAAMkI,a,6CAId,IAAD,EACY5H,KAAKP,MAA9BQ,EADa,EACbA,QAASY,EADI,EACJA,aACVd,EAAWE,EAAQC,UAAUC,kBAC7B6C,EAAgBnC,EAAaX,UAAUC,kBAAkBkI,mBAAmBrI,KAAKN,MAAMqI,oBACvFO,EAAavI,EAASQ,QAAT,eAAmCQ,UAAU,CAACC,KAAMH,EAAaI,SAAS,GAAIC,MAAM8B,EAAc9B,QACrHlB,KAAKY,SAAS,CAAE0H,iB,qCAIH,IAAD,EAC+BtI,KAAKP,MAAMoB,aAA9CO,EADI,EACJA,aAEFC,EAHM,EACUC,iBAEUtB,KAAKN,MAAM4I,YAE3C,OAAKjH,EAEDD,EAAaC,IACjBE,QAAQC,IAAIJ,EAAaC,GAAQI,QAC1BL,EAAaC,GAAQI,aAF5B,EAFoB,O,+BAQb,IAMJC,EACAC,EAPG,EAC2B3B,KAAKP,MAA/BQ,EADD,EACCA,QAASY,EADV,EACUA,aACTV,EAAsBH,KAAKP,MAAMoB,aAAaX,UAA9CC,kBACRoB,QAAQC,IAAIvB,GACZsB,QAAQC,IAAIX,GAyBZ,IAAMgB,EAAQ1B,EAAkB0B,MAAM7B,KAAKN,MAAMqC,YAC3CC,EAAQ7B,EAAkB6B,MAAMhC,KAAKN,MAAMuC,YAC3Ce,EAAgB7C,EAAkBkI,mBAAmBrI,KAAKN,MAAMqI,oBAChE1H,EAAmBF,EAAkBE,iBAAiBL,KAAKN,MAAMsI,uBACjEO,EAAiBpI,EAAkBoI,eAAevI,KAAKN,MAAMuI,aAC7D/F,EAAc/B,EAAkB+B,YAAYlC,KAAKN,MAAMwI,kBACvDM,EAAmBrI,EAAkBqI,iBAAiBxI,KAAKN,MAAMyI,uBACjEM,EAAatI,EAAkBuI,mBAAmB1I,KAAKN,MAAM0I,iBAM/DpG,GAASH,IACXH,EAAU1B,KAAKP,MAAMoB,aAAaI,SAAS,KAAKe,EAAMd,MACtDS,EAAU3B,KAAKP,MAAMoB,aAAaI,SAAS,KAAKY,EAAMX,OAKxD,IAAIyH,EAAY3I,KAAK4I,eAGnB,OACE,6BACA,oEAA0C3I,EAAQC,UAAUC,kBAAkByB,QAA9E,KAEEI,IAAmB,IAAVN,GACT,6BACA,0FAAgEG,GAASA,EAAMX,MAA/E,KACCqH,IAAyC,IAAvBA,EAAerH,OAAiBuH,IAAiC,IAAnBA,EAAWvH,OAC1E,6BACA,4BAAQ0C,UAAU,kBAAkBC,QAAS7D,KAAK6H,qBAAsB/D,SAAwB,YAAZ6E,GAAoCA,EAAsC,YAAZA,EAAsB,WAAWA,EAAjD,mBAMpI9G,IAAmB,IAAVF,GACT,6BACA,0FAAgEK,GAASA,EAAMd,MAA/E,MAIF,qDAA2B8B,GAAkB3D,EAAKgE,MAAMC,QAASN,EAAc9B,MAAOqC,WAAY,SAAlG,aAAkHlD,GAAoBA,EAAiBa,MAAvJ,cAEA,sCAAYqH,IAAyC,IAAvBA,EAAerH,MAAe,KAAK,OACjE,sCAAYuH,IAAiC,IAAnBA,EAAWvH,MAAc,SAAS,cAKzDgB,GACC,6BACA,4CAAkBA,GAA2C,IAA5ByB,OAAOzB,EAAYhB,OAAW,OAAOgB,EAAYhB,MAAlF,OAGDqH,IAAyC,IAAvBA,EAAerH,OAAkBuH,IAAiC,IAAnBA,EAAWvH,QAC7E,6BACF,6EAAmDsH,GAAqBnJ,EAAKgE,MAAMC,QAASkF,EAAiBtH,MAAOqC,WAAY,SAAhI,YAKAlD,GAAoBkI,IAAyC,IAAvBA,EAAerH,OACrD,kBAAC,EAAD,CACAjB,QAASD,KAAKP,MAAMQ,QACpBY,aAAcb,KAAKP,MAAMoB,aACzBiB,QAAS9B,KAAKN,MACdW,iBAAkBA,EAAiBa,MACnC8B,cAAeA,EAAc9B,QAI7BlB,KAAKN,MAAMkI,UAAYW,IAAyC,IAAvBA,EAAerH,OACxD,kBAAC,EAAD,CACAjB,QAASD,KAAKP,MAAMQ,QACpBY,aAAcb,KAAKP,MAAMoB,aACzBiB,QAAS9B,KAAKN,MACdwC,YAAaA,EAAYhB,QAG3B,6BACA,6BACEqH,IAAyC,IAAvBA,EAAerH,OACnC,4BAAQ2C,QAAS7D,KAAK8H,+BAAgC9H,KAAKN,MAAMkI,SAAS,0BAA0B,gC,GA3K1E7D,IAAMC,WCuGpB6E,E,4MArGdnJ,MAAQ,CAAEoJ,SAAS,EAAMjI,aAAc,KAAMkI,SAAS,KAAMC,eAAc,G,kEAErD,IAAD,OACV/I,EAAYD,KAAKP,MAAjBQ,QAERgJ,YAAW,WAAO,IACR5J,EAASY,EAATZ,KACFuC,EAAU,EAAKnC,MAAMyJ,MAAMC,OAAOvH,QAGpCwH,IAAe/J,EAAKgE,MAAMgG,UAAUzH,IAASA,EAEjD,GADAL,QAAQC,IAAI4H,GACRA,EAAa,CACjB,IAAIE,EAAiB,CACnBC,aAAc,oBACdC,aAAc,IAAInK,EAAKoK,IAAIC,SAAS,EAAKjK,MAAMkK,QAAQzJ,UAAU,GAAG0J,IAAIR,IAG1EnJ,EAAQ4J,YAAYP,GAGpB,EAAK1I,SAAS,CAAEmI,SAASK,IAEzB,EAAKU,8BAEJ,KAIH9J,KAAK+J,YAAc9J,EAAQ+J,MAAMC,WAAU,WAGzC,IAAMpJ,EAAeZ,EAAQ+J,MAAME,WAG/BrJ,EAAasJ,cAAcC,aAC7B,EAAKxJ,SAAS,CAAEkI,SAAS,EAAOjI,sB,kDAOR,IAGtBwJ,EADYrK,KAAKP,MAAhBQ,QAC2BC,UAAUC,kBAAkBI,QAApC,aAA4DC,YACtFR,KAAKY,SAAS,CAACyJ,wB,6CAOfrK,KAAK+J,gB,+BAOL,IAEIR,EAFAe,EAAKtK,KAAKN,MAAMmB,aAChB0J,EAAIvK,KAAKP,MAAMQ,QAgBnB,OAdAsB,QAAQC,IAAI+I,GACRD,GAAMA,EAAGpK,UAAUC,oBACvBoB,QAAQC,IAAI,gBACZD,QAAQC,IAAI8I,GACZf,EAAee,EAAGpK,UAAUC,kBAAkBoJ,aAAavJ,KAAKN,MAAM2K,oBAUlErK,KAAKN,MAAMoJ,QAAgB,qBAC1B9I,KAAKN,MAAMqJ,SAMR,6BACLQ,GAAqC,0BAArBA,EAAarI,OAE9B,kBAAC,EAAD,CACAjB,QAASD,KAAKP,MAAMQ,QACpBY,aAAcb,KAAKN,MAAMmB,eAIxB0I,GAAsC,0BAAtBA,EAAarI,OAC9B,iEAhB+B,yB,GAhFnB8C,aC4IHwG,E,kDAhJb,WAAY/K,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAM,CAACsC,WAAMyI,EAAWC,eAAe,KAAM7I,MAAM,KAAM8I,eAAe,KAAMtC,mBAAmB,KAAMhI,iBAAiB,KAAMuK,uBAAuB,KAAMC,gBAAgB,KAAMC,UAAS,GAF/K,E,6DAKD3F,GACXnF,KAAKP,MAAMQ,QAAQZ,KAAKgE,MAAMgG,UAAUlE,EAAMC,OAAOlE,OACzDlB,KAAKY,SAAS,CAACoB,MAAMmD,EAAMC,OAAOlE,MAAOwJ,gBAAe,KAEtD1K,KAAKY,SAAS,CAAC8J,gBAAe,IAChCnJ,QAAQC,IAAI,4C,uCAMG2D,GACXnF,KAAKP,MAAMQ,QAAQZ,KAAKgE,MAAMgG,UAAUlE,EAAMC,OAAOlE,OACzDlB,KAAKY,SAAS,CAACiB,MAAMsD,EAAMC,OAAOlE,MAAOyJ,gBAAe,KAExD3K,KAAKY,SAAS,CAAC+J,gBAAe,IAC9BpJ,QAAQC,IAAI,4C,uCAKG2D,GAAO,IACd9F,EAASW,KAAKP,MAAMQ,QAApBZ,KACF0L,EAAa5F,EAAMC,OAAOlE,MAC1B8J,EAAa3L,EAAKgE,MAAM4H,MAAOF,EAAYxH,WAAY,SAC7DvD,KAAKY,SAAS,CAACyH,mBAAmB2C,M,kDAIR7F,GAC1BnF,KAAKY,SAAS,CAACP,iBAAiB8E,EAAMC,OAAOlE,U,+CAItBiE,GACvB,IACM+F,EAA+B,GADjB/F,EAAMC,OAAOlE,MACO,GAAG,GAC3ClB,KAAKY,SAAS,CAACgK,uBAAuBM,M,6CAGjB,IAAD,OAGZjL,EAAYD,KAAKP,MAAjBQ,QACRsB,QAAQC,IAAIvB,GAJQ,IAKZZ,EAASY,EAATZ,KACRkC,QAAQC,IAAInC,GACZ,IAAM8L,EAAqB,IAAI9L,EAAKoK,IAAIC,SAAS1J,KAAKP,MAAMkK,QAAQzJ,UAAU,GAAG0J,IAAK,CAACwB,KCzD1E,64OD0Db7J,QAAQC,IAAI2J,GACZ,IAAIE,EAAO,CAACrL,KAAKN,MAAMsC,MAAMhC,KAAKN,MAAMmC,MAAM7B,KAAKN,MAAM2I,mBAAmBrI,KAAKN,MAAMW,iBAAiBL,KAAKN,MAAMkL,wBAEnHvL,EAAKoK,IAAI6B,cAAcC,MAAK,SAACC,GAC3B,IAAIC,EAAO,EACXN,EAAmBO,OAAO,CAACC,UAAUN,IAAOO,KAAK,CACjD5K,KAAMwK,EAAE,KAGXD,MAAK,SAASM,GACXJ,EAAK7K,SAAS,CAACkK,UAAS,EAAMD,gBAAgBgB,EAAoBlC,QAAQ/H,UAC1EL,QAAQC,IAAIqK,EAAoBlC,QAAQ/H,iB,+BAgB1CL,QAAQC,IAAIxB,KAAKN,OACjB,IAAIoM,EAAc,uBAAuB9L,KAAKN,MAAMmL,gBACpD,OACE,6BACA,8EACA,sIACA,uDAA4B,oCAA5B,UAA+C,oCAA/C,+LAIA,4BACA,yDACA,yDACA,wEACA,mDACA,wGAEA,6BACA,yPACwF,oCADxF,6MAGA,6BACA,+JAEE7K,KAAKN,MAAMoL,UACX,6BACF,2BAAOzD,KAAK,OAAOvD,WAAU9D,KAAKN,MAAMoL,SAAqBxD,YAAY,yBAA0BG,SAAUzH,KAAK+L,iBAAiBlM,KAAKG,QACxI,2BAAOqH,KAAK,OAAOvD,WAAU9D,KAAKN,MAAMoL,SAAqBxD,YAAY,yBAA0BG,SAAUzH,KAAKgM,iBAAiBnM,KAAKG,QACxI,2BAAOqH,KAAK,SAASvD,WAAU9D,KAAKN,MAAMoL,SAAqBxD,YAAY,8BAA0BG,SAAUzH,KAAKiM,iBAAiBpM,KAAKG,QAC1I,2BAAOqH,KAAK,SAASvD,WAAU9D,KAAKN,MAAMoL,SAAqBxD,YAAY,iBAAkBG,SAAUzH,KAAKkM,4BAA4BrM,KAAKG,QAC7I,2BAAOqH,KAAK,SAASvD,WAAU9D,KAAKN,MAAMoL,SAAqBxD,YAAY,yBAA0BG,SAAUzH,KAAKmM,yBAAyBtM,KAAKG,QAClJ,6BACA,4BAAQ6D,QAAS7D,KAAKoM,qBAAqBvM,KAAKG,MAAO8D,WAAW9D,KAAKN,MAAMsC,OAAShC,KAAKN,MAAMmC,OAAS7B,KAAKN,MAAM2I,oBAAsBrI,KAAKN,MAAMW,kBAAoBL,KAAKN,MAAMkL,yBAArL,YAG6B,IAA5B5K,KAAKN,MAAMgL,gBACZ,6FAC6B,IAA5B1K,KAAKN,MAAMiL,gBACZ,4FAGD3K,KAAKN,MAAMoL,UACZ,6BACA,uFACA,+DACA,4BACA,sCAAY9K,KAAKN,MAAMsC,OACvB,sCAAYhC,KAAKN,MAAMmC,OACvB,+CAAqBuB,WAAYpD,KAAKP,MAAMQ,QAAQZ,KAAKgE,MAAMC,QAAStD,KAAKN,MAAM2I,mBAAoB9E,WAAY,UAAWC,QAAQ,GAAtI,UACA,mDAAyBxD,KAAKN,MAAMW,kBACpC,gDAAsBL,KAAKN,MAAMkL,uBAAuB,GAAG,GAAG,GAA9D,UAGA,wDAA8B5K,KAAKN,MAAMmL,iBACzC,yGAA8E,uBAAGwB,KAAM,KAAKrM,KAAKN,MAAMmL,iBAAkBiB,IACzH,2BAAG,0FAAH,+F,GAxIe/H,IAAMC,W,yBEUnB2F,EAAU,CACdzJ,UAAW,C,QACXoM,YAAW,EACXjN,KAAM,CAEJkN,SAAU,CACVlF,KAAM,KACNmF,IAAK,yBAOHC,EAAeC,wBAAc/C,GAC7B1J,EAAU,IAAI0M,UAAQhD,EAAS8C,GAE/BG,EACJ,kBAAC,IAAD,KACE,6BACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW,SAAAtN,GAAK,OAAK,kBAAC,EAAD,iBAAUA,EAAV,CAAiBQ,QAASA,EAAS0J,QAASA,QACvF,kBAAC,IAAD,CAAOmD,KAAK,YAAYE,OAAQ,SAAAvN,GAAK,OAAK,kBAAC,EAAD,iBAASA,EAAT,CAAgBQ,QAASA,EAAS0J,QAASA,UAI3FsD,IAASD,OAAOJ,EAASM,SAASC,eAAe,W","file":"static/js/main.61c3b637.chunk.js","sourcesContent":["\nimport React from \"react\";\n\nimport Web3 from 'web3';\nconst web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n\nclass ShowPaymentTable extends React.Component {\n\nconstructor(props){\n  super(props);\n  this.state ={paymentIndexes:[]};\n  this.handleRequestPayment = this.handleRequestPayment.bind(this);\n  this.handleApprovePayment = this.handleApprovePayment.bind(this);\n}\n//state = {};\n/*\n{\n  payee && isPayee===true &&\n  <div>\n  <button className=\"btn btn-primary\" onClick={this.handleRequestPayment} disabled = {statusReq===\"pending\"?true:false}>{!statusReq?'Request Next Payment':statusReq===\"success\"?'Success! Request another.':statusReq}</button>\n  </div>\n}\n{\n  <div>\n  payer && isPayer===true &&\n  <button className=\"btn btn-primary\" onClick={this.handleApprovePayment} disabled = {statusApp===\"pending\"?true:false}>{!statusApp?'Approve Next Payment':statusApp===\"success\"?'Success! Approve another.':statusApp}</button>\n  </div>\n}*/\n\n componentDidMount() {\n\n    const { drizzle } = this.props;\n    const contract = drizzle.contracts.DynamicProgPayETH;\n    let paymentIndexes = [];\n\n    for (let i=0; i<this.props.numberOfPayments; i++){\n      const paymentIndex = contract.methods[\"paymentNumberToValue\"].cacheCall(i+1);\n      const requestedIndex = contract.methods[\"paymentNumberToRequested\"].cacheCall(i+1);\n      const approvedIndex = contract.methods[\"paymentNumberToApproved\"].cacheCall(i+1);\n      paymentIndexes.push({paymentIndex, requestedIndex, approvedIndex});\n    }\n\n    this.setState({paymentIndexes});\n }\n\n handleRequestPayment(){\n   const {drizzle, drizzleState} = this.props;\n   const contract = drizzle.contracts.DynamicProgPayETH;\n   const stackIdReq = contract.methods['requestPayment'].cacheSend({from: drizzleState.accounts[0], value:0});\n   this.setState({ stackIdReq });\n }\n\n handleApprovePayment(){\n   const {drizzle, drizzleState} = this.props;\n   const contract = drizzle.contracts.DynamicProgPayETH;\n   const stackIdApp = contract.methods['approvePayment'].cacheSend({from: drizzleState.accounts[0], value:0});\n   this.setState({ stackIdApp });\n }\n\n getStatusReq(){\n   const { transactions, transactionStack } = this.props.drizzleState;\n   // get the transaction hash using our saved `stackId`\n   const txHash = transactionStack[this.state.stackIdReq];\n   // if transaction hash does not exist, don't display anything\n   if (!txHash) return null;\n\n   if (transactions[txHash]){\n   console.log(transactions[txHash].status);\n   return transactions[txHash].status;\n  }\n }\n\n getStatusApp(){\n   const { transactions, transactionStack } = this.props.drizzleState;\n   // get the transaction hash using our saved `stackId`\n   const txHash = transactionStack[this.state.stackIdApp];\n   // if transaction hash does not exist, don't display anything\n   if (!txHash) return null;\n\n   if (transactions[txHash]){\n   console.log(transactions[txHash].status);\n   return transactions[txHash].status;\n  }\n }\n\n\n\nrender() {\n\n  const { drizzle} = this.props;\n  const { DynamicProgPayETH } = this.props.drizzleState.contracts;\n  //console.log(drizzle);\n  //console.log(drizzleState);\n  console.log(drizzle.contracts.DynamicProgPayETH.address);\n  let isPayer;\n  let isPayee;\n  const payee = DynamicProgPayETH.payee[this.props.indexes.payeeIndex];\n  const payer = DynamicProgPayETH.payer[this.props.indexes.payerIndex];\n  const nextPayment = DynamicProgPayETH.nextPayment['0x0'];\n\n  //console.log(nextPayment && \"NPI \"+nextPayment.value);\n  //console.log('2 '+payee.value);\n  //console.log('2r '+payer.value);\n\n  if (payer || payee){\n    isPayer = this.props.drizzleState.accounts[0]===payer.value;\n    isPayee = this.props.drizzleState.accounts[0]===payee.value;\n    //console.log(isPayer?\"Payer\":isPayee?\"Payee\":\"Neither Payer or Payee\");\n  }\n\n\nlet paymentDetails = {};\n//console.log(this.state.paymentIndexes);\npaymentDetails = this.state.paymentIndexes.map(x=>{\n  let rObj = {};\n  rObj['paymentValue'] = DynamicProgPayETH.paymentNumberToValue[x.paymentIndex];\n  rObj['requested'] = DynamicProgPayETH.paymentNumberToRequested[x.requestedIndex];\n  rObj['approved'] = DynamicProgPayETH.paymentNumberToApproved[x.approvedIndex];\n  return rObj;\n  //return {DynamicProgPayETH.paymentNumberToValue[x.paymentIndex],DynamicProgPayETH.paymentNumberToRequested[x.requestedIndex], DynamicProgPayETH.paymentNumberToApproved[x.approvedIndex]}\n});\n\nlet statusReq = this.getStatusReq();\n//console.log(\"SRQ \"+statusReq);\nlet statusApp = this.getStatusApp();\n\nconsole.log(paymentDetails);\nlet numPayments = this.props.numberOfPayments;\nlet contractVal = this.props.contractValue;\n\n    return (\n\n      <div>\n\n                {paymentDetails.map(function(payment, index){\n                    return (\n                      <div key={index}>\n                      <p key={index}>Payment #{index+1} in the amount of {parseFloat((web3.utils.fromWei((contractVal/numPayments).toString(), 'ether'))).toFixed(3)}Ξ\n                     {payment.requested && (payment.requested.value===false?\" has not been requested.   \": payment.approved && (payment.approved.value===true)?\" has been requested and paid!\":\" has been requested and is awaiting approval/payment.   \")}\n\n                    {\n                      payee && isPayee===true && nextPayment && Number(nextPayment.value)===index+1 && payment.requested && payment.requested.value===false &&\n                      <button className=\"btn btn-primary\" onClick={this.handleRequestPayment} disabled = {statusReq===\"pending\"?true:false}>{!statusReq?'Request':statusReq===\"success\"?'Success!':statusReq}</button>\n                    }\n                    {\n                      payer && isPayer===true && nextPayment && Number(nextPayment.value)===index+1 && payment.requested && payment.requested.value===true &&\n                      <button className=\"btn btn-primary\" onClick={this.handleApprovePayment} disabled = {statusApp===\"pending\"?true:false}>{!statusApp?'Approve':statusApp===\"success\"?'Success!':statusApp}</button>\n                    }\n                    </p>\n                    </div>\n                  )\n\n\n                }, this)}\n    </div>\n\n    );\n  }\n}\n\nexport default ShowPaymentTable;\n","import React from \"react\";\n\nclass DissolveFunctions extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state ={mediatorAddress:null};\n    this.handleToggleDissolveStatus = this.handleToggleDissolveStatus.bind(this);\n    this.handleDissolveContract = this.handleDissolveContract.bind(this);\n    this.handleSetMediatorAddress = this.handleSetMediatorAddress.bind(this);\n    this.handleForceDissolveContract = this.handleForceDissolveContract.bind(this);\n    this.handleForceDissolveContract2 = this.handleForceDissolveContract2.bind(this);\n    this.handleResetDissolveContractTimer = this.handleResetDissolveContractTimer.bind(this);\n\n  }\n\n\n  componentDidMount() {\n\n     const { drizzle } = this.props;\n     const contract = drizzle.contracts.DynamicProgPayETH;\n\n     const payerDissolveIndex = contract.methods['payerWantsOut'].cacheCall();\n     const payeeDissolveIndex = contract.methods['payeeWantsOut'].cacheCall();\n\n     const timeRemainingIndex = contract.methods['timeRemaining'].cacheCall();\n\n     const forceDissolveStartTimeIndex = contract.methods['forceDissolveStartTime'].cacheCall();\n     const forceDissolveDelayIndex = contract.methods['forceDissolveDelay'].cacheCall();\n\n     const payerMediatorAddressIndex = contract.methods['payerMediatorAddress'].cacheCall();\n     const payeeMediatorAddressIndex = contract.methods['payeeMediatorAddress'].cacheCall();\n\n     const nextPaymentRequestedIndex = contract.methods['paymentNumberToRequested'].cacheCall(this.props.nextPayment);\n\n\n\n    this.setState({payerDissolveIndex, payeeDissolveIndex, timeRemainingIndex, forceDissolveStartTimeIndex, forceDissolveDelayIndex, payerMediatorAddressIndex, payeeMediatorAddressIndex, nextPaymentRequestedIndex});\n  }\n\n  handleToggleDissolveStatus(){\n    const { drizzleState } = this.props;\n    const { DynamicProgPayETH } = this.props.drizzle.contracts;\n    const stackIdToggleDis = DynamicProgPayETH.methods['toggleAgreeToDissolve'].cacheSend({from: drizzleState.accounts[0], value:0});\n    this.setState({ stackIdToggleDis });\n  }\n\n  getStatusToggleDis(){\n    const { transactions, transactionStack } = this.props.drizzleState;\n    // get the transaction hash using our saved `stackId`\n    const txHash = transactionStack[this.state.stackIdToggleDis];\n    // if transaction hash does not exist, don't display anything\n    if (!txHash) return null;\n\n    if (transactions[txHash]){\n    console.log(transactions[txHash].status);\n    return transactions[txHash].status;\n   }\n  }\n\n  handleSetMediatorAddress(){\n    const { drizzleState } = this.props;\n    const { DynamicProgPayETH } = this.props.drizzle.contracts;\n    const stackIdSetMediator = DynamicProgPayETH.methods['setMediatorAddress'].cacheSend(this.state.mediatorAddress,{from: drizzleState.accounts[0], value:0});\n    this.setState({ stackIdSetMediator });\n  }\n\n  getStatusSetMediator(){\n    const { transactions, transactionStack } = this.props.drizzleState;\n    // get the transaction hash using our saved `stackId`\n    const txHash = transactionStack[this.state.stackIdSetMediator];\n    // if transaction hash does not exist, don't display anything\n    if (!txHash) return null;\n\n    if (transactions[txHash]){\n    console.log(transactions[txHash].status);\n    return transactions[txHash].status;\n   }\n  }\n\n  handleChangeMediatorAddressInput(event){\n    this.setState({mediatorAddress:event.target.value})\n    console.log(this.state.mediatorAddress);\n  }\n\n  handleDissolveContract(){\n    const { drizzleState } = this.props;\n    const { DynamicProgPayETH } = this.props.drizzle.contracts;\n    const stackIdDissolve = DynamicProgPayETH.methods['dissolve'].cacheSend({from: drizzleState.accounts[0], value:0});\n    this.setState({ stackIdDissolve });\n  }\n\n  getStatusDissolve(){\n    const { transactions, transactionStack } = this.props.drizzleState;\n    // get the transaction hash using our saved `stackId`\n    const txHash = transactionStack[this.state.stackIdDissolve];\n    // if transaction hash does not exist, don't display anything\n    if (!txHash) return null;\n\n    if (transactions[txHash]){\n    console.log(transactions[txHash].status);\n    return transactions[txHash].status;\n   }\n  }\n\n  handleForceDissolveContract(){\n    const { drizzleState } = this.props;\n    const { DynamicProgPayETH } = this.props.drizzle.contracts;\n    const stackIdForceDissolve = DynamicProgPayETH.methods['forceDissolve'].cacheSend({from: drizzleState.accounts[0], value:0});\n    this.setState({ stackIdForceDissolve });\n  }\n\n  getStatusForceDissolve(){\n    const { transactions, transactionStack } = this.props.drizzleState;\n    // get the transaction hash using our saved `stackId`\n    const txHash = transactionStack[this.state.stackIdForceDissolve];\n    // if transaction hash does not exist, don't display anything\n    if (!txHash) return null;\n\n    if (transactions[txHash]){\n    console.log(transactions[txHash].status);\n    return transactions[txHash].status;\n   }\n  }\n\n  //using same contract call with different event handlers to receive different status for each\n\n  handleForceDissolveContract2(){\n    const { drizzleState } = this.props;\n    const { DynamicProgPayETH } = this.props.drizzle.contracts;\n    const stackIdForceDissolve2 = DynamicProgPayETH.methods['forceDissolve'].cacheSend({from: drizzleState.accounts[0], value:0});\n    this.setState({ stackIdForceDissolve2 });\n  }\n\n  getStatusForceDissolve2(){\n    const { transactions, transactionStack } = this.props.drizzleState;\n    // get the transaction hash using our saved `stackId`\n    const txHash = transactionStack[this.state.stackIdForceDissolve2];\n    // if transaction hash does not exist, don't display anything\n    if (!txHash) return null;\n\n    if (transactions[txHash]){\n    console.log(transactions[txHash].status);\n    return transactions[txHash].status;\n   }\n  }\n\n  handleResetDissolveContractTimer(){\n    const { drizzleState } = this.props;\n    const { DynamicProgPayETH } = this.props.drizzle.contracts;\n    const stackIdresetForceDissolve = DynamicProgPayETH.methods['resetForceDissolve'].cacheSend({from: drizzleState.accounts[0], value:0});\n    this.setState({ stackIdresetForceDissolve });\n  }\n\n  getStatusDissolveResetTimer(){\n    const { transactions, transactionStack } = this.props.drizzleState;\n    // get the transaction hash using our saved `stackId`\n    const txHash = transactionStack[this.state.stackIdresetForceDissolve];\n    // if transaction hash does not exist, don't display anything\n    if (!txHash) return null;\n\n    if (transactions[txHash]){\n    console.log(transactions[txHash].status);\n    return transactions[txHash].status;\n   }\n  }\n\n\n\n  render(){\n\n\n    const { DynamicProgPayETH } = this.props.drizzleState.contracts;\n\n    const payerDissolve = DynamicProgPayETH.payerWantsOut[this.state.payerDissolveIndex];\n    const payeeDissolve = DynamicProgPayETH.payeeWantsOut[this.state.payeeDissolveIndex];\n    const forceDissolveStartTime = DynamicProgPayETH.forceDissolveStartTime[this.state.forceDissolveStartTimeIndex];\n    const forceDissolveDelay = DynamicProgPayETH.forceDissolveDelay[this.state.forceDissolveDelayIndex];\n\n    const payerMediatorAddress = DynamicProgPayETH.payerMediatorAddress[this.state.payerMediatorAddressIndex];\n    const payeeMediatorAddress = DynamicProgPayETH.payeeMediatorAddress[this.state.payeeMediatorAddressIndex];\n\n    const nextPaymentRequested = DynamicProgPayETH.paymentNumberToRequested[this.state.nextPaymentRequestedIndex];\n\n    let mediatorAddressesMatchButNot0x0;\n    if (payerMediatorAddress && payeeMediatorAddress){\n\n    mediatorAddressesMatchButNot0x0 = payerMediatorAddress.value===payeeMediatorAddress.value && payerMediatorAddress.value !== \"0x0000000000000000000000000000000000000000\" && payeeMediatorAddress.value !== \"0x0000000000000000000000000000000000000000\";\n    console.log(\"MatchButNot0x0 \"+mediatorAddressesMatchButNot0x0);\n    }\n\n    let payerMediatorSentence = (payerMediatorAddress && \" You've set your mediator address to \"+payerMediatorAddress.value+\". \");\n    let payeeMediatorSentence = (payeeMediatorAddress && \" You've set your mediator address to \"+payeeMediatorAddress.value+\". \");\n    console.log(payerMediatorAddress && \"PrMA \"+payerMediatorAddress.value);\n    console.log(payeeMediatorAddress && \"PeMA \"+payeeMediatorAddress.value);\n\n    let timerExpiresDate;\n    if (forceDissolveStartTime && forceDissolveDelay){\n      console.log(\"Start \"+ forceDissolveStartTime.value);\n      console.log(\"Delay \"+ forceDissolveDelay.value);\n      let timerExpires = Number(forceDissolveStartTime.value) + Number(forceDissolveDelay.value);\n      console.log(\"total \"+ timerExpires);\n      timerExpiresDate = new Date(timerExpires*1000).toString();\n      console.log(\"exp \"+timerExpiresDate);\n    }\n\n\n    let isPayer;\n    let isPayee;\n\n    const payee = DynamicProgPayETH.payee[this.props.indexes.payeeIndex];\n    const payer = DynamicProgPayETH.payer[this.props.indexes.payerIndex];\n\n    const timeRemaining = DynamicProgPayETH.timeRemaining[this.state.timeRemainingIndex];\n\n    if (payer || payee){\n      isPayer = this.props.drizzleState.accounts[0]===payer.value;\n      isPayee = this.props.drizzleState.accounts[0]===payee.value;\n      console.log(isPayer?\"Payer\":isPayee?\"Payee\":\"Neither Payer or Payee\");\n    }\n\n    console.log(timeRemaining && \"Time remaining: \" + timeRemaining.value);\n\n    let statusToggleDis = this.getStatusToggleDis();\n    let statusDissolve = this.getStatusDissolve();\n    let statusSetMediator = this.getStatusSetMediator();\n    let statusForceDissolve = this.getStatusForceDissolve();\n    let statusForceDissolve2 = this.getStatusForceDissolve2();\n    let statusDissolveResetTimer = this.getStatusDissolveResetTimer();\n\n    return (\n\n      <div>\n      <br/>\n      <br/>\n      <hr/>\n      <h4>Contract Dissolution</h4>\n\n      {payer && isPayer===true &&\n        <div>\n        <p>You indicate that you {payerDissolve && payerDissolve.value===true?\"want\":\"do not want\"} to dissolve.  <button onClick={this.handleToggleDissolveStatus} disabled={statusToggleDis===\"pending\"?true:false}>{!statusToggleDis?'Switch':statusToggleDis===\"success\"?'Switch':statusToggleDis}</button></p>\n        <p>Payee {payeeDissolve && payeeDissolve.value===true?\"wants\":\"does not want\"} to dissolve.</p>\n        </div>\n      }\n\n      {payer && isPayee===true &&\n        <div>\n        <p>You indicate that you {payeeDissolve && payeeDissolve.value===true?\"want\":\"do not want\"} to dissolve.  <button onClick={this.handleToggleDissolveStatus} disabled={statusToggleDis===\"pending\"?true:(nextPaymentRequested && nextPaymentRequested.value===true && payerDissolve && payerDissolve.value===false)?true:false}>{!statusToggleDis?'Switch':statusToggleDis===\"success\"?'Success! Switch Again':statusToggleDis}</button></p>\n        {nextPaymentRequested && nextPaymentRequested.value===true &&\n        <p>Note: You cannot indicate that you want to dissolve if you've already requested the next payment unless the payer has indicated they want to dissolve.</p>}\n        <p>Payer {payerDissolve && payerDissolve.value===true?\"wants\":\"does not want\"} to dissolve.</p>\n        </div>\n      }\n      { timeRemaining && timeRemaining.value>0 && payerDissolve && payerDissolve.value===false && payeeDissolve && payeeDissolve.value===false &&\n        <button onClick={this.handleResetDissolveContractTimer} disabled={statusDissolveResetTimer===\"pending\"?true:false}>{!statusDissolveResetTimer?'Disarm Timer':statusDissolveResetTimer===\"success\"?'Success! Timer Disarmed':statusDissolveResetTimer}</button>\n      }\n\n      {payerDissolve && payerDissolve.value===true && payeeDissolve && payeeDissolve.value===true &&\n        <div>\n        <p>Both parties have indicated that they want to dissolve this contract {nextPaymentRequested && nextPaymentRequested.value===true?\"and the next payment has been requested\":\"\"}. Clicking \"Dissolve\" will immediately {nextPaymentRequested && nextPaymentRequested.value===true?\"transfer the next payment to the payee and the remaining funds to the payer\":\"return all remaining funds in the contract to the payer\"} and this contract will terminate.</p>\n        <button onClick={this.handleDissolveContract} disabled={statusDissolve===\"pending\"?true:false}>{!statusDissolve?'Force Dissolve':statusDissolve===\"success\"?'Success! Contract Dissolved':statusDissolve}</button>\n        </div>\n      }\n\n      {((payerDissolve && payerDissolve.value===true) || (payeeDissolve && payeeDissolve.value===true)) &&\n        <div>\n        <p>When only one party wants to dissolve the contract there are three possible courses of action:</p>\n        <ul>\n          <li>Convince other party to agree to dissolve the contract.</li>\n          <li>\n          <p>Trigger a cool down timer of {forceDissolveDelay && Number(forceDissolveDelay.value/60/60/24).toFixed(0)} days after which either party can force the dissolution of the contract. If the forced dissolve is successful the next payment will be split between both parties and the remaining funds transferred to the payer.\n          <button onClick={this.handleForceDissolveContract} disabled={statusForceDissolve===\"pending\"?true:(timeRemaining && timeRemaining.value>0)?true:(nextPaymentRequested && nextPaymentRequested.value===true)?true:false}>{!statusForceDissolve?'Force Dissolve by Timer':statusForceDissolve===\"success\"?'Success! Timer Started':statusForceDissolve}</button></p>\n          {nextPaymentRequested && nextPaymentRequested.value===true &&\n          <p>Note: You cannot force dissolve if you've already requested the next payment.</p>}\n          <p>***The timer can be disabled, even after expiration, if both payer and payee indicate that they want to dissolve the contract.</p>\n\n          </li>\n          <li>Agree to and set a mediator that will receive all remaining contract funds and manage their distribution outside of this contract.\n          {payer && isPayer===true &&\n            (payerMediatorAddress && payerMediatorAddress.value===\"0x0000000000000000000000000000000000000000\"?\" You have not set a mediator address. \":<i>{payerMediatorSentence}</i>)}\n\n          {payer && isPayee===true &&\n              (payeeMediatorAddress && payeeMediatorAddress.value===\"0x0000000000000000000000000000000000000000\"?\" You have not set a mediator address. \":<i>{payeeMediatorSentence}</i>)}\n              If both parties have designated the same mediator address a button allowing either party to force dissolve the contract to a mediator will appear below.\n              <br/>\n              <input type=\"text\" placeholder=\"0x.....\" className=\"form-control\" aria-label=\"Contact Method\" aria-describedby=\"contact-method\" onChange={this.handleChangeMediatorAddressInput.bind(this)}/>\n              <button onClick={this.handleSetMediatorAddress} disabled={statusSetMediator===\"pending\"?true:false}>{!statusSetMediator?'Set New Mediator Address':statusSetMediator===\"success\"?'Success!':statusSetMediator}</button>\n              <br/>\n              {mediatorAddressesMatchButNot0x0 &&\n                <button onClick={this.handleForceDissolveContract2} disabled={statusForceDissolve2===\"pending\"?true:!mediatorAddressesMatchButNot0x0?true:false}>{!statusForceDissolve2&&!mediatorAddressesMatchButNot0x0?'Cannot Dissolve Mediator Addresses Must Match':!statusForceDissolve2&&mediatorAddressesMatchButNot0x0?'Force Dissolve to Mediator':statusForceDissolve2===\"success\"?'Success! Contract Dissolved':statusForceDissolve2}</button>\n              }\n            </li>\n        </ul>\n        <p>Any of the three above options will immediately terminate the contract and transfer all remaining funds to the designated recipient.</p>\n        </div>\n      }\n      {timeRemaining && timeRemaining.value>0 &&\n        <div>\n        <p>The timer to force dissolution of this contract has been triggered! This contract can be dissolved (even if only one party wants to dissolve it) after {timerExpiresDate}.\n        Once the timer has expired either party can click the \"Force Dissolve\" button that will appear below to terminate the contract. This will split the last payment between the two parties and transfer remaining funds back to payer.</p>\n        <p>Note: Timer can be disarmed by clicking the \"Disarm Timer\" button above. <b>The button will ONLY appear if both parties indicate they <i>do not</i> want to dissolve.</b></p>\n        {timeRemaining && timeRemaining.value>100000000000000 &&\n          <button onClick={this.handleForceDissolveContract} disabled={statusForceDissolve===\"pending\"?true:false}>{!statusForceDissolve?'Force Dissolve':statusForceDissolve===\"success\"?'Success! Contract Dissolved':statusForceDissolve}</button>\n        }\n        </div>\n      }\n      </div>\n    );\n}\n}\n\n\n\nexport default DissolveFunctions;\n","\nimport React from \"react\";\nimport ShowPaymentTable from \"./ShowPaymentTable\";\nimport DissolveFunctions from \"./DissolveFunctions\";\n\nimport Web3 from 'web3';\nconst web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n\nclass GetContractInfo extends React.Component {\n\nconstructor(props){\n  super(props);\n  this.state = {dissolve:false};\n  this.handleInitialDeposit = this.handleInitialDeposit.bind(this);\n  this.handleDissolveFunctionsToggle = this.handleDissolveFunctionsToggle.bind(this);\n}\n\n\n\n componentDidMount() {\n    //access drizzle props within componentDidMount\n    const {drizzle} = this.props;\n\n    const contract = drizzle.contracts.DynamicProgPayETH;\n\n\n    var payeeIndex = contract.methods[\"payee\"].cacheCall();\n    var payerIndex = contract.methods[\"payer\"].cacheCall();\n    var contractValueIndex = contract.methods[\"contractValueInWei\"].cacheCall();\n    var numberOfPaymentsIndex = contract.methods[\"numberOfPayments\"].cacheCall();\n    var fundedIndex = contract.methods[\"contractFunded\"].cacheCall();\n    var nextPaymentIndex = contract.methods[\"nextPayment\"].cacheCall();\n    var remainingBalanceIndex = contract.methods[\"remainingBalance\"].cacheCall();\n    var terminatedIndex = contract.methods[\"contractTerminated\"].cacheCall();\n\n    this.setState({payeeIndex, payerIndex, contractValueIndex, numberOfPaymentsIndex, fundedIndex, nextPaymentIndex, remainingBalanceIndex, terminatedIndex});\n }\n\nhandleDissolveFunctionsToggle(){\n  this.setState({dissolve:!this.state.dissolve});\n}\n\n\n handleInitialDeposit(){\n   const {drizzle, drizzleState} = this.props;\n   const contract = drizzle.contracts.DynamicProgPayETH;\n   const contractValue = drizzleState.contracts.DynamicProgPayETH.contractValueInWei[this.state.contractValueIndex];\n   const stackIdDep = contract.methods['initialDeposit'].cacheSend({from: drizzleState.accounts[0], value:contractValue.value});\n   this.setState({ stackIdDep });\n }\n\n\n getStatusDep(){\n   const { transactions, transactionStack } = this.props.drizzleState;\n   // get the transaction hash using our saved `stackId`\n   const txHash = transactionStack[this.state.stackIdDep];\n   // if transaction hash does not exist, don't display anything\n   if (!txHash) return null;\n\n   if (transactions[txHash]){\n   console.log(transactions[txHash].status);\n   return transactions[txHash].status;\n  }\n }\n\nrender() {\n  const { drizzle, drizzleState } = this.props;\n  const { DynamicProgPayETH } = this.props.drizzleState.contracts;\n  console.log(drizzle);\n  console.log(drizzleState);\n  //console.log(drizzle.contracts.DynamicProgPayETH.address);\n  let isPayer;\n  let isPayee;\n  //console.log(\"W3 \"+web3.version.api);\n  //console.log(\"dissolve? \"+ this.state.dissolve);\n\n/*\n  let contractTxHash = drizzle.contracts.DynamicProgPayETH.contractArtifact.networks['5777'].transactionHash;\n  let dateTimeStamp;\n  let timeStampData = web3.eth.getTransaction(contractTxHash, (err, result) =>{\n    return result;\n  }).then((result)=>{\n    //console.log(result);\n    web3.eth.getBlock(result.blockNumber, (err, result) =>{\n      return result;\n    }).then((result)=>{\n      dateTimeStamp = \"was funded on \"+ new Date(result.timestamp*1000)+\".\";\n    });\n  });\n*/\n\n\n\n  //console.log(drizzleState);\n  const payee = DynamicProgPayETH.payee[this.state.payeeIndex];\n  const payer = DynamicProgPayETH.payer[this.state.payerIndex];\n  const contractValue = DynamicProgPayETH.contractValueInWei[this.state.contractValueIndex];\n  const numberOfPayments = DynamicProgPayETH.numberOfPayments[this.state.numberOfPaymentsIndex];\n  const contractFunded = DynamicProgPayETH.contractFunded[this.state.fundedIndex];\n  const nextPayment = DynamicProgPayETH.nextPayment[this.state.nextPaymentIndex];\n  const remainingBalance = DynamicProgPayETH.remainingBalance[this.state.remainingBalanceIndex];\n  const terminated = DynamicProgPayETH.contractTerminated[this.state.terminatedIndex];\n\n  if (nextPayment){\n    //console.log(\"NP \"+nextPayment.value);\n  }\n\n  if (payer && payee){\n    isPayer = this.props.drizzleState.accounts[0]===payer.value;\n    isPayee = this.props.drizzleState.accounts[0]===payee.value;\n    //console.log(isPayer?\"Payer\":isPayee?\"Payee\":\"Neither Payer or Payee\");\n  }\n\n\n  let statusDep = this.getStatusDep();\n\n\n    return (\n      <div>\n      <h4>Progress Payment Contract Dashboard ({drizzle.contracts.DynamicProgPayETH.address})</h4>\n      {\n        payer && isPayer===true &&\n        <div>\n        <p>Looks like you are the payer on this contract! The payee is {payee && payee.value}.</p>\n        {contractFunded && contractFunded.value===false && terminated && terminated.value===false &&\n          <div>\n          <button className=\"btn btn-primary\" onClick={this.handleInitialDeposit} disabled = {statusDep===\"pending\"?true:false}>{!statusDep?'Fund Contract':statusDep===\"success\"?'Success!':statusDep}</button>\n          </div>\n        }\n        </div>\n      }\n      {\n        payee && isPayee===true &&\n        <div>\n        <p>Looks like you are the payee on this contract! The payer is {payer && payer.value}.</p>\n        </div>\n      }\n\n      <p>Contract initial value {contractValue && (web3.utils.fromWei((contractValue.value).toString(), 'ether'))}Ξ // {numberOfPayments && numberOfPayments.value} payments.</p>\n\n      <p>Funded: {contractFunded && contractFunded.value===false ?\"No\":\"Yes\"}</p>\n      <p>Status: {terminated && terminated.value===false?\"Active\":\"Terminated\"}</p>\n\n\n\n\n        {nextPayment &&\n          <div>\n          <p>Next payment: {nextPayment && Number(nextPayment.value)===0?\"NONE\":nextPayment.value}.</p>\n          </div>\n      }\n      {((contractFunded && contractFunded.value===true) || (terminated && terminated.value===true)) &&\n        <div>\n      <p>Remaining balance to be paid on this contract: {remainingBalance && (web3.utils.fromWei((remainingBalance.value).toString(), 'ether'))}Ξ.</p>\n        </div>\n    }\n\n\n    { numberOfPayments && contractFunded && contractFunded.value===true &&\n      <ShowPaymentTable\n      drizzle={this.props.drizzle}\n      drizzleState={this.props.drizzleState}\n      indexes={this.state}\n      numberOfPayments={numberOfPayments.value}\n      contractValue={contractValue.value}\n      />\n    }\n\n    { this.state.dissolve && contractFunded && contractFunded.value===true &&\n      <DissolveFunctions\n      drizzle={this.props.drizzle}\n      drizzleState={this.props.drizzleState}\n      indexes={this.state}\n      nextPayment={nextPayment.value}\n      />\n    }\n    <br/>\n    <br/>\n    { contractFunded && contractFunded.value===true &&\n    <button onClick={this.handleDissolveFunctionsToggle}>{this.state.dissolve?\"Hide Dissolve Functions\":\"Show Dissolve Functions\"}</button>\n    }\n      </div>\n    );\n  }\n}\n\nexport default GetContractInfo;\n","import React, { Component } from 'react';\nimport GetContractInfo from './GetContractInfo';\n\n\n//import Web3 from 'web3';\n//const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n\n\n\nclass App extends Component {\n  state = { loading: true, drizzleState: null, cAddress:null, contractAdded:false };\n\n  componentDidMount() {\n    const { drizzle } = this.props;\n\n    setTimeout(() => {\n      const { web3 } = drizzle;\n      const address = this.props.match.params.address;\n      //console.log(web3);\n\n      let isETHAddress = web3.utils.isAddress(address)?address:false;\n      console.log(isETHAddress);\n      if (isETHAddress){\n      var contractConfig = {\n        contractName: \"DynamicProgPayETH\",\n        web3Contract: new web3.eth.Contract(this.props.options.contracts[0].abi,isETHAddress)\n      }\n      //drizzle.store.dispatch({type: 'ADD_CONTRACT', contractConfig});\n      drizzle.addContract(contractConfig);\n      }\n\n      this.setState({ cAddress:isETHAddress});\n\n      this.checkIfProgPayETHContract();\n\n    }, 500)\n\n\n    // subscribe to changes in the store\n    this.unsubscribe = drizzle.store.subscribe(() => {\n\n      // every time the store updates, grab the state from drizzle\n      const drizzleState = drizzle.store.getState();\n\n      // check to see if it's ready, if so, update local component state\n      if (drizzleState.drizzleStatus.initialized) {\n        this.setState({ loading: false, drizzleState });\n      }\n    });\n\n    }\n\n\n    checkIfProgPayETHContract(){\n\n    const {drizzle} = this.props;\n    const contractNameIndex = drizzle.contracts.DynamicProgPayETH.methods['contractName'].cacheCall();\n    this.setState({contractNameIndex});\n    }\n\n\n\n\n  compomentWillUnmount() {\n    this.unsubscribe();\n  }\n\n\n\n  render() {\n    //this.addContract();\n    let dS = this.state.drizzleState;\n    let d = this.props.drizzle;\n    let contractName;\n    console.log(d);\n    if (dS && dS.contracts.DynamicProgPayETH){\n    console.log(\"DrizzleState\");\n    console.log(dS);\n    contractName = dS.contracts.DynamicProgPayETH.contractName[this.state.contractNameIndex];\n   }\n    //let contractName;\n    //if (this.state.drizzleState.contracts.DynamicProgPayETH){\n    //console.log('kie');\n  //  }\n    //console.log(contractName && \"test\"+contractName.value);\n\n\n\n    if (this.state.loading) return \"Loading Drizzle...\";\n    if (!this.state.cAddress) return \"Loading Drizzle...\";\n    //if (contractName && contractName.value!=\"Progress Payments ETH\") return \"This is NOT a valid contract.\";\n    //if (contractName && contractName.value!=\"Progress Payments ETH\") return \"This is not a compatible contract.\";\n\n\n    return(\n            <div>\n      {contractName && contractName.value===\"Progress Payments ETH\" &&\n\n      <GetContractInfo\n      drizzle={this.props.drizzle}\n      drizzleState={this.state.drizzleState}\n      />\n\n    }\n      {contractName && contractName.value !==\"Progress Payments ETH\" &&\n      <p>This is not a supported contract.</p>\n    }\n      </div>\n\n      )\n  }\n}export default App;\n","import React from 'react';\n\nimport bytecode from './bytecode.js';\n\nclass Main extends React.Component {\n  constructor(props){\n    super(props);\n    this.state={payer:undefined, payerIsAddress:null, payee:null, payeeIsAddress:null, contractValueInWei:null, numberOfPayments:null, dissolveDelayInSeconds:null, contractAddress:null, deployed:false};\n  }\n\n  handlePayerInput(event){\n    if (this.props.drizzle.web3.utils.isAddress(event.target.value)){\n    this.setState({payer:event.target.value, payerIsAddress:true});\n    } else {\n      this.setState({payerIsAddress:false})\n    console.log(\"PAYER ADDRESS NOT AN ETHEREUM ADDRESS\");\n  }\n    //console.log(this.state.payer);\n  }\n\n\n  handlePayeeInput(event){\n    if (this.props.drizzle.web3.utils.isAddress(event.target.value)){\n    this.setState({payee:event.target.value, payeeIsAddress:true});\n  } else {\n    this.setState({payeeIsAddress:false});\n    console.log(\"PAYEE ADDRESS NOT AN ETHEREUM ADDRESS\")\n  }\n    //console.log(this.state.payee);\n  }\n\n  handleValueInput(event){\n    const { web3 } = this.props.drizzle;\n    const valueInETH = event.target.value;\n    const valueInWei = web3.utils.toWei((valueInETH).toString(), 'ether');\n    this.setState({contractValueInWei:valueInWei});\n    //console.log(valueInWei);\n  }\n\n  handleNumberOfPaymentsInput(event){\n    this.setState({numberOfPayments:event.target.value});\n    //console.log(this.state.payee);\n  }\n\n  handleDissolveDelayInput(event){\n    const delayInDays = event.target.value;\n    const delayInSeconds = delayInDays * 24*60*60;\n    this.setState({dissolveDelayInSeconds:delayInSeconds});\n  }\n\n  handleDeployContract(){\n\n\n    const { drizzle } = this.props;\n    console.log(drizzle);\n    const { web3 } = drizzle;\n    console.log(web3);\n    const progPayETHContract = new web3.eth.Contract(this.props.options.contracts[0].abi, {data:bytecode});\n    console.log(progPayETHContract);\n    let args = [this.state.payer,this.state.payee,this.state.contractValueInWei,this.state.numberOfPayments,this.state.dissolveDelayInSeconds];\n\n    web3.eth.getAccounts().then((e) => {\n      var that = this;\n      progPayETHContract.deploy({arguments:args}).send({\n      from: e[0]\n\n  })\n  .then(function(newContractInstance){\n      that.setState({deployed:true, contractAddress:newContractInstance.options.address});\n      console.log(newContractInstance.options.address) // instance with the new contract address\n  });;\n\n\n\n    });\n\n\n    //web3.eth.getAccounts().then(e => {let firstAcc=e[0]; console.log(firstAcc)});\n\n\n  }\n\n\n  render(){\n\n    console.log(this.state);\n    let contractURL = \"https://progpay.org/\"+this.state.contractAddress;\n    return (\n      <div>\n      <h3>Welcome to the Ethereum Progress Payment dApp.</h3>\n      <p>This is a utility used to establish a blockchain based digital payment contract for goods and services.</p>\n      <p>There are two parties. A <i>Payer</i> and a <i>Payee</i>.\n      A smart contract is deployed (by either party) that establishes a payment contract.\n\n      An unfunded contract can be deployed by anyone as long as the following details are known in advance:</p>\n      <ul>\n      <li> Payer's Ethereum address</li>\n      <li> Payee's Ethereum address</li>\n      <li> Total value of contract in ETH (Ξ)</li>\n      <li> Number of payments</li>\n      <li> Cooldown period in case only one party wants to dissolve the contract </li>\n      </ul>\n      <br/>\n      <p>Once you have that information simply fill in the details below using an Etherum compatible browser or extension and press deploy.\n      The contract is initially deployed without any funds. In order to fund the contract the <i>payer</i> must deposit the total value of the contract. Once funds are deposited\n      they are locked into the contact terms so please verify all details in the contract after it is deployed but before it is funded!</p>\n      <br/>\n      <p>Please input contract terms below. Your contract address and a link to the dashboard will be shown after successful deployment.</p>\n\n      {!this.state.deployed &&\n        <div>\n      <input type=\"text\" disabled={this.state.deployed?true:false} placeholder=\"Payer Address 0x000...\"  onChange={this.handlePayerInput.bind(this)}/>\n      <input type=\"text\" disabled={this.state.deployed?true:false} placeholder=\"Payee Address 0x000...\"  onChange={this.handlePayeeInput.bind(this)}/>\n      <input type=\"number\" disabled={this.state.deployed?true:false} placeholder=\"Contract Total Value Ξ\"  onChange={this.handleValueInput.bind(this)}/>\n      <input type=\"number\" disabled={this.state.deployed?true:false} placeholder=\"Total Payments\"  onChange={this.handleNumberOfPaymentsInput.bind(this)}/>\n      <input type=\"number\" disabled={this.state.deployed?true:false} placeholder=\"Dissolve Delay in Days\"  onChange={this.handleDissolveDelayInput.bind(this)}/>\n      <br/>\n      <button onClick={this.handleDeployContract.bind(this)} disabled={(this.state.payer && this.state.payee && this.state.contractValueInWei && this.state.numberOfPayments && this.state.dissolveDelayInSeconds)?false:true}>Deploy</button>\n      </div>\n    }\n      {this.state.payerIsAddress===false &&\n      <p>Warning: Payer address input is not a valid Ethereum address.</p>}\n      {this.state.payeeIsAddress===false &&\n      <p>Warning: Payee address input is not a valid Ethereum address.</p>}\n\n\n    {this.state.deployed &&\n    <div>\n    <p> Congrats! Your contract has been successfully deployed!</p>\n    <p> Here are your contract details:</p>\n    <ul>\n    <li>Payer: {this.state.payer}</li>\n    <li>Payee: {this.state.payee}</li>\n    <li>Contract Value: {parseFloat((this.props.drizzle.web3.utils.fromWei((this.state.contractValueInWei).toString(), 'ether'))).toFixed(3)}Ξ</li>\n    <li>Number of Payments: {this.state.numberOfPayments}</li>\n    <li>Cool Down Timer: {this.state.dissolveDelayInSeconds/60/60/24} days</li>\n    </ul>\n\n    <p>Your contract address is: {this.state.contractAddress}</p>\n    <p>Both parties will interact with the contract using this dashboard link is: <a href={\"./\"+this.state.contractAddress}>{contractURL}</a></p>\n    <p><b>Please copy the above infomation and store in a safe place!</b> Once you've done that follow the link above to start interacting with your contract.</p>\n\n    </div>\n    }\n    </div>\n    )\n  }\n}\n\nexport default Main;\n","const bytecode = \"60c0604052601560808190527f50726f6772657373205061796d656e747320455448000000000000000000000060a090815261003e91600e9190610162565b5034801561004b57600080fd5b50604051610ec4380380610ec4833981810160405260a081101561006e57600080fd5b508051602082015160408301516060840151608090940151600080546001600160a01b038087166001600160a01b0319928316178355600180549187169190921617815560028490556003879055600d556004805461ffff191690556005556006819055929391929091908183816100e257fe5b04600f5560015b600354600101811015610134576000818152600960209081526040808320805460ff19908116909155600a835281842080549091169055600f54600b909252909120556001016100e9565b5050600354600f546002546000838152600b602052604090208054929093029003019055506101fd92505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106101a357805160ff19168380011785556101d0565b828001600101855582156101d0579182015b828111156101d05782518255916020019190600101906101b5565b506101dc9291506101e0565b5090565b6101fa91905b808211156101dc57600081556001016101e6565b90565b610cb88061020c6000396000f3fe60806040526004361061019c5760003560e01c8063728b32bb116100ec578063a41e56001161008a578063da25de3c11610064578063da25de3c1461047e578063e037f88914610493578063e3cfef601461049b578063f8158ad2146104b05761019c565b8063a41e56001461042a578063ae90b2131461043f578063b812be27146104545761019c565b80637b5b4b89116100c65780637b5b4b89146103d6578063907a0870146103eb578063945aef231461040057806396fd3409146104155761019c565b8063728b32bb1461031a57806375d0c0dc1461032257806376d5c715146103ac5761019c565b80633042c99511610159578063422f963c11610133578063422f963c146102b15780634b4e6fd9146102c6578063556ff3fa146102db57806363bdb94b146103055761019c565b80633042c9951461026157806332c07120146102945780633bef8a3a146102a95761019c565b806304c2816c146101a1578063123119cd146101c85780631a2c2a2b146101f95780631e1f916a1461022257806325d056d3146102375780632d3780261461024c575b600080fd5b3480156101ad57600080fd5b506101b66104c5565b60408051918252519081900360200190f35b3480156101d457600080fd5b506101dd6104cb565b604080516001600160a01b039092168252519081900360200190f35b34801561020557600080fd5b5061020e6104da565b604080519115158252519081900360200190f35b34801561022e57600080fd5b5061020e6104e8565b34801561024357600080fd5b5061020e610599565b34801561025857600080fd5b506101b66105a2565b34801561026d57600080fd5b5061020e6004803603602081101561028457600080fd5b50356001600160a01b03166105a8565b3480156102a057600080fd5b5061020e610643565b61020e610651565b3480156102bd57600080fd5b506101b661070e565b3480156102d257600080fd5b506101b6610714565b3480156102e757600080fd5b5061020e600480360360208110156102fe57600080fd5b503561071a565b34801561031157600080fd5b5061020e61072f565b61020e6107c0565b34801561032e57600080fd5b50610337610997565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610371578181015183820152602001610359565b50505050905090810190601f16801561039e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156103b857600080fd5b5061020e600480360360208110156103cf57600080fd5b5035610a25565b3480156103e257600080fd5b506101dd610a3a565b3480156103f757600080fd5b5061020e610a49565b34801561040c57600080fd5b5061020e610aa7565b34801561042157600080fd5b5061020e610ab0565b34801561043657600080fd5b506101b6610bce565b34801561044b57600080fd5b506101dd610bd4565b34801561046057600080fd5b506101b66004803603602081101561047757600080fd5b5035610be3565b34801561048a57600080fd5b506101b6610bf5565b61020e610bfa565b3480156104a757600080fd5b506101b6610c59565b3480156104bc57600080fd5b506101dd610c74565b60055481565b6000546001600160a01b031681565b600c54610100900460ff1681565b600c54600090610100900460ff161561050057600080fd5b6000546001600160a01b031633148061052357506001546001600160a01b031633145b61052c57600080fd5b600c5460ff16151560011461054057600080fd5b600d5461054c57600080fd5b6000546001600160a01b0316331415610576576004805460ff19811660ff90911615179055610592565b6004805461ff001981166101009182900460ff16159091021790555b5060015b90565b60045460ff1681565b600d5481565b600c54600090610100900460ff16156105c057600080fd5b6000546001600160a01b03163314806105e357506001546001600160a01b031633145b6105ec57600080fd5b6000546001600160a01b031633141561061f57600780546001600160a01b0319166001600160a01b03841617905561063b565b600880546001600160a01b0319166001600160a01b0384161790555b506001919050565b600454610100900460ff1681565b600c54600090610100900460ff161561066957600080fd5b600454610100900460ff168015610682575060045460ff165b61068b57600080fd5b6000546001600160a01b03163314806106ae57506001546001600160a01b031633145b6106b757600080fd5b600c805461ffff19166101001790556000600d81905580546040516001600160a01b0390911691303180156108fc02929091818181858888f19350505050158015610706573d6000803e3d6000fd5b506001905090565b60035481565b60065481565b60096020526000908152604090205460ff1681565b600c54600090610100900460ff161561074757600080fd5b600c5460ff16151560011461075b57600080fd5b6001546001600160a01b0316331461077257600080fd5b600d5460009081526009602052604090205460ff161561079157600080fd5b600d5461079d57600080fd5b50600d546000908152600960205260409020805460ff1916600190811790915590565b600c54600090610100900460ff16156107d857600080fd5b600454610100900460ff16806107f0575060045460ff165b6107f957600080fd5b6000546001600160a01b031633148061081c57506001546001600160a01b031633145b61082557600080fd5b6007546001600160a01b03161580159061084957506008546001600160a01b031615155b801561086557506008546007546001600160a01b039081169116145b156108c057600c805461ffff19166101001790556000600d8190556007546040516001600160a01b0390911691303180156108fc02929091818181858888f193505050501580156108ba573d6000803e3d6000fd5b50610592565b6005546108d05742600555610592565b6006546005540142111561098f57600d80546000908152600b602052604080822080549083905592829055600c805461ffff191661010017905560015490513031936002900492838503926001600160a01b03169184156108fc0291859190818181858888f1935050505015801561094c573d6000803e3d6000fd5b50600080546040516001600160a01b039091169183156108fc02918491818181858888f19350505050158015610986573d6000803e3d6000fd5b50505050610592565b506000610596565b600e805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610a1d5780601f106109f257610100808354040283529160200191610a1d565b820191906000526020600020905b815481529060010190602001808311610a0057829003601f168201915b505050505081565b600a6020526000908152604090205460ff1681565b6008546001600160a01b031681565b600454600090610100900460ff16158015610a67575060045460ff16155b610a7057600080fd5b6000546001600160a01b0316331480610a9357506001546001600160a01b031633145b610a9c57600080fd5b506000600555600190565b600c5460ff1681565b600d546000908152600b6020526040812054600c54610100900460ff1615610ad757600080fd5b600c5460ff161515600114610aeb57600080fd5b6000546001600160a01b03163314610b0257600080fd5b600d54610b0e57600080fd5b600d5460009081526009602052604090205460ff161515600114610b3157600080fd5b600d80546000908152600a60209081526040808320805460ff1916600117905583548352600b90915281205560035490541015610b7657600d80546001019055610b8b565b600c805461ffff19166101001790556000600d555b6001546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015610bc5573d6000803e3d6000fd5b50600191505090565b60025481565b6001546001600160a01b031681565b600b6020526000908152604090205481565b303190565b600080546001600160a01b03163314610c1257600080fd5b6002543414610c2057600080fd5b600c5460ff1615610c3057600080fd5b600c54610100900460ff1615610c4557600080fd5b50600c805460ff1916600190811790915590565b6005546000901561098f574260065460055401039050610596565b6007546001600160a01b03168156fea265627a7a723058208f973d55e9f2be9752575cff6b46fa5945db5917eb1957887e38aab9a233add564736f6c63430005090032\"\n\nexport default bytecode;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport Main from \"./Main\";\nimport { Route, BrowserRouter as Router } from 'react-router-dom'\n\n// import drizzle functions and contract artifact\nimport { Drizzle, generateStore } from \"drizzle\";\n\nimport ProgPayETH from \"./contracts/ProgPayETH.json\";\n\n\n\n// let drizzle know what contracts we want\nconst options = {\n  contracts: [ProgPayETH],\n  syncAlways:true,\n  web3: {\n\n    fallback: {\n    type: 'ws',\n    url: 'ws://127.0.0.1:8545'\n    }\n}\n };\n//const options = {};\n\n// setup the drizzle store and drizzle\nconst drizzleStore = generateStore(options);\nconst drizzle = new Drizzle(options, drizzleStore);// pass in the drizzle instance\n\nconst routing = (\n  <Router>\n    <div>\n      <Route exact path=\"/\" component={props => (<Main {...props} drizzle={drizzle} options={options}/>)}/>\n      <Route path=\"/:address\" render={props => (<App {...props} drizzle={drizzle} options={options}/>)} />\n    </div>\n  </Router>\n)\nReactDOM.render(routing, document.getElementById(\"root\"));\n"],"sourceRoot":""}