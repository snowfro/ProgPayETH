{"ast":null,"code":"var _jsxFileName = \"/Users/erick/eth/progpay/client/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\"; // import drizzle functions and contract artifact\n\nimport { Drizzle, generateStore } from \"drizzle\";\nimport ProgPayETH from \"./contracts/ProgPayETH.json\";\nimport { Route, Link, BrowserRouter as Router } from 'react-router-dom'; // let drizzle know what contracts we want\n//const options = { contracts: [ProgPayETH] };\n\nconst options = {}; // setup the drizzle store and drizzle\n\nconst drizzleStore = generateStore(options);\nconst drizzle = new Drizzle(options, drizzleStore); // pass in the drizzle instance\n\nconst routing = /*#__PURE__*/React.createElement(Router, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Route, {\n  path: \"/:address\",\n  render: props => /*#__PURE__*/React.createElement(App, Object.assign({}, props, {\n    drizzle: drizzle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 49\n    }\n  })),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }\n})));\nReactDOM.render(routing, document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/erick/eth/progpay/client/src/index.js"],"names":["React","ReactDOM","App","Drizzle","generateStore","ProgPayETH","Route","Link","BrowserRouter","Router","options","drizzleStore","drizzle","routing","props","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB,C,CAEA;;AACA,SAASC,OAAT,EAAkBC,aAAlB,QAAuC,SAAvC;AAEA,OAAOC,UAAP,MAAuB,6BAAvB;AAEA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,aAAa,IAAIC,MAAvC,QAAqD,kBAArD,C,CAEA;AACA;;AACA,MAAMC,OAAO,GAAG,EAAhB,C,CAEA;;AACA,MAAMC,YAAY,GAAGP,aAAa,CAACM,OAAD,CAAlC;AACA,MAAME,OAAO,GAAG,IAAIT,OAAJ,CAAYO,OAAZ,EAAqBC,YAArB,CAAhB,C,CAAmD;;AAEnD,MAAME,OAAO,gBACX,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,WAAZ;AAAwB,EAAA,MAAM,EAAEC,KAAK,iBAAK,oBAAC,GAAD,oBAASA,KAAT;AAAgB,IAAA,OAAO,EAAEF,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,CADF;AAOAX,QAAQ,CAACc,MAAT,CAAgBF,OAAhB,EAAyBG,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n// import drizzle functions and contract artifact\nimport { Drizzle, generateStore } from \"drizzle\";\n\nimport ProgPayETH from \"./contracts/ProgPayETH.json\";\n\nimport { Route, Link, BrowserRouter as Router } from 'react-router-dom'\n\n// let drizzle know what contracts we want\n//const options = { contracts: [ProgPayETH] };\nconst options = {};\n\n// setup the drizzle store and drizzle\nconst drizzleStore = generateStore(options);\nconst drizzle = new Drizzle(options, drizzleStore);// pass in the drizzle instance\n\nconst routing = (\n  <Router>\n    <div>\n      <Route path=\"/:address\" render={props => (<App {...props} drizzle={drizzle}/>)} />\n    </div>\n  </Router>\n)\nReactDOM.render(routing, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}