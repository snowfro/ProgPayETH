{"ast":null,"code":"var _jsxFileName = \"/Users/erick/eth/progpay/client/src/App.js\";\nimport React, { Component } from 'react';\nimport GetContractInfo from './GetContractInfo';\nimport abi from './abi.js';\nimport ProgPayETH from \"./contracts/ProgPayETH.json\";\nimport Web3 from 'web3';\nconst web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      drizzleState: null,\n      cAddress: null\n    };\n  }\n\n  componentDidMount() {\n    const {\n      drizzle\n    } = this.props;\n    const address = this.props.match.params.address;\n    let isETHAddress = web3.utils.isAddress(address) ? address : false; // subscribe to changes in the store\n\n    this.unsubscribe = drizzle.store.subscribe(() => {\n      // every time the store updates, grab the state from drizzle\n      const drizzleState = drizzle.store.getState(); // check to see if it's ready, if so, update local component state\n\n      if (drizzleState.drizzleStatus.initialized) {\n        this.setState({\n          loading: false,\n          drizzleState,\n          cAddress: isETHAddress\n        });\n      }\n    });\n\n    if (isETHAddress) {\n      console.log(\"options\" + this.props.options.contracts.keys);\n      var contractConfig = {\n        contractName: \"DynamicProgPayETH\",\n        web3Contract: new web3.eth.Contract(abi, isETHAddress, {\n          data: \"608060405234801561001057600080fd5b50604051610cb5380380610cb5833981810160405260a081101561003357600080fd5b508051602082015160408301516060840151608090940151600080546001600160a01b038087166001600160a01b0319928316178355600180549187169190921617815560028490556003879055600d556004805461ffff191690556005556006819055929391929091908183816100a757fe5b04600e5560015b6003546001018110156100f9576000818152600960209081526040808320805460ff19908116909155600a835281842080549091169055600e54600b909252909120556001016100ae565b5050600354600e546002546000838152600b60205260409020805492909302900301905550505050610b85806101306000396000f3fe6080604052600436106101815760003560e01c8063728b32bb116100d1578063a41e56001161008a578063da25de3c11610064578063da25de3c146103d9578063e037f889146103ee578063e3cfef60146103f6578063f8158ad21461040b57610181565b8063a41e560014610385578063ae90b2131461039a578063b812be27146103af57610181565b8063728b32bb146102ff57806376d5c715146103075780637b5b4b8914610331578063907a087014610346578063945aef231461035b57806396fd34091461037057610181565b80633042c9951161013e578063422f963c11610118578063422f963c146102965780634b4e6fd9146102ab578063556ff3fa146102c057806363bdb94b146102ea57610181565b80633042c9951461024657806332c07120146102795780633bef8a3a1461028e57610181565b806304c2816c14610186578063123119cd146101ad5780631a2c2a2b146101de5780631e1f916a1461020757806325d056d31461021c5780632d37802614610231575b600080fd5b34801561019257600080fd5b5061019b610420565b60408051918252519081900360200190f35b3480156101b957600080fd5b506101c2610426565b604080516001600160a01b039092168252519081900360200190f35b3480156101ea57600080fd5b506101f3610435565b604080519115158252519081900360200190f35b34801561021357600080fd5b506101f3610443565b34801561022857600080fd5b506101f36104f4565b34801561023d57600080fd5b5061019b6104fd565b34801561025257600080fd5b506101f36004803603602081101561026957600080fd5b50356001600160a01b0316610503565b34801561028557600080fd5b506101f361059e565b6101f36105ac565b3480156102a257600080fd5b5061019b610669565b3480156102b757600080fd5b5061019b61066f565b3480156102cc57600080fd5b506101f3600480360360208110156102e357600080fd5b5035610675565b3480156102f657600080fd5b506101f361068a565b6101f361071b565b34801561031357600080fd5b506101f36004803603602081101561032a57600080fd5b50356108f2565b34801561033d57600080fd5b506101c2610907565b34801561035257600080fd5b506101f3610916565b34801561036757600080fd5b506101f3610974565b34801561037c57600080fd5b506101f361097d565b34801561039157600080fd5b5061019b610a9b565b3480156103a657600080fd5b506101c2610aa1565b3480156103bb57600080fd5b5061019b600480360360208110156103d257600080fd5b5035610ab0565b3480156103e557600080fd5b5061019b610ac2565b6101f3610ac7565b34801561040257600080fd5b5061019b610b26565b34801561041757600080fd5b506101c2610b41565b60055481565b6000546001600160a01b031681565b600c54610100900460ff1681565b600c54600090610100900460ff161561045b57600080fd5b6000546001600160a01b031633148061047e57506001546001600160a01b031633145b61048757600080fd5b600c5460ff16151560011461049b57600080fd5b600d546104a757600080fd5b6000546001600160a01b03163314156104d1576004805460ff19811660ff909116151790556104ed565b6004805461ff001981166101009182900460ff16159091021790555b5060015b90565b60045460ff1681565b600d5481565b600c54600090610100900460ff161561051b57600080fd5b6000546001600160a01b031633148061053e57506001546001600160a01b031633145b61054757600080fd5b6000546001600160a01b031633141561057a57600780546001600160a01b0319166001600160a01b038416179055610596565b600880546001600160a01b0319166001600160a01b0384161790555b506001919050565b600454610100900460ff1681565b600c54600090610100900460ff16156105c457600080fd5b600454610100900460ff1680156105dd575060045460ff165b6105e657600080fd5b6000546001600160a01b031633148061060957506001546001600160a01b031633145b61061257600080fd5b600c805461ffff19166101001790556000600d81905580546040516001600160a01b0390911691303180156108fc02929091818181858888f19350505050158015610661573d6000803e3d6000fd5b506001905090565b60035481565b60065481565b60096020526000908152604090205460ff1681565b600c54600090610100900460ff16156106a257600080fd5b600c5460ff1615156001146106b657600080fd5b6001546001600160a01b031633146106cd57600080fd5b600d5460009081526009602052604090205460ff16156106ec57600080fd5b600d546106f857600080fd5b50600d546000908152600960205260409020805460ff1916600190811790915590565b600c54600090610100900460ff161561073357600080fd5b600454610100900460ff168061074b575060045460ff165b61075457600080fd5b6000546001600160a01b031633148061077757506001546001600160a01b031633145b61078057600080fd5b6007546001600160a01b0316158015906107a457506008546001600160a01b031615155b80156107c057506008546007546001600160a01b039081169116145b1561081b57600c805461ffff19166101001790556000600d8190556007546040516001600160a01b0390911691303180156108fc02929091818181858888f19350505050158015610815573d6000803e3d6000fd5b506104ed565b60055461082b57426005556104ed565b600654600554014211156108ea57600d80546000908152600b602052604080822080549083905592829055600c805461ffff191661010017905560015490513031936002900492838503926001600160a01b03169184156108fc0291859190818181858888f193505050501580156108a7573d6000803e3d6000fd5b50600080546040516001600160a01b039091169183156108fc02918491818181858888f193505050501580156108e1573d6000803e3d6000fd5b505050506104ed565b5060006104f1565b600a6020526000908152604090205460ff1681565b6008546001600160a01b031681565b600454600090610100900460ff16158015610934575060045460ff16155b61093d57600080fd5b6000546001600160a01b031633148061096057506001546001600160a01b031633145b61096957600080fd5b506000600555600190565b600c5460ff1681565b600d546000908152600b6020526040812054600c54610100900460ff16156109a457600080fd5b600c5460ff1615156001146109b857600080fd5b6000546001600160a01b031633146109cf57600080fd5b600d546109db57600080fd5b600d5460009081526009602052604090205460ff1615156001146109fe57600080fd5b600d80546000908152600a60209081526040808320805460ff1916600117905583548352600b90915281205560035490541015610a4357600d80546001019055610a58565b600c805461ffff19166101001790556000600d555b6001546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015610a92573d6000803e3d6000fd5b50600191505090565b60025481565b6001546001600160a01b031681565b600b6020526000908152604090205481565b303190565b600080546001600160a01b03163314610adf57600080fd5b6002543414610aed57600080fd5b600c5460ff1615610afd57600080fd5b600c54610100900460ff1615610b1257600080fd5b50600c805460ff1916600190811790915590565b600554600090156108ea5742600654600554010390506104f1565b6007546001600160a01b03168156fea265627a7a72305820660b15e3bb104d14b8e958a120edee3667af039187df63930d2b255b330ed71e64736f6c63430005090032\"\n        })\n      };\n      drizzle.addContract(contractConfig);\n    }\n  }\n\n  compomentWillUnmount() {\n    this.unsubscribe();\n  }\n\n  render() {\n    console.log(this.props.drizzle);\n    if (this.state.loading) return \"Loading Drizzle...\";\n    if (!this.state.cAddress) return \"Not a valid address...\";\n    return /*#__PURE__*/React.createElement(GetContractInfo, {\n      drizzle: this.props.drizzle,\n      drizzleState: this.state.drizzleState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/erick/eth/progpay/client/src/App.js"],"names":["React","Component","GetContractInfo","abi","ProgPayETH","Web3","web3","givenProvider","App","state","loading","drizzleState","cAddress","componentDidMount","drizzle","props","address","match","params","isETHAddress","utils","isAddress","unsubscribe","store","subscribe","getState","drizzleStatus","initialized","setState","console","log","options","contracts","keys","contractConfig","contractName","web3Contract","eth","Contract","data","addContract","compomentWillUnmount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,GAAP,MAAgB,UAAhB;AAEA,OAAOC,UAAP,MAAuB,6BAAvB;AAEA,OAAOC,IAAP,MAAiB,MAAjB;AACA,MAAMC,IAAI,GAAG,IAAID,IAAJ,CAASA,IAAI,CAACE,aAAL,IAAsB,uBAA/B,CAAb;;AAIA,MAAMC,GAAN,SAAkBP,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BQ,KAD0B,GAClB;AAAEC,MAAAA,OAAO,EAAE,IAAX;AAAiBC,MAAAA,YAAY,EAAE,IAA/B;AAAqCC,MAAAA,QAAQ,EAAC;AAA9C,KADkB;AAAA;;AAG1BC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAKC,KAAzB;AACA,UAAMC,OAAO,GAAG,KAAKD,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,CAAwBF,OAAxC;AAEA,QAAIG,YAAY,GAAGb,IAAI,CAACc,KAAL,CAAWC,SAAX,CAAqBL,OAArB,IAA8BA,OAA9B,GAAsC,KAAzD,CAJkB,CAUlB;;AACA,SAAKM,WAAL,GAAmBR,OAAO,CAACS,KAAR,CAAcC,SAAd,CAAwB,MAAM;AAE/C;AACA,YAAMb,YAAY,GAAGG,OAAO,CAACS,KAAR,CAAcE,QAAd,EAArB,CAH+C,CAK/C;;AACA,UAAId,YAAY,CAACe,aAAb,CAA2BC,WAA/B,EAA4C;AAC1C,aAAKC,QAAL,CAAc;AAAElB,UAAAA,OAAO,EAAE,KAAX;AAAkBC,UAAAA,YAAlB;AAAiCC,UAAAA,QAAQ,EAACO;AAA1C,SAAd;AACD;AACF,KATkB,CAAnB;;AAWA,QAAIA,YAAJ,EAAiB;AACfU,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAU,KAAKf,KAAL,CAAWgB,OAAX,CAAmBC,SAAnB,CAA6BC,IAAnD;AACF,UAAIC,cAAc,GAAG;AAEnBC,QAAAA,YAAY,EAAE,mBAFK;AAGnBC,QAAAA,YAAY,EAAE,IAAI9B,IAAI,CAAC+B,GAAL,CAASC,QAAb,CAAsBnC,GAAtB,EAA0BgB,YAA1B,EAAuC;AAACoB,UAAAA,IAAI,EAAE;AAAP,SAAvC;AAHK,OAArB;AAMAzB,MAAAA,OAAO,CAAC0B,WAAR,CAAoBN,cAApB;AACC;AACA;;AAEHO,EAAAA,oBAAoB,GAAG;AACrB,SAAKnB,WAAL;AACD;;AAIDoB,EAAAA,MAAM,GAAG;AACPb,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAWD,OAAvB;AACA,QAAI,KAAKL,KAAL,CAAWC,OAAf,EAAwB,OAAO,oBAAP;AACxB,QAAI,CAAC,KAAKD,KAAL,CAAWG,QAAhB,EAA0B,OAAO,wBAAP;AAC1B,wBAGI,oBAAC,eAAD;AACA,MAAA,OAAO,EAAE,KAAKG,KAAL,CAAWD,OADpB;AAEA,MAAA,YAAY,EAAE,KAAKL,KAAL,CAAWE,YAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ;AASD;;AAxDyB;;AAyD3B,eAAeH,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport GetContractInfo from './GetContractInfo';\nimport abi from './abi.js';\n\nimport ProgPayETH from \"./contracts/ProgPayETH.json\";\n\nimport Web3 from 'web3';\nconst web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n\n\n\nclass App extends Component {\n  state = { loading: true, drizzleState: null, cAddress:null };\n\n  componentDidMount() {\n    const { drizzle } = this.props;\n    const address = this.props.match.params.address;\n\n    let isETHAddress = web3.utils.isAddress(address)?address:false;\n\n\n\n\n\n    // subscribe to changes in the store\n    this.unsubscribe = drizzle.store.subscribe(() => {\n\n      // every time the store updates, grab the state from drizzle\n      const drizzleState = drizzle.store.getState();\n\n      // check to see if it's ready, if so, update local component state\n      if (drizzleState.drizzleStatus.initialized) {\n        this.setState({ loading: false, drizzleState , cAddress:isETHAddress});\n      }\n    });\n\n    if (isETHAddress){\n      console.log(\"options\"+this.props.options.contracts.keys);\n    var contractConfig = {\n\n      contractName: \"DynamicProgPayETH\",\n      web3Contract: new web3.eth.Contract(abi,isETHAddress,{data: \"608060405234801561001057600080fd5b50604051610cb5380380610cb5833981810160405260a081101561003357600080fd5b508051602082015160408301516060840151608090940151600080546001600160a01b038087166001600160a01b0319928316178355600180549187169190921617815560028490556003879055600d556004805461ffff191690556005556006819055929391929091908183816100a757fe5b04600e5560015b6003546001018110156100f9576000818152600960209081526040808320805460ff19908116909155600a835281842080549091169055600e54600b909252909120556001016100ae565b5050600354600e546002546000838152600b60205260409020805492909302900301905550505050610b85806101306000396000f3fe6080604052600436106101815760003560e01c8063728b32bb116100d1578063a41e56001161008a578063da25de3c11610064578063da25de3c146103d9578063e037f889146103ee578063e3cfef60146103f6578063f8158ad21461040b57610181565b8063a41e560014610385578063ae90b2131461039a578063b812be27146103af57610181565b8063728b32bb146102ff57806376d5c715146103075780637b5b4b8914610331578063907a087014610346578063945aef231461035b57806396fd34091461037057610181565b80633042c9951161013e578063422f963c11610118578063422f963c146102965780634b4e6fd9146102ab578063556ff3fa146102c057806363bdb94b146102ea57610181565b80633042c9951461024657806332c07120146102795780633bef8a3a1461028e57610181565b806304c2816c14610186578063123119cd146101ad5780631a2c2a2b146101de5780631e1f916a1461020757806325d056d31461021c5780632d37802614610231575b600080fd5b34801561019257600080fd5b5061019b610420565b60408051918252519081900360200190f35b3480156101b957600080fd5b506101c2610426565b604080516001600160a01b039092168252519081900360200190f35b3480156101ea57600080fd5b506101f3610435565b604080519115158252519081900360200190f35b34801561021357600080fd5b506101f3610443565b34801561022857600080fd5b506101f36104f4565b34801561023d57600080fd5b5061019b6104fd565b34801561025257600080fd5b506101f36004803603602081101561026957600080fd5b50356001600160a01b0316610503565b34801561028557600080fd5b506101f361059e565b6101f36105ac565b3480156102a257600080fd5b5061019b610669565b3480156102b757600080fd5b5061019b61066f565b3480156102cc57600080fd5b506101f3600480360360208110156102e357600080fd5b5035610675565b3480156102f657600080fd5b506101f361068a565b6101f361071b565b34801561031357600080fd5b506101f36004803603602081101561032a57600080fd5b50356108f2565b34801561033d57600080fd5b506101c2610907565b34801561035257600080fd5b506101f3610916565b34801561036757600080fd5b506101f3610974565b34801561037c57600080fd5b506101f361097d565b34801561039157600080fd5b5061019b610a9b565b3480156103a657600080fd5b506101c2610aa1565b3480156103bb57600080fd5b5061019b600480360360208110156103d257600080fd5b5035610ab0565b3480156103e557600080fd5b5061019b610ac2565b6101f3610ac7565b34801561040257600080fd5b5061019b610b26565b34801561041757600080fd5b506101c2610b41565b60055481565b6000546001600160a01b031681565b600c54610100900460ff1681565b600c54600090610100900460ff161561045b57600080fd5b6000546001600160a01b031633148061047e57506001546001600160a01b031633145b61048757600080fd5b600c5460ff16151560011461049b57600080fd5b600d546104a757600080fd5b6000546001600160a01b03163314156104d1576004805460ff19811660ff909116151790556104ed565b6004805461ff001981166101009182900460ff16159091021790555b5060015b90565b60045460ff1681565b600d5481565b600c54600090610100900460ff161561051b57600080fd5b6000546001600160a01b031633148061053e57506001546001600160a01b031633145b61054757600080fd5b6000546001600160a01b031633141561057a57600780546001600160a01b0319166001600160a01b038416179055610596565b600880546001600160a01b0319166001600160a01b0384161790555b506001919050565b600454610100900460ff1681565b600c54600090610100900460ff16156105c457600080fd5b600454610100900460ff1680156105dd575060045460ff165b6105e657600080fd5b6000546001600160a01b031633148061060957506001546001600160a01b031633145b61061257600080fd5b600c805461ffff19166101001790556000600d81905580546040516001600160a01b0390911691303180156108fc02929091818181858888f19350505050158015610661573d6000803e3d6000fd5b506001905090565b60035481565b60065481565b60096020526000908152604090205460ff1681565b600c54600090610100900460ff16156106a257600080fd5b600c5460ff1615156001146106b657600080fd5b6001546001600160a01b031633146106cd57600080fd5b600d5460009081526009602052604090205460ff16156106ec57600080fd5b600d546106f857600080fd5b50600d546000908152600960205260409020805460ff1916600190811790915590565b600c54600090610100900460ff161561073357600080fd5b600454610100900460ff168061074b575060045460ff165b61075457600080fd5b6000546001600160a01b031633148061077757506001546001600160a01b031633145b61078057600080fd5b6007546001600160a01b0316158015906107a457506008546001600160a01b031615155b80156107c057506008546007546001600160a01b039081169116145b1561081b57600c805461ffff19166101001790556000600d8190556007546040516001600160a01b0390911691303180156108fc02929091818181858888f19350505050158015610815573d6000803e3d6000fd5b506104ed565b60055461082b57426005556104ed565b600654600554014211156108ea57600d80546000908152600b602052604080822080549083905592829055600c805461ffff191661010017905560015490513031936002900492838503926001600160a01b03169184156108fc0291859190818181858888f193505050501580156108a7573d6000803e3d6000fd5b50600080546040516001600160a01b039091169183156108fc02918491818181858888f193505050501580156108e1573d6000803e3d6000fd5b505050506104ed565b5060006104f1565b600a6020526000908152604090205460ff1681565b6008546001600160a01b031681565b600454600090610100900460ff16158015610934575060045460ff16155b61093d57600080fd5b6000546001600160a01b031633148061096057506001546001600160a01b031633145b61096957600080fd5b506000600555600190565b600c5460ff1681565b600d546000908152600b6020526040812054600c54610100900460ff16156109a457600080fd5b600c5460ff1615156001146109b857600080fd5b6000546001600160a01b031633146109cf57600080fd5b600d546109db57600080fd5b600d5460009081526009602052604090205460ff1615156001146109fe57600080fd5b600d80546000908152600a60209081526040808320805460ff1916600117905583548352600b90915281205560035490541015610a4357600d80546001019055610a58565b600c805461ffff19166101001790556000600d555b6001546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015610a92573d6000803e3d6000fd5b50600191505090565b60025481565b6001546001600160a01b031681565b600b6020526000908152604090205481565b303190565b600080546001600160a01b03163314610adf57600080fd5b6002543414610aed57600080fd5b600c5460ff1615610afd57600080fd5b600c54610100900460ff1615610b1257600080fd5b50600c805460ff1916600190811790915590565b600554600090156108ea5742600654600554010390506104f1565b6007546001600160a01b03168156fea265627a7a72305820660b15e3bb104d14b8e958a120edee3667af039187df63930d2b255b330ed71e64736f6c63430005090032\"})\n    }\n\n    drizzle.addContract(contractConfig);\n    }\n    }\n\n  compomentWillUnmount() {\n    this.unsubscribe();\n  }\n\n\n\n  render() {\n    console.log(this.props.drizzle);\n    if (this.state.loading) return \"Loading Drizzle...\";\n    if (!this.state.cAddress) return \"Not a valid address...\";\n    return(\n\n\n        <GetContractInfo\n        drizzle={this.props.drizzle}\n        drizzleState={this.state.drizzleState}\n        />\n\n      )\n  }\n}export default App;\n"]},"metadata":{},"sourceType":"module"}