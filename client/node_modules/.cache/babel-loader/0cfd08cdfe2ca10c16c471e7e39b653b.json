{"ast":null,"code":"var _jsxFileName = \"/Users/erick/eth/progpay/client/src/Main.js\";\nimport React from 'react';\nimport bytecode from './bytecode.js';\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      payer: undefined,\n      payee: null,\n      contractValueInWei: null,\n      numberOfPayments: null,\n      dissolveDelayInSeconds: null,\n      contractAddress: null,\n      deployed: false\n    };\n  }\n\n  handlePayerInput(event) {\n    this.setState({\n      payer: event.target.value\n    }); //console.log(this.state.payer);\n  }\n\n  handlePayeeInput(event) {\n    this.setState({\n      payee: event.target.value\n    }); //console.log(this.state.payee);\n  }\n\n  handleValueInput(event) {\n    const {\n      web3\n    } = this.props.drizzle;\n    const valueInETH = event.target.value;\n    const valueInWei = web3.utils.toWei(valueInETH.toString(), 'ether');\n    this.setState({\n      contractValueInWei: valueInWei\n    }); //console.log(valueInWei);\n  }\n\n  handleNumberOfPaymentsInput(event) {\n    this.setState({\n      numberOfPayments: event.target.value\n    }); //console.log(this.state.payee);\n  }\n\n  handleDissolveDelayInput(event) {\n    const delayInDays = event.target.value;\n    const delayInSeconds = delayInDays * 24 * 60 * 60;\n    this.setState({\n      dissolveDelayInSeconds: delayInSeconds\n    });\n  }\n\n  handleDeployContract() {\n    var contractAddress;\n    var deployed = false;\n    var that = this;\n    const {\n      drizzle\n    } = this.props;\n    console.log(drizzle);\n    const {\n      web3\n    } = drizzle;\n    console.log(web3);\n    const progPayETHContract = new web3.eth.Contract(this.props.options.contracts[0].abi, {\n      data: bytecode\n    });\n    console.log(progPayETHContract);\n    let args = [this.state.payer, this.state.payee, this.state.contractValueInWei, this.state.numberOfPayments, this.state.dissolveDelayInSeconds];\n    web3.eth.getAccounts().then(e => {\n      progPayETHContract.deploy({\n        arguments: args\n      }).send({\n        from: e[0]\n      }).then(function (newContractInstance, that) {\n        that.setState({\n          deployed: true,\n          contractAddress: newContractInstance.options.address\n        });\n        console.log(newContractInstance.options.address); // instance with the new contract address\n      });\n      ;\n    }); //web3.eth.getAccounts().then(e => {let firstAcc=e[0]; console.log(firstAcc)});\n  }\n\n  render() {\n    console.log(this.state);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, \"Welcome to the Ethereum Progress Payment dApp.\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, \"This is a 100% free utility used to establish a blockchain based digital payment contract for goods and services.\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, \"There are two parties. A \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 35\n      }\n    }, \"Payer\"), \" and a \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 54\n      }\n    }, \"Payee\"), \". An unfunded contract can be deployed by anyone as long as the following details are known in advance:\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }, \" Payer's Ethereum address\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, \" Payee's Ethereum address\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    }, \" Total value of contract in ETH (\\u039E)\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, \" Number of payments\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }, \" Cooldown period in case only one party wants to dissolve the contract \")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }, \"Once you have that information simply fill in the details below using an Etherum compatible browser or extension and press deploy. The contract is initially deployed without any funds. In order to fund the contract the \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 95\n      }\n    }, \"payer\"), \" must deposit the total value of the contract. Once funds are deposited they are locked into the contact terms so please verify all details in the contract after it is deployed but before it is funded!\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    }, \"Please input contract terms below. Your contract address and a link to the dashboard will be shown after successful deployment.\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      disabled: this.state.deployed ? true : false,\n      placeholder: \"Payer Address 0x000...\",\n      onChange: this.handlePayerInput.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      disabled: this.state.deployed ? true : false,\n      placeholder: \"Payee Address 0x000...\",\n      onChange: this.handlePayeeInput.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      disabled: this.state.deployed ? true : false,\n      placeholder: \"Contract Total Value \\u039E\",\n      onChange: this.handleValueInput.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      disabled: this.state.deployed ? true : false,\n      placeholder: \"Total Payments\",\n      onChange: this.handleNumberOfPaymentsInput.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      disabled: this.state.deployed ? true : false,\n      placeholder: \"Dissolve Delay in Days\",\n      onChange: this.handleDissolveDelayInput.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleDeployContract.bind(this),\n      disabled: this.state.payer && this.state.payee && this.state.contractValueInWei && this.state.numberOfPayments && this.state.dissolveDelayInSeconds ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }\n    }, \"Deploy\"), this.state.deployed && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 5\n      }\n    }, \" Congrats! Your contract has been successfully deployed!\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 5\n      }\n    }, \" Here are your contract details:\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 5\n      }\n    }, \"Payer: \", this.state.payer), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 5\n      }\n    }, \"Payee: \", this.state.payee), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 5\n      }\n    }, \"Contract Value: \", parseFloat(this.props.drizzle.web3.utils.fromWei(this.state.contractValueInWei.toString(), 'ether')).toFixed(3), \"\\u039E\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 5\n      }\n    }, \"Number of Payments: \", this.state.numberOfPayments), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 5\n      }\n    }, \"Cool Down Timer: \", this.state.dissolveDelayInSeconds / 60 / 60 / 24, \" days\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 5\n      }\n    }, \"Your contract address is: \", this.state.contractAddress)));\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/erick/eth/progpay/client/src/Main.js"],"names":["React","bytecode","Main","Component","constructor","props","state","payer","undefined","payee","contractValueInWei","numberOfPayments","dissolveDelayInSeconds","contractAddress","deployed","handlePayerInput","event","setState","target","value","handlePayeeInput","handleValueInput","web3","drizzle","valueInETH","valueInWei","utils","toWei","toString","handleNumberOfPaymentsInput","handleDissolveDelayInput","delayInDays","delayInSeconds","handleDeployContract","that","console","log","progPayETHContract","eth","Contract","options","contracts","abi","data","args","getAccounts","then","e","deploy","arguments","send","from","newContractInstance","address","render","bind","parseFloat","fromWei","toFixed"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport bytecode from './bytecode.js';\n\nclass Main extends React.Component {\n  constructor(props){\n    super(props);\n    this.state={payer:undefined, payee:null, contractValueInWei:null, numberOfPayments:null, dissolveDelayInSeconds:null, contractAddress:null, deployed:false};\n  }\n\n  handlePayerInput(event){\n    this.setState({payer:event.target.value});\n    //console.log(this.state.payer);\n  }\n\n\n  handlePayeeInput(event){\n    this.setState({payee:event.target.value});\n    //console.log(this.state.payee);\n  }\n\n  handleValueInput(event){\n    const { web3 } = this.props.drizzle;\n    const valueInETH = event.target.value;\n    const valueInWei = web3.utils.toWei((valueInETH).toString(), 'ether');\n    this.setState({contractValueInWei:valueInWei});\n    //console.log(valueInWei);\n  }\n\n  handleNumberOfPaymentsInput(event){\n    this.setState({numberOfPayments:event.target.value});\n    //console.log(this.state.payee);\n  }\n\n  handleDissolveDelayInput(event){\n    const delayInDays = event.target.value;\n    const delayInSeconds = delayInDays * 24*60*60;\n    this.setState({dissolveDelayInSeconds:delayInSeconds});\n  }\n\n  handleDeployContract(){\n    var contractAddress;\n    var deployed = false;\n    var that = this;\n    const { drizzle } = this.props;\n    console.log(drizzle);\n    const { web3 } = drizzle;\n    console.log(web3);\n    const progPayETHContract = new web3.eth.Contract(this.props.options.contracts[0].abi, {data:bytecode});\n    console.log(progPayETHContract);\n    let args = [this.state.payer,this.state.payee,this.state.contractValueInWei,this.state.numberOfPayments,this.state.dissolveDelayInSeconds];\n\n    web3.eth.getAccounts().then((e) => {\n      progPayETHContract.deploy({arguments:args}).send({\n      from: e[0]\n\n  })\n  .then(function(newContractInstance, that){\n      that.setState({deployed:true, contractAddress:newContractInstance.options.address});\n      console.log(newContractInstance.options.address) // instance with the new contract address\n  });;\n\n\n\n    });\n\n\n    //web3.eth.getAccounts().then(e => {let firstAcc=e[0]; console.log(firstAcc)});\n\n\n  }\n\n\n  render(){\n\n    console.log(this.state);\n    return (\n<div>\n      <h3>Welcome to the Ethereum Progress Payment dApp.</h3>\n      <p>This is a 100% free utility used to establish a blockchain based digital payment contract for goods and services.</p>\n      <p>There are two parties. A <i>Payer</i> and a <i>Payee</i>. An unfunded contract can be deployed by anyone as long as the following details are known in advance:</p>\n      <ul>\n      <li> Payer's Ethereum address</li>\n      <li> Payee's Ethereum address</li>\n      <li> Total value of contract in ETH (Ξ)</li>\n      <li> Number of payments</li>\n      <li> Cooldown period in case only one party wants to dissolve the contract </li>\n      </ul>\n      <br/>\n      <p>Once you have that information simply fill in the details below using an Etherum compatible browser or extension and press deploy.\n      The contract is initially deployed without any funds. In order to fund the contract the <i>payer</i> must deposit the total value of the contract. Once funds are deposited\n      they are locked into the contact terms so please verify all details in the contract after it is deployed but before it is funded!</p>\n      <br/>\n      <p>Please input contract terms below. Your contract address and a link to the dashboard will be shown after successful deployment.</p>\n\n      <input type=\"text\" disabled={this.state.deployed?true:false} placeholder=\"Payer Address 0x000...\"  onChange={this.handlePayerInput.bind(this)}/>\n      <input type=\"text\" disabled={this.state.deployed?true:false} placeholder=\"Payee Address 0x000...\"  onChange={this.handlePayeeInput.bind(this)}/>\n      <input type=\"number\" disabled={this.state.deployed?true:false} placeholder=\"Contract Total Value Ξ\"  onChange={this.handleValueInput.bind(this)}/>\n      <input type=\"number\" disabled={this.state.deployed?true:false} placeholder=\"Total Payments\"  onChange={this.handleNumberOfPaymentsInput.bind(this)}/>\n      <input type=\"number\" disabled={this.state.deployed?true:false} placeholder=\"Dissolve Delay in Days\"  onChange={this.handleDissolveDelayInput.bind(this)}/>\n\n      <button onClick={this.handleDeployContract.bind(this)} disabled={(this.state.payer && this.state.payee && this.state.contractValueInWei && this.state.numberOfPayments && this.state.dissolveDelayInSeconds)?false:true}>Deploy</button>\n\n    {\n      this.state.deployed &&\n      <div>\n    <p> Congrats! Your contract has been successfully deployed!</p>\n    <p> Here are your contract details:</p>\n    <ul>\n    <li>Payer: {this.state.payer}</li>\n    <li>Payee: {this.state.payee}</li>\n    <li>Contract Value: {parseFloat((this.props.drizzle.web3.utils.fromWei((this.state.contractValueInWei).toString(), 'ether'))).toFixed(3)}Ξ</li>\n    <li>Number of Payments: {this.state.numberOfPayments}</li>\n    <li>Cool Down Timer: {this.state.dissolveDelayInSeconds/60/60/24} days</li>\n    </ul>\n    <br/>\n    <br/>\n    <p>Your contract address is: {this.state.contractAddress}</p>\n    </div>\n}\n    </div>\n    )\n  }\n}\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}