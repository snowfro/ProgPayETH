{"ast":null,"code":"var _jsxFileName = \"/Users/erick/eth/progpay/client/src/ShowPaymentTable.js\";\nimport React from \"react\";\nimport Web3 from 'web3';\nconst web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n\nclass ShowPaymentTable extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      paymentIndexes: []\n    };\n  }\n\n  componentDidMount() {\n    const {\n      drizzle\n    } = this.props;\n    const contract = drizzle.contracts.ProgPayETH;\n    let paymentIndexes = [];\n\n    for (let i = 0; i < this.props.numberOfPayments; i++) {\n      const paymentIndex = contract.methods[\"paymentNumberToValue\"].cacheCall(i + 1);\n      paymentIndexes.push(paymentIndex);\n    }\n\n    this.setState({\n      paymentIndexes\n    });\n  }\n\n  render() {\n    const {\n      ProgPayETH\n    } = this.props.drizzleState.contracts;\n    console.log(this.state.paymentIndexes);\n    const paymentAmounts = this.state.paymentIndexes.map(x => /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 3\n      }\n    }, ProgPayETH.paymentNumberToValue[x].value)); //console.log(paymentAmounts);\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, \"..\", this.props.numberOfPayments, \"..\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, paymentAmounts));\n  }\n\n}\n\nexport default ShowPaymentTable;","map":{"version":3,"sources":["/Users/erick/eth/progpay/client/src/ShowPaymentTable.js"],"names":["React","Web3","web3","givenProvider","ShowPaymentTable","Component","state","paymentIndexes","componentDidMount","drizzle","props","contract","contracts","ProgPayETH","i","numberOfPayments","paymentIndex","methods","cacheCall","push","setState","render","drizzleState","console","log","paymentAmounts","map","x","paymentNumberToValue","value"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,IAAP,MAAiB,MAAjB;AACA,MAAMC,IAAI,GAAG,IAAID,IAAJ,CAASA,IAAI,CAACE,aAAL,IAAsB,uBAA/B,CAAb;;AAEA,MAAMC,gBAAN,SAA+BJ,KAAK,CAACK,SAArC,CAA+C;AAAA;AAAA;AAAA,SAE/CC,KAF+C,GAEvC;AAACC,MAAAA,cAAc,EAAC;AAAhB,KAFuC;AAAA;;AAK9CC,EAAAA,iBAAiB,GAAG;AAEjB,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAKC,KAAzB;AACA,UAAMC,QAAQ,GAAGF,OAAO,CAACG,SAAR,CAAkBC,UAAnC;AACA,QAAIN,cAAc,GAAG,EAArB;;AAEA,SAAK,IAAIO,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAC,KAAKJ,KAAL,CAAWK,gBAA3B,EAA6CD,CAAC,EAA9C,EAAiD;AAC/C,YAAME,YAAY,GAAGL,QAAQ,CAACM,OAAT,CAAiB,sBAAjB,EAAyCC,SAAzC,CAAmDJ,CAAC,GAAC,CAArD,CAArB;AACAP,MAAAA,cAAc,CAACY,IAAf,CAAoBH,YAApB;AACD;;AAED,SAAKI,QAAL,CAAc;AAACb,MAAAA;AAAD,KAAd;AAEF;;AAGFc,EAAAA,MAAM,GAAG;AAET,UAAM;AAAER,MAAAA;AAAF,QAAiB,KAAKH,KAAL,CAAWY,YAAX,CAAwBV,SAA/C;AAEAW,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKlB,KAAL,CAAWC,cAAvB;AACA,UAAMkB,cAAc,GAAG,KAAKnB,KAAL,CAAWC,cAAX,CAA0BmB,GAA1B,CAA8BC,CAAC,iBACpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKd,UAAU,CAACe,oBAAX,CAAgCD,CAAhC,EAAmCE,KAAxC,CADqB,CAAvB,CALS,CAQT;;AAEI,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAM,KAAKnB,KAAL,CAAWK,gBAAjB,OADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKU,cAAL,CAFA,CADF;AAMD;;AArC4C;;AAwC/C,eAAerB,gBAAf","sourcesContent":["\nimport React from \"react\";\n\nimport Web3 from 'web3';\nconst web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n\nclass ShowPaymentTable extends React.Component {\n\nstate = {paymentIndexes:[]};\n\n\n componentDidMount() {\n\n    const { drizzle } = this.props;\n    const contract = drizzle.contracts.ProgPayETH;\n    let paymentIndexes = [];\n\n    for (let i=0; i<this.props.numberOfPayments; i++){\n      const paymentIndex = contract.methods[\"paymentNumberToValue\"].cacheCall(i+1);\n      paymentIndexes.push(paymentIndex);\n    }\n\n    this.setState({paymentIndexes});\n\n }\n\n\nrender() {\n\nconst { ProgPayETH } = this.props.drizzleState.contracts;\n\nconsole.log(this.state.paymentIndexes);\nconst paymentAmounts = this.state.paymentIndexes.map(x=>\n  <li>{ProgPayETH.paymentNumberToValue[x].value}</li>\n);\n//console.log(paymentAmounts);\n\n    return (\n      <div>\n      <p>..{this.props.numberOfPayments}..</p>\n      <ul>{paymentAmounts}</ul>\n      </div>\n    );\n  }\n}\n\nexport default ShowPaymentTable;\n"]},"metadata":{},"sourceType":"module"}