{"ast":null,"code":"var _jsxFileName = \"/Users/erick/eth/progpay/client/src/GetContractInfo.js\";\nimport React from \"react\";\nimport ShowPaymentTable from \"./ShowPaymentTable\";\nimport DissolveFunctions from \"./DissolveFunctions\";\nimport Web3 from 'web3';\nconst web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n\nclass GetContractInfo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dissolve: false,\n      ethBalance: null\n    };\n    this.handleApproveDeposit = this.handleApproveDeposit.bind(this);\n    this.handleInitialDeposit = this.handleInitialDeposit.bind(this);\n    this.handleDissolveFunctionsToggle = this.handleDissolveFunctionsToggle.bind(this);\n  }\n\n  componentDidMount() {\n    //access drizzle props within componentDidMount\n    const {\n      drizzle\n    } = this.props;\n    const {\n      drizzleState\n    } = this.props;\n    const contract = drizzle.contracts[this.props.contractId];\n    var payeeIndex = contract.methods[\"payee\"].cacheCall();\n    var payerIndex = contract.methods[\"payer\"].cacheCall();\n    var contractValueIndex = contract.methods[\"contractValueInWei\"].cacheCall();\n    var numberOfPaymentsIndex = contract.methods[\"numberOfPayments\"].cacheCall();\n    var fundedIndex = contract.methods[\"contractFunded\"].cacheCall();\n    var nextPaymentIndex = contract.methods[\"nextPayment\"].cacheCall();\n    var remainingBalanceIndex = contract.methods[\"remainingBalance\"].cacheCall();\n    var terminatedIndex = contract.methods[\"contractTerminated\"].cacheCall(); //var ethBalance = drizzleState.accountBalances[drizzleState.accounts[0]];\n\n    if (this.props.contractId === \"DynamicProgPayDAI\") {\n      var approvedToTransferIndex = contract.methods[\"approvedToTransfer\"].cacheCall();\n      var accountDAIBalanceIndex = drizzle.contracts.DAIContract.methods['balanceOf'].cacheCall(drizzleState.accounts[0]);\n      this.setState({\n        approvedToTransferIndex,\n        accountDAIBalanceIndex\n      });\n    }\n\n    var ethBalance;\n    setInterval(() => {\n      web3.eth.getBalance(drizzleState.accounts[0]).then(result => {\n        this.setState({\n          ethBalance: result\n        });\n      });\n    }, 1000);\n    this.setState({\n      payeeIndex,\n      payerIndex,\n      contractValueIndex,\n      numberOfPaymentsIndex,\n      fundedIndex,\n      nextPaymentIndex,\n      remainingBalanceIndex,\n      terminatedIndex\n    });\n  }\n\n  handleDissolveFunctionsToggle() {\n    this.setState({\n      dissolve: !this.state.dissolve\n    });\n  }\n\n  handleApproveDeposit() {\n    const {\n      drizzle,\n      drizzleState\n    } = this.props;\n    const contract = drizzle.contracts[this.props.contractId];\n    const contractValue = drizzleState.contracts[this.props.contractId].contractValueInWei[this.state.contractValueIndex];\n    console.log(\"contract address: \" + contract.address + \" contractValue: \" + contractValue);\n    const stackIdAppDep = drizzle.contracts.DAIContract.methods['approve'].cacheSend(contract.address, contractValue.value, {\n      from: drizzleState.accounts[0],\n      value: 0\n    });\n    this.setState({\n      stackIdAppDep\n    });\n  }\n\n  getStatusAppDep() {\n    const {\n      transactions,\n      transactionStack\n    } = this.props.drizzleState; // get the transaction hash using our saved `stackId`\n\n    const txHash = transactionStack[this.state.stackIdDep]; // if transaction hash does not exist, don't display anything\n\n    if (!txHash) return null;\n\n    if (transactions[txHash]) {\n      console.log(transactions[txHash].status);\n      return transactions[txHash].status;\n    }\n  }\n\n  handleInitialDeposit() {\n    const {\n      drizzle,\n      drizzleState\n    } = this.props;\n    const contract = drizzle.contracts[this.props.contractId];\n    const contractValue = drizzleState.contracts[this.props.contractId].contractValueInWei[this.state.contractValueIndex];\n    const amountToSend = this.props.contractId === \"DynamicProgPayETH\" ? contractValue.value : 0;\n    const stackIdDep = contract.methods['initialDeposit'].cacheSend({\n      from: drizzleState.accounts[0],\n      value: amountToSend\n    });\n    this.setState({\n      stackIdDep\n    });\n  }\n\n  getStatusDep() {\n    const {\n      transactions,\n      transactionStack\n    } = this.props.drizzleState; // get the transaction hash using our saved `stackId`\n\n    const txHash = transactionStack[this.state.stackIdDep]; // if transaction hash does not exist, don't display anything\n\n    if (!txHash) return null;\n\n    if (transactions[txHash]) {\n      console.log(transactions[txHash].status);\n      return transactions[txHash].status;\n    }\n  }\n\n  render() {\n    const {\n      drizzle,\n      drizzleState\n    } = this.props;\n    const contract = this.props.drizzleState.contracts[this.props.contractId];\n    console.log(drizzle);\n    console.log(drizzleState);\n    console.log(this.props.contractId); //console.log(drizzle.contracts.DynamicProgPayETH.address);\n\n    let isPayer;\n    let isPayee; //console.log(\"W3 \"+web3.version.api);\n    //console.log(\"dissolve? \"+ this.state.dissolve);\n\n    /*\n      let contractTxHash = drizzle.contracts.DynamicProgPayETH.contractArtifact.networks['5777'].transactionHash;\n      let dateTimeStamp;\n      let timeStampData = web3.eth.getTransaction(contractTxHash, (err, result) =>{\n        return result;\n      }).then((result)=>{\n        //console.log(result);\n        web3.eth.getBlock(result.blockNumber, (err, result) =>{\n          return result;\n        }).then((result)=>{\n          dateTimeStamp = \"was funded on \"+ new Date(result.timestamp*1000)+\".\";\n        });\n      });\n    */\n    //console.log(drizzleState);\n\n    const payee = contract.payee[this.state.payeeIndex];\n    const payer = contract.payer[this.state.payerIndex];\n    const contractValue = contract.contractValueInWei[this.state.contractValueIndex];\n    const numberOfPayments = contract.numberOfPayments[this.state.numberOfPaymentsIndex];\n    const contractFunded = contract.contractFunded[this.state.fundedIndex];\n    const nextPayment = contract.nextPayment[this.state.nextPaymentIndex];\n    const remainingBalance = contract.remainingBalance[this.state.remainingBalanceIndex];\n    const terminated = contract.contractTerminated[this.state.terminatedIndex]; //var ethBalance = drizzleState.accountBalances[drizzleState.accounts[0]];\n\n    let ethBalance = this.state.ethBalance;\n    console.log(\"ETH Balance \" + this.state.ethBalance);\n    var approvedToTransfer;\n    var daiBalance;\n\n    if (this.props.contractId === \"DynamicProgPayDAI\") {\n      approvedToTransfer = contract.approvedToTransfer[this.state.approvedToTransferIndex];\n      daiBalance = drizzleState.contracts.DAIContract.balanceOf[this.state.accountDAIBalanceIndex];\n      console.log(approvedToTransfer && \"ATT \" + approvedToTransfer.value);\n      console.log(daiBalance && \"DAI Balance In Wei\" + daiBalance.value);\n    }\n\n    var enoughFunds;\n    var contractValue2;\n\n    if (contractValue) {\n      contractValue2 = contractValue.value;\n    }\n\n    if (contractValue && this.props.contractId === \"DynamicProgPayDAI\") {\n      daiBalance = drizzleState.contracts.DAIContract.balanceOf[this.state.accountDAIBalanceIndex];\n\n      if (daiBalance) {\n        enoughFunds = Number(daiBalance.value) >= Number(contractValue.value);\n      }\n    }\n\n    if (ethBalance && contractValue && this.props.contractId === \"DynamicProgPayETH\") {\n      //ethBalance = drizzleState.accountBalances[drizzleState.accounts[0]];\n      enoughFunds = ethBalance >= Number(contractValue.value);\n    }\n\n    console.log(\"contract value \" + contractValue2);\n    console.log(\"enoughFunds? \" + enoughFunds);\n    let currency = this.props.contractId === \"DynamicProgPayETH\" ? \"ETH\" : \"DAI\";\n\n    if (nextPayment) {//console.log(\"NP \"+nextPayment.value);\n    }\n\n    if (payer) {\n      isPayer = this.props.drizzleState.accounts[0] === payer.value; //console.log(isPayer?\"Payer\":isPayee?\"Payee\":\"Neither Payer or Payee\");\n    }\n\n    if (payee) {\n      isPayee = this.props.drizzleState.accounts[0] === payee.value; //console.log(isPayer?\"Payer\":isPayee?\"Payee\":\"Neither Payer or Payee\");\n    }\n\n    const etherscanURL = \"https://www.etherscan.io/address/\" + drizzle.contracts.DynamicProgPayETH.address;\n    let statusDep = this.getStatusDep();\n    let statusAppDep = this.getStatusAppDep();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }\n    }, \"DecentPay\", /*#__PURE__*/React.createElement(\"small\", {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }\n    }, \" simple transparent progress payments\"))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }\n    }, \" Dashboard for \", currency, \" contract \", /*#__PURE__*/React.createElement(\"small\", {\n      className: \"text-muted font-weight-lighter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 48\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: etherscanURL,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 98\n      }\n    }, drizzle.contracts.DynamicProgPayETH.address))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }\n    }), payer && isPayer === true && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-info\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"alert-heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }\n    }, \"You are the \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 53\n      }\n    }, \"payer\"), \" on this contract!\"), \" \", /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 89\n      }\n    }, \"The \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 96\n      }\n    }, \"payee\"), \" is \", payee && payee.value, \".\"), currency === \"DAI\" && /*#__PURE__*/React.createElement(\"small\", {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }\n    }, \"DAI Balance: $\", daiBalance && parseFloat(web3.utils.fromWei(daiBalance.value.toString(), 'ether')).toFixed(3), !enoughFunds && contractFunded && contractFunded.value === false ? \" (Insufficient DAI to Fund)\" : \"\"), currency === \"ETH\" && /*#__PURE__*/React.createElement(\"small\", {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }\n    }, \"Balance: \", ethBalance && parseFloat(web3.utils.fromWei(ethBalance.toString(), 'ether')).toFixed(3), \"\\u039E \", !enoughFunds && contractFunded && contractFunded.value === false && terminated && !terminated.value ? \" (Insufficient ETH to Fund)\" : \"\"))), payee && isPayee === true && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-info\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"alert-heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }\n    }, \"You are the \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 51\n      }\n    }, \"payee\"), \" on this contract!\"), \" \", /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 87\n      }\n    }, \"The \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 94\n      }\n    }, \"payer\"), \" is \", payer && payer.value, \".\"), currency === \"DAI\" && /*#__PURE__*/React.createElement(\"small\", {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }\n    }, \"DAI Balance: $\", daiBalance && parseFloat(web3.utils.fromWei(daiBalance.value.toString(), 'ether')).toFixed(3)), currency === \"ETH\" && /*#__PURE__*/React.createElement(\"small\", {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }\n    }, \"Balance: \", ethBalance && parseFloat(web3.utils.fromWei(ethBalance.toString(), 'ether')).toFixed(3), \"\\u039E\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-secondary\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"alert-heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 7\n      }\n    }, \"Contract Funded?\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 7\n      }\n    }), contractFunded && contractFunded.value === false ? payer && isPayer === true && contractFunded && contractFunded.value === false && terminated && terminated.value === false ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-secondary btn-sm\",\n      onClick: approvedToTransfer && approvedToTransfer.value === false ? this.handleApproveDeposit : this.handleInitialDeposit,\n      disabled: statusAppDep === \"pending\" || statusDep === \"pending\" || !enoughFunds ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }\n    }, approvedToTransfer && approvedToTransfer.value === false && !statusAppDep ? \"Approve Deposit\" : !statusDep ? 'Fund Contract' : statusDep === \"success\" || statusAppDep === \"success\" ? 'Success!' : \"Processing\")) : \"No\" : \"Yes\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: terminated && terminated.value === false ? \"alert alert-success\" : \"alert alert-danger\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"alert-heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 7\n      }\n    }, \"Contract Status\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 7\n      }\n    }), terminated && terminated.value === false ? \"Active\" : \"Terminated\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-secondary\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"alert-heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 7\n      }\n    }, \"Contract Value\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 7\n      }\n    }), this.props.contractId === \"DynamicProgPayETH\" ? \"\" : \"$\", contractValue && parseFloat(web3.utils.fromWei(contractValue.value.toString(), 'ether')).toFixed(3), this.props.contractId === \"DynamicProgPayETH\" ? \"Ξ\" : \"\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-secondary\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"alert-heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 7\n      }\n    }, \"Remaining Balance\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 7\n      }\n    }), (contractFunded && contractFunded.value === true || terminated && terminated.value === true) && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }\n    }, this.props.contractId === \"DynamicProgPayETH\" ? \"\" : \"$\", remainingBalance && parseFloat(web3.utils.fromWei(remainingBalance.value.toString(), 'ether')).toFixed(3), this.props.contractId === \"DynamicProgPayETH\" ? \"Ξ\" : \"\"), contractFunded && contractFunded.value === false && terminated && !terminated.value && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 7\n      }\n    }, \"Waiting for Funding\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-secondary\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"alert-heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 7\n      }\n    }, \"Number of Payments\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 7\n      }\n    }), numberOfPayments && numberOfPayments.value)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-secondary\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"alert-heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 7\n      }\n    }, \"Next Payment Number\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 7\n      }\n    }), nextPayment && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }\n    }, nextPayment && Number(nextPayment.value) === 0 ? \"Finished\" : nextPayment.value)))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 7\n      }\n    })), numberOfPayments && contractFunded && contractFunded.value === true && contractValue && numberOfPayments && /*#__PURE__*/React.createElement(ShowPaymentTable, {\n      drizzle: this.props.drizzle,\n      drizzleState: this.props.drizzleState,\n      indexes: this.state,\n      numberOfPayments: numberOfPayments.value,\n      contractValue: contractValue.value,\n      contractId: this.props.contractId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 7\n      }\n    }), this.state.dissolve && contractFunded && contractFunded.value === true && nextPayment && /*#__PURE__*/React.createElement(DissolveFunctions, {\n      drizzle: this.props.drizzle,\n      drizzleState: this.props.drizzleState,\n      indexes: this.state,\n      nextPayment: nextPayment.value,\n      contractId: this.props.contractId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 5\n      }\n    }), contractFunded && contractFunded.value === true && /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleDissolveFunctionsToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 5\n      }\n    }, this.state.dissolve ? \"Hide Dissolve Functions\" : \"Show Dissolve Functions\"))));\n  }\n\n}\n\nexport default GetContractInfo;","map":{"version":3,"sources":["/Users/erick/eth/progpay/client/src/GetContractInfo.js"],"names":["React","ShowPaymentTable","DissolveFunctions","Web3","web3","givenProvider","GetContractInfo","Component","constructor","props","state","dissolve","ethBalance","handleApproveDeposit","bind","handleInitialDeposit","handleDissolveFunctionsToggle","componentDidMount","drizzle","drizzleState","contract","contracts","contractId","payeeIndex","methods","cacheCall","payerIndex","contractValueIndex","numberOfPaymentsIndex","fundedIndex","nextPaymentIndex","remainingBalanceIndex","terminatedIndex","approvedToTransferIndex","accountDAIBalanceIndex","DAIContract","accounts","setState","setInterval","eth","getBalance","then","result","contractValue","contractValueInWei","console","log","address","stackIdAppDep","cacheSend","value","from","getStatusAppDep","transactions","transactionStack","txHash","stackIdDep","status","amountToSend","getStatusDep","render","isPayer","isPayee","payee","payer","numberOfPayments","contractFunded","nextPayment","remainingBalance","terminated","contractTerminated","approvedToTransfer","daiBalance","balanceOf","enoughFunds","contractValue2","Number","currency","etherscanURL","DynamicProgPayETH","statusDep","statusAppDep","parseFloat","utils","fromWei","toString","toFixed"],"mappings":"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","sourcesContent":["\nimport React from \"react\";\nimport ShowPaymentTable from \"./ShowPaymentTable\";\nimport DissolveFunctions from \"./DissolveFunctions\";\n\nimport Web3 from 'web3';\nconst web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n\nclass GetContractInfo extends React.Component {\n\nconstructor(props){\n  super(props);\n  this.state = {dissolve:false, ethBalance:null};\n  this.handleApproveDeposit = this.handleApproveDeposit.bind(this);\n  this.handleInitialDeposit = this.handleInitialDeposit.bind(this);\n  this.handleDissolveFunctionsToggle = this.handleDissolveFunctionsToggle.bind(this);\n}\n\n\n\n componentDidMount() {\n    //access drizzle props within componentDidMount\n    const {drizzle} = this.props;\n    const {drizzleState} = this.props;\n\n    const contract = drizzle.contracts[this.props.contractId];\n\n\n\n    var payeeIndex = contract.methods[\"payee\"].cacheCall();\n    var payerIndex = contract.methods[\"payer\"].cacheCall();\n    var contractValueIndex = contract.methods[\"contractValueInWei\"].cacheCall();\n    var numberOfPaymentsIndex = contract.methods[\"numberOfPayments\"].cacheCall();\n    var fundedIndex = contract.methods[\"contractFunded\"].cacheCall();\n    var nextPaymentIndex = contract.methods[\"nextPayment\"].cacheCall();\n    var remainingBalanceIndex = contract.methods[\"remainingBalance\"].cacheCall();\n    var terminatedIndex = contract.methods[\"contractTerminated\"].cacheCall();\n    //var ethBalance = drizzleState.accountBalances[drizzleState.accounts[0]];\n\n    if (this.props.contractId===\"DynamicProgPayDAI\") {\n      var approvedToTransferIndex = contract.methods[\"approvedToTransfer\"].cacheCall();\n      var accountDAIBalanceIndex = drizzle.contracts.DAIContract.methods['balanceOf'].cacheCall(drizzleState.accounts[0]);\n      this.setState({approvedToTransferIndex, accountDAIBalanceIndex});\n    }\n    var ethBalance;\n    setInterval(()=>{\n    web3.eth.getBalance(drizzleState.accounts[0])\n    .then((result)=>{\n      this.setState({ethBalance:result});\n    });\n  },1000);\n\n    this.setState({payeeIndex, payerIndex, contractValueIndex, numberOfPaymentsIndex, fundedIndex, nextPaymentIndex, remainingBalanceIndex, terminatedIndex});\n }\n\nhandleDissolveFunctionsToggle(){\n  this.setState({dissolve:!this.state.dissolve});\n}\n\n handleApproveDeposit(){\n   const {drizzle, drizzleState} = this.props;\n   const contract = drizzle.contracts[this.props.contractId];\n   const contractValue = drizzleState.contracts[this.props.contractId].contractValueInWei[this.state.contractValueIndex];\n   console.log(\"contract address: \"+contract.address+\" contractValue: \"+contractValue);\n   const stackIdAppDep = drizzle.contracts.DAIContract.methods['approve'].cacheSend(contract.address, contractValue.value, {from: drizzleState.accounts[0], value:0});\n   this.setState({ stackIdAppDep });\n }\n\n getStatusAppDep(){\n   const { transactions, transactionStack } = this.props.drizzleState;\n   // get the transaction hash using our saved `stackId`\n   const txHash = transactionStack[this.state.stackIdDep];\n   // if transaction hash does not exist, don't display anything\n   if (!txHash) return null;\n\n   if (transactions[txHash]){\n   console.log(transactions[txHash].status);\n   return transactions[txHash].status;\n  }\n }\n handleInitialDeposit(){\n   const {drizzle, drizzleState} = this.props;\n   const contract = drizzle.contracts[this.props.contractId];\n   const contractValue = drizzleState.contracts[this.props.contractId].contractValueInWei[this.state.contractValueIndex];\n   const amountToSend = this.props.contractId===\"DynamicProgPayETH\"?contractValue.value:0;\n   const stackIdDep = contract.methods['initialDeposit'].cacheSend({from: drizzleState.accounts[0], value:amountToSend});\n   this.setState({ stackIdDep });\n }\n\n\n getStatusDep(){\n   const { transactions, transactionStack } = this.props.drizzleState;\n   // get the transaction hash using our saved `stackId`\n   const txHash = transactionStack[this.state.stackIdDep];\n   // if transaction hash does not exist, don't display anything\n   if (!txHash) return null;\n\n   if (transactions[txHash]){\n   console.log(transactions[txHash].status);\n   return transactions[txHash].status;\n  }\n }\n\nrender() {\n  const { drizzle, drizzleState } = this.props;\n  const contract = this.props.drizzleState.contracts[this.props.contractId];\n  console.log(drizzle);\n  console.log(drizzleState);\n  console.log(this.props.contractId);\n  //console.log(drizzle.contracts.DynamicProgPayETH.address);\n  let isPayer;\n  let isPayee;\n  //console.log(\"W3 \"+web3.version.api);\n  //console.log(\"dissolve? \"+ this.state.dissolve);\n\n/*\n  let contractTxHash = drizzle.contracts.DynamicProgPayETH.contractArtifact.networks['5777'].transactionHash;\n  let dateTimeStamp;\n  let timeStampData = web3.eth.getTransaction(contractTxHash, (err, result) =>{\n    return result;\n  }).then((result)=>{\n    //console.log(result);\n    web3.eth.getBlock(result.blockNumber, (err, result) =>{\n      return result;\n    }).then((result)=>{\n      dateTimeStamp = \"was funded on \"+ new Date(result.timestamp*1000)+\".\";\n    });\n  });\n*/\n\n\n\n  //console.log(drizzleState);\n  const payee = contract.payee[this.state.payeeIndex];\n  const payer = contract.payer[this.state.payerIndex];\n  const contractValue = contract.contractValueInWei[this.state.contractValueIndex];\n  const numberOfPayments = contract.numberOfPayments[this.state.numberOfPaymentsIndex];\n  const contractFunded = contract.contractFunded[this.state.fundedIndex];\n  const nextPayment = contract.nextPayment[this.state.nextPaymentIndex];\n  const remainingBalance = contract.remainingBalance[this.state.remainingBalanceIndex];\n  const terminated = contract.contractTerminated[this.state.terminatedIndex];\n\n  //var ethBalance = drizzleState.accountBalances[drizzleState.accounts[0]];\n\n  let ethBalance = this.state.ethBalance;\n  console.log(\"ETH Balance \"+this.state.ethBalance);\n  var approvedToTransfer;\n  var daiBalance;\n\n  if (this.props.contractId===\"DynamicProgPayDAI\"){\n    approvedToTransfer = contract.approvedToTransfer[this.state.approvedToTransferIndex];\n    daiBalance = drizzleState.contracts.DAIContract.balanceOf[this.state.accountDAIBalanceIndex];\n    console.log(approvedToTransfer && \"ATT \"+approvedToTransfer.value);\n    console.log(daiBalance && \"DAI Balance In Wei\"+daiBalance.value);\n  }\n\n  var enoughFunds;\n  var contractValue2;\n  if (contractValue){\n    contractValue2 = contractValue.value;\n  }\n  if (contractValue && this.props.contractId===\"DynamicProgPayDAI\"){\n    daiBalance = drizzleState.contracts.DAIContract.balanceOf[this.state.accountDAIBalanceIndex];\n    if (daiBalance){\n      enoughFunds = Number(daiBalance.value) >= Number(contractValue.value);\n    }\n  }\n\n  if (ethBalance && contractValue && this.props.contractId===\"DynamicProgPayETH\"){\n    //ethBalance = drizzleState.accountBalances[drizzleState.accounts[0]];\n    enoughFunds = ethBalance >= Number(contractValue.value);\n  }\n  console.log(\"contract value \"+contractValue2);\n  console.log(\"enoughFunds? \"+enoughFunds);\n\n  let currency = this.props.contractId===\"DynamicProgPayETH\"?\"ETH\":\"DAI\";\n\n  if (nextPayment){\n    //console.log(\"NP \"+nextPayment.value);\n  }\n\n  if (payer){\n    isPayer = this.props.drizzleState.accounts[0]===payer.value;\n    //console.log(isPayer?\"Payer\":isPayee?\"Payee\":\"Neither Payer or Payee\");\n  }\n\n  if (payee){\n    isPayee = this.props.drizzleState.accounts[0]===payee.value;\n    //console.log(isPayer?\"Payer\":isPayee?\"Payee\":\"Neither Payer or Payee\");\n  }\n\n  const etherscanURL = \"https://www.etherscan.io/address/\"+ drizzle.contracts.DynamicProgPayETH.address;\n\n\n  let statusDep = this.getStatusDep();\n  let statusAppDep = this.getStatusAppDep();\n\n\n    return (\n      <div className=\"container mt-5\">\n      <div className=\"jumbotron\">\n      <div>\n        <div>\n        <h2>DecentPay\n          <small className=\"text-muted\"> simple transparent progress payments</small></h2>\n        </div>\n        <br/>\n        <h4> Dashboard for {currency} contract <small className=\"text-muted font-weight-lighter\"><a href={etherscanURL}>{drizzle.contracts.DynamicProgPayETH.address}</a></small></h4>\n        <br/>\n        <hr/>\n        <br/>\n        {payer && isPayer===true &&\n          <div className=\"container\">\n          <div className=\"alert alert-info\" role=\"alert\">\n          <h5 className=\"alert-heading\">You are the <i>payer</i> on this contract!</h5> <p>The <i>payee</i> is {payee && payee.value}.</p>\n          {currency === \"DAI\" &&\n          <small className=\"text-muted\">DAI Balance: ${daiBalance && parseFloat((web3.utils.fromWei((daiBalance.value).toString(), 'ether'))).toFixed(3)}{!enoughFunds && (contractFunded && contractFunded.value===false)?\" (Insufficient DAI to Fund)\":\"\"}</small>\n          }\n          {currency===\"ETH\" &&\n          <small className=\"text-muted\">Balance: {ethBalance && parseFloat((web3.utils.fromWei((ethBalance).toString(), 'ether'))).toFixed(3)}Ξ {!enoughFunds && (contractFunded && contractFunded.value===false) && (terminated && !terminated.value)?\" (Insufficient ETH to Fund)\":\"\"}</small>\n          }\n          </div>\n          </div>\n          }\n        {payee && isPayee===true &&\n        <div className=\"container\">\n        <div className=\"alert alert-info\" role=\"alert\">\n        <h5 className=\"alert-heading\">You are the <i>payee</i> on this contract!</h5> <p>The <i>payer</i> is {payer && payer.value}.</p>\n        {currency===\"DAI\" &&\n        <small className=\"text-muted\">DAI Balance: ${daiBalance && parseFloat((web3.utils.fromWei((daiBalance.value).toString(), 'ether'))).toFixed(3)}</small>\n        }\n        {currency===\"ETH\" &&\n        <small className=\"text-muted\">Balance: {ethBalance && parseFloat((web3.utils.fromWei((ethBalance).toString(), 'ether'))).toFixed(3)}Ξ</small>\n        }\n        </div>\n        </div>\n      }\n\n      <div className=\"container\">\n      <div className=\"row text-center\">\n\n      <div className=\"col\">\n      <div className=\"alert alert-secondary\" role=\"alert\">\n      <h6 className=\"alert-heading\">Contract Funded?</h6>\n      <hr/>\n      {contractFunded && contractFunded.value===false?(payer && isPayer===true && contractFunded && contractFunded.value===false && terminated && terminated.value===false)?\n        <div>\n          <button\n          className=\"btn btn-secondary btn-sm\"\n          onClick={approvedToTransfer && approvedToTransfer.value===false?this.handleApproveDeposit:this.handleInitialDeposit}\n          disabled = {statusAppDep ===\"pending\" || statusDep===\"pending\" || !enoughFunds ?true:false}>\n          {approvedToTransfer && approvedToTransfer.value===false && !statusAppDep?\"Approve Deposit\": !statusDep?'Fund Contract':statusDep===\"success\" || statusAppDep===\"success\"?'Success!':\"Processing\"}\n          </button>\n        </div>:\"No\":\"Yes\"}\n      </div>\n      </div>\n\n      <div className=\"col\">\n      <div className={terminated && terminated.value===false?\"alert alert-success\":\"alert alert-danger\"} role=\"alert\">\n      <h6 className=\"alert-heading\">Contract Status</h6>\n      <hr/>\n      {terminated && terminated.value===false?\"Active\":\"Terminated\"}\n      </div>\n      </div>\n      </div>\n      </div>\n\n      <div className=\"container\">\n      <div className=\"row text-center\">\n      <div className=\"col\">\n      <div className=\"alert alert-secondary\" role=\"alert\">\n      <h6 className=\"alert-heading\">Contract Value</h6>\n      <hr/>\n      {this.props.contractId===\"DynamicProgPayETH\"?\"\":\"$\"}{contractValue && parseFloat((web3.utils.fromWei((contractValue.value).toString(), 'ether'))).toFixed(3)}{this.props.contractId===\"DynamicProgPayETH\"?\"Ξ\":\"\"}\n      </div>\n      </div>\n\n      <div className=\"col\">\n      <div className={\"alert alert-secondary\"} role=\"alert\">\n      <h6 className=\"alert-heading\">Remaining Balance</h6>\n      <hr/>\n      {((contractFunded && contractFunded.value===true) || (terminated && terminated.value===true)) &&\n        <div>\n        {this.props.contractId===\"DynamicProgPayETH\"?\"\":\"$\"}{remainingBalance && parseFloat((web3.utils.fromWei((remainingBalance.value).toString(), 'ether'))).toFixed(3)}{this.props.contractId===\"DynamicProgPayETH\"?\"Ξ\":\"\"}\n        </div>\n      }\n      {contractFunded && contractFunded.value===false && terminated && !terminated.value &&\n      <div>\n      Waiting for Funding\n      </div>\n      }\n      </div>\n      </div>\n\n      <div className=\"col\">\n      <div className=\"alert alert-secondary\" role=\"alert\">\n      <h6 className=\"alert-heading\">Number of Payments</h6>\n      <hr/>\n      {numberOfPayments && numberOfPayments.value}\n      </div>\n      </div>\n\n      <div className=\"col\">\n      <div className={\"alert alert-secondary\"} role=\"alert\">\n      <h6 className=\"alert-heading\">Next Payment Number</h6>\n      <hr/>\n      {nextPayment &&\n        <div>\n          {nextPayment && Number(nextPayment.value)===0?\"Finished\":nextPayment.value}\n          </div>\n      }\n      </div>\n      </div>\n\n      </div>\n      <br/>\n      <br/>\n      </div>\n\n\n\n    { numberOfPayments && contractFunded && contractFunded.value===true && contractValue && numberOfPayments &&\n      <ShowPaymentTable\n      drizzle={this.props.drizzle}\n      drizzleState={this.props.drizzleState}\n      indexes={this.state}\n      numberOfPayments={numberOfPayments.value}\n      contractValue={contractValue.value}\n      contractId = {this.props.contractId}\n      />\n    }\n\n    { this.state.dissolve && contractFunded && contractFunded.value===true && nextPayment &&\n      <DissolveFunctions\n      drizzle={this.props.drizzle}\n      drizzleState={this.props.drizzleState}\n      indexes={this.state}\n      nextPayment={nextPayment.value}\n      contractId={this.props.contractId}\n      />\n    }\n    <br/>\n    <br/>\n    { contractFunded && contractFunded.value===true &&\n    <button onClick={this.handleDissolveFunctionsToggle}>{this.state.dissolve?\"Hide Dissolve Functions\":\"Show Dissolve Functions\"}</button>\n    }\n      </div>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default GetContractInfo;\n"]},"metadata":{},"sourceType":"module"}