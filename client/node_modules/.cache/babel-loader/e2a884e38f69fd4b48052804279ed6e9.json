{"ast":null,"code":"/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n/** @file WebsocketProvider.js\n * @authors:\n *   Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\"use strict\";\n\nvar _ = require('underscore');\n\nvar errors = require('web3-core-helpers').errors;\n\nvar Ws = null;\nvar _btoa = null;\nvar parseURL = null;\n\nif (typeof window !== 'undefined' && typeof window.WebSocket !== 'undefined') {\n  Ws = window.WebSocket;\n  _btoa = btoa;\n\n  parseURL = function (url) {\n    return new URL(url);\n  };\n} else {\n  Ws = require('websocket').w3cwebsocket;\n\n  _btoa = function (str) {\n    return Buffer(str).toString('base64');\n  };\n\n  var url = require('url');\n\n  if (url.URL) {\n    // Use the new Node 6+ API for parsing URLs that supports username/password\n    var newURL = url.URL;\n\n    parseURL = function (url) {\n      return new newURL(url);\n    };\n  } else {\n    // Web3 supports Node.js 5, so fall back to the legacy URL API if necessary\n    parseURL = require('url').parse;\n  }\n} // Default connection ws://localhost:8546\n\n\nvar WebsocketProvider = function WebsocketProvider(url, options) {\n  var _this = this;\n\n  this.responseCallbacks = {};\n  this.notificationCallbacks = [];\n  options = options || {};\n  this._customTimeout = options.timeout; // The w3cwebsocket implementation does not support Basic Auth\n  // username/password in the URL. So generate the basic auth header, and\n  // pass through with any additional headers supplied in constructor\n\n  var parsedURL = parseURL(url);\n  var headers = options.headers || {};\n  var protocol = options.protocol || undefined;\n\n  if (parsedURL.username && parsedURL.password) {\n    headers.authorization = 'Basic ' + _btoa(parsedURL.username + ':' + parsedURL.password);\n  }\n\n  this.connection = new Ws(url, protocol, undefined, headers);\n  this.addDefaultEvents(); // LISTEN FOR CONNECTION RESPONSES\n\n  this.connection.onmessage = function (e) {\n    /*jshint maxcomplexity: 6 */\n    var data = typeof e.data === 'string' ? e.data : '';\n\n    _this._parseResponse(data).forEach(function (result) {\n      var id = null; // get the id which matches the returned id\n\n      if (_.isArray(result)) {\n        result.forEach(function (load) {\n          if (_this.responseCallbacks[load.id]) id = load.id;\n        });\n      } else {\n        id = result.id;\n      } // notification\n\n\n      if (!id && result.method.indexOf('_subscription') !== -1) {\n        _this.notificationCallbacks.forEach(function (callback) {\n          if (_.isFunction(callback)) callback(result);\n        }); // fire the callback\n\n      } else if (_this.responseCallbacks[id]) {\n        _this.responseCallbacks[id](null, result);\n\n        delete _this.responseCallbacks[id];\n      }\n    });\n  }; // make property `connected` which will return the current connection status\n\n\n  Object.defineProperty(this, 'connected', {\n    get: function () {\n      return this.connection && this.connection.readyState === this.connection.OPEN;\n    },\n    enumerable: true\n  });\n};\n/**\n Will add the error and end event to timeout existing calls\n\n @method addDefaultEvents\n */\n\n\nWebsocketProvider.prototype.addDefaultEvents = function () {\n  var _this = this;\n\n  this.connection.onerror = function () {\n    _this._timeout();\n  };\n\n  this.connection.onclose = function () {\n    _this._timeout(); // reset all requests and callbacks\n\n\n    _this.reset();\n  }; // this.connection.on('timeout', function(){\n  //     _this._timeout();\n  // });\n\n};\n/**\n Will parse the response and make an array out of it.\n\n @method _parseResponse\n @param {String} data\n */\n\n\nWebsocketProvider.prototype._parseResponse = function (data) {\n  var _this = this,\n      returnValues = []; // DE-CHUNKER\n\n\n  var dechunkedData = data.replace(/\\}[\\n\\r]?\\{/g, '}|--|{') // }{\n  .replace(/\\}\\][\\n\\r]?\\[\\{/g, '}]|--|[{') // }][{\n  .replace(/\\}[\\n\\r]?\\[\\{/g, '}|--|[{') // }[{\n  .replace(/\\}\\][\\n\\r]?\\{/g, '}]|--|{') // }]{\n  .split('|--|');\n  dechunkedData.forEach(function (data) {\n    // prepend the last chunk\n    if (_this.lastChunk) data = _this.lastChunk + data;\n    var result = null;\n\n    try {\n      result = JSON.parse(data);\n    } catch (e) {\n      _this.lastChunk = data; // start timeout to cancel all requests\n\n      clearTimeout(_this.lastChunkTimeout);\n      _this.lastChunkTimeout = setTimeout(function () {\n        _this._timeout();\n\n        throw errors.InvalidResponse(data);\n      }, 1000 * 15);\n      return;\n    } // cancel timeout and set chunk to null\n\n\n    clearTimeout(_this.lastChunkTimeout);\n    _this.lastChunk = null;\n    if (result) returnValues.push(result);\n  });\n  return returnValues;\n};\n/**\n Adds a callback to the responseCallbacks object,\n which will be called if a response matching the response Id will arrive.\n\n @method _addResponseCallback\n */\n\n\nWebsocketProvider.prototype._addResponseCallback = function (payload, callback) {\n  var id = payload.id || payload[0].id;\n  var method = payload.method || payload[0].method;\n  this.responseCallbacks[id] = callback;\n  this.responseCallbacks[id].method = method;\n\n  var _this = this; // schedule triggering the error response if a custom timeout is set\n\n\n  if (this._customTimeout) {\n    setTimeout(function () {\n      if (_this.responseCallbacks[id]) {\n        _this.responseCallbacks[id](errors.ConnectionTimeout(_this._customTimeout));\n\n        delete _this.responseCallbacks[id];\n      }\n    }, this._customTimeout);\n  }\n};\n/**\n Timeout all requests when the end/error event is fired\n\n @method _timeout\n */\n\n\nWebsocketProvider.prototype._timeout = function () {\n  for (var key in this.responseCallbacks) {\n    if (this.responseCallbacks.hasOwnProperty(key)) {\n      this.responseCallbacks[key](errors.InvalidConnection('on WS'));\n      delete this.responseCallbacks[key];\n    }\n  }\n};\n\nWebsocketProvider.prototype.send = function (payload, callback) {\n  var _this = this;\n\n  if (this.connection.readyState === this.connection.CONNECTING) {\n    setTimeout(function () {\n      _this.send(payload, callback);\n    }, 10);\n    return;\n  } // try reconnect, when connection is gone\n  // if(!this.connection.writable)\n  //     this.connection.connect({url: this.url});\n\n\n  if (this.connection.readyState !== this.connection.OPEN) {\n    console.error('connection not open on send()');\n\n    if (typeof this.connection.onerror === 'function') {\n      this.connection.onerror(new Error('connection not open'));\n    } else {\n      console.error('no error callback');\n    }\n\n    callback(new Error('connection not open'));\n    return;\n  }\n\n  this.connection.send(JSON.stringify(payload));\n\n  this._addResponseCallback(payload, callback);\n};\n/**\n Subscribes to provider events.provider\n\n @method on\n @param {String} type    'notifcation', 'connect', 'error', 'end' or 'data'\n @param {Function} callback   the callback to call\n */\n\n\nWebsocketProvider.prototype.on = function (type, callback) {\n  if (typeof callback !== 'function') throw new Error('The second parameter callback must be a function.');\n\n  switch (type) {\n    case 'data':\n      this.notificationCallbacks.push(callback);\n      break;\n\n    case 'connect':\n      this.connection.onopen = callback;\n      break;\n\n    case 'end':\n      this.connection.onclose = callback;\n      break;\n\n    case 'error':\n      this.connection.onerror = callback;\n      break;\n    // default:\n    //     this.connection.on(type, callback);\n    //     break;\n  }\n}; // TODO add once\n\n/**\n Removes event listener\n\n @method removeListener\n @param {String} type    'notifcation', 'connect', 'error', 'end' or 'data'\n @param {Function} callback   the callback to call\n */\n\n\nWebsocketProvider.prototype.removeListener = function (type, callback) {\n  var _this = this;\n\n  switch (type) {\n    case 'data':\n      this.notificationCallbacks.forEach(function (cb, index) {\n        if (cb === callback) _this.notificationCallbacks.splice(index, 1);\n      });\n      break;\n    // TODO remvoving connect missing\n    // default:\n    //     this.connection.removeListener(type, callback);\n    //     break;\n  }\n};\n/**\n Removes all event listeners\n\n @method removeAllListeners\n @param {String} type    'notifcation', 'connect', 'error', 'end' or 'data'\n */\n\n\nWebsocketProvider.prototype.removeAllListeners = function (type) {\n  switch (type) {\n    case 'data':\n      this.notificationCallbacks = [];\n      break;\n    // TODO remvoving connect properly missing\n\n    case 'connect':\n      this.connection.onopen = null;\n      break;\n\n    case 'end':\n      this.connection.onclose = null;\n      break;\n\n    case 'error':\n      this.connection.onerror = null;\n      break;\n\n    default:\n      // this.connection.removeAllListeners(type);\n      break;\n  }\n};\n/**\n Resets the providers, clears all callbacks\n\n @method reset\n */\n\n\nWebsocketProvider.prototype.reset = function () {\n  this._timeout();\n\n  this.notificationCallbacks = []; // this.connection.removeAllListeners('error');\n  // this.connection.removeAllListeners('end');\n  // this.connection.removeAllListeners('timeout');\n\n  this.addDefaultEvents();\n};\n\nmodule.exports = WebsocketProvider;","map":{"version":3,"sources":["/Users/erick/eth/progpay/client/node_modules/drizzle/node_modules/web3-providers-ws/src/index.js"],"names":["_","require","errors","Ws","_btoa","parseURL","window","WebSocket","btoa","url","URL","w3cwebsocket","str","Buffer","toString","newURL","parse","WebsocketProvider","options","_this","responseCallbacks","notificationCallbacks","_customTimeout","timeout","parsedURL","headers","protocol","undefined","username","password","authorization","connection","addDefaultEvents","onmessage","e","data","_parseResponse","forEach","result","id","isArray","load","method","indexOf","callback","isFunction","Object","defineProperty","get","readyState","OPEN","enumerable","prototype","onerror","_timeout","onclose","reset","returnValues","dechunkedData","replace","split","lastChunk","JSON","clearTimeout","lastChunkTimeout","setTimeout","InvalidResponse","push","_addResponseCallback","payload","ConnectionTimeout","key","hasOwnProperty","InvalidConnection","send","CONNECTING","console","error","Error","stringify","on","type","onopen","removeListener","cb","index","splice","removeAllListeners","module","exports"],"mappings":"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","sourcesContent":["/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/** @file WebsocketProvider.js\n * @authors:\n *   Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\n\"use strict\";\n\nvar _ = require('underscore');\nvar errors = require('web3-core-helpers').errors;\n\nvar Ws = null;\nvar _btoa = null;\nvar parseURL = null;\nif (typeof window !== 'undefined' && typeof window.WebSocket !== 'undefined') {\n    Ws = window.WebSocket;\n    _btoa = btoa;\n    parseURL = function(url) {\n        return new URL(url);\n    };\n} else {\n    Ws = require('websocket').w3cwebsocket;\n    _btoa = function(str) {\n      return Buffer(str).toString('base64');\n    };\n    var url = require('url');\n    if (url.URL) {\n        // Use the new Node 6+ API for parsing URLs that supports username/password\n        var newURL = url.URL;\n        parseURL = function(url) {\n            return new newURL(url);\n        };\n    }\n    else {\n        // Web3 supports Node.js 5, so fall back to the legacy URL API if necessary\n        parseURL = require('url').parse;\n    }\n}\n// Default connection ws://localhost:8546\n\n\n\n\nvar WebsocketProvider = function WebsocketProvider(url, options)  {\n    var _this = this;\n    this.responseCallbacks = {};\n    this.notificationCallbacks = [];\n\n    options = options || {};\n    this._customTimeout = options.timeout;\n\n    // The w3cwebsocket implementation does not support Basic Auth\n    // username/password in the URL. So generate the basic auth header, and\n    // pass through with any additional headers supplied in constructor\n    var parsedURL = parseURL(url);\n    var headers = options.headers || {};\n    var protocol = options.protocol || undefined;\n    if (parsedURL.username && parsedURL.password) {\n        headers.authorization = 'Basic ' + _btoa(parsedURL.username + ':' + parsedURL.password);\n    }\n\n    this.connection = new Ws(url, protocol, undefined, headers);\n\n    this.addDefaultEvents();\n\n\n    // LISTEN FOR CONNECTION RESPONSES\n    this.connection.onmessage = function(e) {\n        /*jshint maxcomplexity: 6 */\n        var data = (typeof e.data === 'string') ? e.data : '';\n\n        _this._parseResponse(data).forEach(function(result){\n\n            var id = null;\n\n            // get the id which matches the returned id\n            if(_.isArray(result)) {\n                result.forEach(function(load){\n                    if(_this.responseCallbacks[load.id])\n                        id = load.id;\n                });\n            } else {\n                id = result.id;\n            }\n\n            // notification\n            if(!id && result.method.indexOf('_subscription') !== -1) {\n                _this.notificationCallbacks.forEach(function(callback){\n                    if(_.isFunction(callback))\n                        callback(result);\n                });\n\n                // fire the callback\n            } else if(_this.responseCallbacks[id]) {\n                _this.responseCallbacks[id](null, result);\n                delete _this.responseCallbacks[id];\n            }\n        });\n    };\n\n    // make property `connected` which will return the current connection status\n    Object.defineProperty(this, 'connected', {\n      get: function () {\n        return this.connection && this.connection.readyState === this.connection.OPEN;\n      },\n      enumerable: true,\n  });\n};\n\n/**\n Will add the error and end event to timeout existing calls\n\n @method addDefaultEvents\n */\nWebsocketProvider.prototype.addDefaultEvents = function(){\n    var _this = this;\n\n    this.connection.onerror = function(){\n        _this._timeout();\n    };\n\n    this.connection.onclose = function(){\n        _this._timeout();\n\n        // reset all requests and callbacks\n        _this.reset();\n    };\n\n    // this.connection.on('timeout', function(){\n    //     _this._timeout();\n    // });\n};\n\n/**\n Will parse the response and make an array out of it.\n\n @method _parseResponse\n @param {String} data\n */\nWebsocketProvider.prototype._parseResponse = function(data) {\n    var _this = this,\n        returnValues = [];\n\n    // DE-CHUNKER\n    var dechunkedData = data\n        .replace(/\\}[\\n\\r]?\\{/g,'}|--|{') // }{\n        .replace(/\\}\\][\\n\\r]?\\[\\{/g,'}]|--|[{') // }][{\n        .replace(/\\}[\\n\\r]?\\[\\{/g,'}|--|[{') // }[{\n        .replace(/\\}\\][\\n\\r]?\\{/g,'}]|--|{') // }]{\n        .split('|--|');\n\n    dechunkedData.forEach(function(data){\n\n        // prepend the last chunk\n        if(_this.lastChunk)\n            data = _this.lastChunk + data;\n\n        var result = null;\n\n        try {\n            result = JSON.parse(data);\n\n        } catch(e) {\n\n            _this.lastChunk = data;\n\n            // start timeout to cancel all requests\n            clearTimeout(_this.lastChunkTimeout);\n            _this.lastChunkTimeout = setTimeout(function(){\n                _this._timeout();\n                throw errors.InvalidResponse(data);\n            }, 1000 * 15);\n\n            return;\n        }\n\n        // cancel timeout and set chunk to null\n        clearTimeout(_this.lastChunkTimeout);\n        _this.lastChunk = null;\n\n        if(result)\n            returnValues.push(result);\n    });\n\n    return returnValues;\n};\n\n\n/**\n Adds a callback to the responseCallbacks object,\n which will be called if a response matching the response Id will arrive.\n\n @method _addResponseCallback\n */\nWebsocketProvider.prototype._addResponseCallback = function(payload, callback) {\n    var id = payload.id || payload[0].id;\n    var method = payload.method || payload[0].method;\n\n    this.responseCallbacks[id] = callback;\n    this.responseCallbacks[id].method = method;\n\n    var _this = this;\n\n    // schedule triggering the error response if a custom timeout is set\n    if (this._customTimeout) {\n        setTimeout(function () {\n            if (_this.responseCallbacks[id]) {\n                _this.responseCallbacks[id](errors.ConnectionTimeout(_this._customTimeout));\n                delete _this.responseCallbacks[id];\n            }\n        }, this._customTimeout);\n    }\n};\n\n/**\n Timeout all requests when the end/error event is fired\n\n @method _timeout\n */\nWebsocketProvider.prototype._timeout = function() {\n    for(var key in this.responseCallbacks) {\n        if(this.responseCallbacks.hasOwnProperty(key)){\n            this.responseCallbacks[key](errors.InvalidConnection('on WS'));\n            delete this.responseCallbacks[key];\n        }\n    }\n};\n\n\nWebsocketProvider.prototype.send = function (payload, callback) {\n    var _this = this;\n\n    if (this.connection.readyState === this.connection.CONNECTING) {\n        setTimeout(function () {\n            _this.send(payload, callback);\n        }, 10);\n        return;\n    }\n\n    // try reconnect, when connection is gone\n    // if(!this.connection.writable)\n    //     this.connection.connect({url: this.url});\n    if (this.connection.readyState !== this.connection.OPEN) {\n        console.error('connection not open on send()');\n        if (typeof this.connection.onerror === 'function') {\n            this.connection.onerror(new Error('connection not open'));\n        } else {\n            console.error('no error callback');\n        }\n        callback(new Error('connection not open'));\n        return;\n    }\n\n    this.connection.send(JSON.stringify(payload));\n    this._addResponseCallback(payload, callback);\n};\n\n/**\n Subscribes to provider events.provider\n\n @method on\n @param {String} type    'notifcation', 'connect', 'error', 'end' or 'data'\n @param {Function} callback   the callback to call\n */\nWebsocketProvider.prototype.on = function (type, callback) {\n\n    if(typeof callback !== 'function')\n        throw new Error('The second parameter callback must be a function.');\n\n    switch(type){\n        case 'data':\n            this.notificationCallbacks.push(callback);\n            break;\n\n        case 'connect':\n            this.connection.onopen = callback;\n            break;\n\n        case 'end':\n            this.connection.onclose = callback;\n            break;\n\n        case 'error':\n            this.connection.onerror = callback;\n            break;\n\n        // default:\n        //     this.connection.on(type, callback);\n        //     break;\n    }\n};\n\n// TODO add once\n\n/**\n Removes event listener\n\n @method removeListener\n @param {String} type    'notifcation', 'connect', 'error', 'end' or 'data'\n @param {Function} callback   the callback to call\n */\nWebsocketProvider.prototype.removeListener = function (type, callback) {\n    var _this = this;\n\n    switch(type){\n        case 'data':\n            this.notificationCallbacks.forEach(function(cb, index){\n                if(cb === callback)\n                    _this.notificationCallbacks.splice(index, 1);\n            });\n            break;\n\n        // TODO remvoving connect missing\n\n        // default:\n        //     this.connection.removeListener(type, callback);\n        //     break;\n    }\n};\n\n/**\n Removes all event listeners\n\n @method removeAllListeners\n @param {String} type    'notifcation', 'connect', 'error', 'end' or 'data'\n */\nWebsocketProvider.prototype.removeAllListeners = function (type) {\n    switch(type){\n        case 'data':\n            this.notificationCallbacks = [];\n            break;\n\n        // TODO remvoving connect properly missing\n\n        case 'connect':\n            this.connection.onopen = null;\n            break;\n\n        case 'end':\n            this.connection.onclose = null;\n            break;\n\n        case 'error':\n            this.connection.onerror = null;\n            break;\n\n        default:\n            // this.connection.removeAllListeners(type);\n            break;\n    }\n};\n\n/**\n Resets the providers, clears all callbacks\n\n @method reset\n */\nWebsocketProvider.prototype.reset = function () {\n    this._timeout();\n    this.notificationCallbacks = [];\n\n    // this.connection.removeAllListeners('error');\n    // this.connection.removeAllListeners('end');\n    // this.connection.removeAllListeners('timeout');\n\n    this.addDefaultEvents();\n};\n\nmodule.exports = WebsocketProvider;\n"]},"metadata":{},"sourceType":"script"}