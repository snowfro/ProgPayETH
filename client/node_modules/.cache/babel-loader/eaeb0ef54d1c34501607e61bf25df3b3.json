{"ast":null,"code":"var _jsxFileName = \"/Users/erick/eth/progpay/client/src/GetContractInfo.js\";\nimport React from \"react\";\nimport ShowPaymentTable from \"./ShowPaymentTable\";\nimport Web3 from 'web3';\nconst web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n\nclass GetContractInfo extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    //access drizzle props within componentDidMount\n    const {\n      drizzle\n    } = this.props;\n    const contract = drizzle.contracts.ProgPayETH;\n    var payeeIndex = contract.methods[\"payee\"].cacheCall();\n    var payerIndex = contract.methods[\"payer\"].cacheCall();\n    var contractValueIndex = contract.methods[\"contractValueInWei\"].cacheCall();\n    var numberOfPaymentsIndex = contract.methods[\"numberOfPayments\"].cacheCall();\n    var fundedIndex = contract.methods[\"contractFunded\"].cacheCall();\n    var nextPaymentIndex = contract.methods[\"nextPayment\"].cacheCall();\n    var remainingBalanceIndex = contract.methods[\"remainingBalance\"].cacheCall();\n    var terminatedIndex = contract.methods[\"contractTerminated\"].cacheCall();\n    this.setState({\n      payeeIndex,\n      payerIndex,\n      contractValueIndex,\n      numberOfPaymentsIndex,\n      fundedIndex,\n      nextPaymentIndex,\n      remainingBalanceIndex\n    });\n  }\n\n  render() {\n    const {\n      ProgPayETH\n    } = this.props.drizzleState.contracts;\n    let isPayer;\n    let isPayee; //console.log(ProgPayETH);\n\n    const payee = ProgPayETH.payee[this.state.payeeIndex];\n    const payer = ProgPayETH.payer[this.state.payerIndex];\n    const contractValue = ProgPayETH.contractValueInWei[this.state.contractValueIndex];\n    const numberOfPayments = ProgPayETH.numberOfPayments[this.state.numberOfPaymentsIndex];\n    const contractFunded = ProgPayETH.contractFunded[this.state.fundedIndex];\n    const nextPayment = ProgPayETH.nextPayment[this.state.nextPaymentIndex];\n    const remainingBalance = ProgPayETH.remainingBalance[this.state.remainingBalanceIndex];\n    const terminated = ProgPayETH.contractTerminated[this.state.terminatedIndex];\n\n    if (payer) {\n      isPayer = this.props.drizzleState.accounts[0] === payer.value;\n      console.log(`ispayer: ${isPayer}`);\n    }\n\n    if (payee) {\n      isPayee = this.props.drizzleState.accounts[0] === payee.value;\n      console.log(`ispayee: ${isPayee}`);\n    }\n\n    if (contractFunded) {} //console.log(contractFunded.value);\n    //console.log(payee);\n\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, payer && isPayer === true && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, \"Looks like you are the payer on this contract!\")), payee && isPayee === true && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, \"Looks like you are the payee on this contract!\")), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, \"This Contract's Payer is \", payer && payer.value, \" and the Payee is \", payee && payee.value, \".\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, \"This contract is \", contractFunded && (contractFunded.value === true ? \"\" : \"NOT YET\"), \" funded. \"), contractFunded && contractFunded.value === true && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, terminated && termianted.value === false ? \"This contract is active. \" : \"This contract has terminated.\", \" The remaining balance to be paid on this contract: \", remainingBalance && web3.utils.fromWei(remainingBalance.value.toString(), 'ether'), \"\\u039E.\")), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    }, \"The total value of this contract is \", contractValue && web3.utils.fromWei(contractValue.value.toString(), 'ether'), \"\\u039E to be paid over \", numberOfPayments && numberOfPayments.value, \" payments.\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }, \"Next payment is number \", nextPayment && nextPayment.value, \".\"), numberOfPayments && /*#__PURE__*/React.createElement(ShowPaymentTable, {\n      drizzle: this.props.drizzle,\n      drizzleState: this.props.drizzleState,\n      numberOfPayments: numberOfPayments.value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nexport default GetContractInfo;","map":{"version":3,"sources":["/Users/erick/eth/progpay/client/src/GetContractInfo.js"],"names":["React","ShowPaymentTable","Web3","web3","givenProvider","GetContractInfo","Component","state","componentDidMount","drizzle","props","contract","contracts","ProgPayETH","payeeIndex","methods","cacheCall","payerIndex","contractValueIndex","numberOfPaymentsIndex","fundedIndex","nextPaymentIndex","remainingBalanceIndex","terminatedIndex","setState","render","drizzleState","isPayer","isPayee","payee","payer","contractValue","contractValueInWei","numberOfPayments","contractFunded","nextPayment","remainingBalance","terminated","contractTerminated","accounts","value","console","log","termianted","utils","fromWei","toString"],"mappings":"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","sourcesContent":["\nimport React from \"react\";\nimport ShowPaymentTable from \"./ShowPaymentTable\";\n\nimport Web3 from 'web3';\nconst web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n\nclass GetContractInfo extends React.Component {\n\nstate = {};\n\n\n componentDidMount() {\n\n    //access drizzle props within componentDidMount\n    const { drizzle} = this.props;\n\n    const contract = drizzle.contracts.ProgPayETH;\n\n    var payeeIndex = contract.methods[\"payee\"].cacheCall();\n    var payerIndex = contract.methods[\"payer\"].cacheCall();\n    var contractValueIndex = contract.methods[\"contractValueInWei\"].cacheCall();\n    var numberOfPaymentsIndex = contract.methods[\"numberOfPayments\"].cacheCall();\n    var fundedIndex = contract.methods[\"contractFunded\"].cacheCall();\n    var nextPaymentIndex = contract.methods[\"nextPayment\"].cacheCall();\n    var remainingBalanceIndex = contract.methods[\"remainingBalance\"].cacheCall();\n    var terminatedIndex = contract.methods[\"contractTerminated\"].cacheCall();\n\n\n    this.setState({payeeIndex, payerIndex, contractValueIndex, numberOfPaymentsIndex, fundedIndex, nextPaymentIndex, remainingBalanceIndex});\n\n }\n\n\nrender() {\n  const { ProgPayETH } = this.props.drizzleState.contracts;\n  let isPayer;\n  let isPayee;\n  //console.log(ProgPayETH);\n\n  const payee = ProgPayETH.payee[this.state.payeeIndex];\n  const payer = ProgPayETH.payer[this.state.payerIndex];\n  const contractValue = ProgPayETH.contractValueInWei[this.state.contractValueIndex];\n  const numberOfPayments = ProgPayETH.numberOfPayments[this.state.numberOfPaymentsIndex];\n  const contractFunded = ProgPayETH.contractFunded[this.state.fundedIndex];\n  const nextPayment = ProgPayETH.nextPayment[this.state.nextPaymentIndex];\n  const remainingBalance = ProgPayETH.remainingBalance[this.state.remainingBalanceIndex];\n  const terminated = ProgPayETH.contractTerminated[this.state.terminatedIndex];\n\n  if (payer){\n    isPayer = this.props.drizzleState.accounts[0]===payer.value;\n    console.log(`ispayer: ${isPayer}`);\n  }\n\n  if (payee){\n    isPayee = this.props.drizzleState.accounts[0]===payee.value;\n    console.log(`ispayee: ${isPayee}`);\n  }\n\n  if (contractFunded){\n    //console.log(contractFunded.value);\n  }\n  //console.log(payee);\n    return (\n      <div>\n      {\n        payer && isPayer===true &&\n        <div>\n        <p>Looks like you are the payer on this contract!</p>\n        </div>\n      }\n      {\n        payee && isPayee===true &&\n        <div>\n        <p>Looks like you are the payee on this contract!</p>\n        </div>\n      }\n      <p>This Contract's Payer is {payer && payer.value} and the Payee is {payee && payee.value}.</p>\n      <p>This contract is {contractFunded && (contractFunded.value===true?\"\":\"NOT YET\")} funded. </p>\n      {contractFunded && contractFunded.value===true &&\n        <div>\n        <p>{terminated && termianted.value===false? \"This contract is active. \":\"This contract has terminated.\"} The remaining balance to be paid on this contract: {remainingBalance && (web3.utils.fromWei((remainingBalance.value).toString(), 'ether'))}Ξ.</p>\n        </div>\n      }\n      <p>The total value of this contract is {contractValue && (web3.utils.fromWei((contractValue.value).toString(), 'ether'))}Ξ to be paid over {numberOfPayments && numberOfPayments.value} payments.</p>\n\n      <p>Next payment is number {nextPayment && nextPayment.value}.</p>\n      {numberOfPayments &&\n      <ShowPaymentTable\n      drizzle={this.props.drizzle}\n      drizzleState={this.props.drizzleState}\n      numberOfPayments={numberOfPayments.value}\n      />\n    }\n      </div>\n    );\n  }\n}\n\nexport default GetContractInfo;\n"]},"metadata":{},"sourceType":"module"}