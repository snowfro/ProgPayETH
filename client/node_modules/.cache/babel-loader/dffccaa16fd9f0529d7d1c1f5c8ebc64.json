{"ast":null,"code":"var _jsxFileName = \"/Users/erick/eth/progpay/client/src/GetContractInfo.js\";\nimport React from \"react\";\nimport ShowPaymentTable from \"./ShowPaymentTable\";\nimport Web3 from 'web3';\nconst web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n\nclass GetContractInfo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.handleRequestPayment = this.handleRequestPayment.bind(this);\n    this.handleApprovePayment = this.handleApprovePayment.bind(this);\n    this.handleInitialDeposit = this.handleInitialDeposit.bind(this);\n  }\n\n  componentDidMount() {\n    //access drizzle props within componentDidMount\n    const {\n      drizzle\n    } = this.props;\n    const contract = drizzle.contracts.ProgPayETH;\n    var payeeIndex = contract.methods[\"payee\"].cacheCall();\n    var payerIndex = contract.methods[\"payer\"].cacheCall();\n    var contractValueIndex = contract.methods[\"contractValueInWei\"].cacheCall();\n    var numberOfPaymentsIndex = contract.methods[\"numberOfPayments\"].cacheCall();\n    var fundedIndex = contract.methods[\"contractFunded\"].cacheCall();\n    var nextPaymentIndex = contract.methods[\"nextPayment\"].cacheCall();\n    var remainingBalanceIndex = contract.methods[\"remainingBalance\"].cacheCall();\n    var terminatedIndex = contract.methods[\"contractTerminated\"].cacheCall();\n    this.setState({\n      payeeIndex,\n      payerIndex,\n      contractValueIndex,\n      numberOfPaymentsIndex,\n      fundedIndex,\n      nextPaymentIndex,\n      remainingBalanceIndex,\n      terminatedIndex\n    });\n  }\n\n  handleRequestPayment() {\n    const {\n      drizzle,\n      drizzleState\n    } = this.props;\n    const contract = drizzle.contracts.ProgPayETH;\n    const stackIdReq = contract.methods['requestPayment'].cacheSend({\n      from: drizzleState.accounts[0],\n      value: 0\n    });\n    this.setState({\n      stackIdReq\n    });\n  }\n\n  handleApprovePayment() {\n    const {\n      drizzle,\n      drizzleState\n    } = this.props;\n    const contract = drizzle.contracts.ProgPayETH;\n    const stackIdApp = contract.methods['approvePayment'].cacheSend({\n      from: drizzleState.accounts[0],\n      value: 0\n    });\n    this.setState({\n      stackIdApp\n    });\n  }\n\n  handleInitialDeposit() {\n    const {\n      drizzle,\n      drizzleState\n    } = this.props;\n    const contract = drizzle.contracts.ProgPayETH;\n    const contractValue = drizzleState.contracts.ProgPayETH.contractValueInWei[this.state.contractValueIndex]; //console.log(contractValue);\n\n    const stackIdDep = contract.methods['initialDeposit'].cacheSend({\n      from: drizzleState.accounts[0],\n      value: contractValue.value\n    });\n    this.setState({\n      stackIdDep\n    });\n  }\n\n  getStatusReq() {\n    const {\n      transactions,\n      transactionStack\n    } = this.props.drizzleState; // get the transaction hash using our saved `stackId`\n\n    const txHash = transactionStack[this.state.stackIdReq]; // if transaction hash does not exist, don't display anything\n\n    if (!txHash) return null;\n\n    if (transactions[txHash]) {\n      console.log(transactions[txHash].status);\n      return transactions[txHash].status;\n    }\n  }\n\n  getStatusApp() {\n    const {\n      transactions,\n      transactionStack\n    } = this.props.drizzleState; // get the transaction hash using our saved `stackId`\n\n    const txHash = transactionStack[this.state.stackIdApp]; // if transaction hash does not exist, don't display anything\n\n    if (!txHash) return null;\n\n    if (transactions[txHash]) {\n      console.log(transactions[txHash].status);\n      return transactions[txHash].status;\n    }\n  }\n\n  getStatusDep() {\n    const {\n      transactions,\n      transactionStack\n    } = this.props.drizzleState; // get the transaction hash using our saved `stackId`\n\n    const txHash = transactionStack[this.state.stackIdDep]; // if transaction hash does not exist, don't display anything\n\n    if (!txHash) return null;\n\n    if (transactions[txHash]) {\n      console.log(transactions[txHash].status);\n      return transactions[txHash].status;\n    }\n  }\n\n  render() {\n    const {\n      drizzle\n    } = this.props;\n    const {\n      ProgPayETH\n    } = this.props.drizzleState.contracts;\n    console.log(drizzle);\n    console.log(drizzle.contracts.ProgPayETH.address);\n    let isPayer;\n    let isPayee;\n    let contractTxHash = drizzle.contracts.ProgPayETH.contractArtifact.networks['5777'].transactionHash; //console.log('hash'+contractTxHash);\n\n    /*\n      let dateTimeStamp;\n      let timeStampData = web3.eth.getTransaction(contractTxHash, (err, result) =>{\n        return result;\n      }).then((result)=>{\n        //console.log(result);\n        web3.eth.getBlock(result.blockNumber, (err, result) =>{\n          return result;\n        }).then((result)=>{\n          dateTimeStamp = \"was funded on \"+ new Date(result.timestamp*1000)+\".\";\n        });\n      });\n    */\n\n    const payee = ProgPayETH.payee[this.state.payeeIndex];\n    const payer = ProgPayETH.payer[this.state.payerIndex];\n    const contractValue = ProgPayETH.contractValueInWei[this.state.contractValueIndex];\n    const numberOfPayments = ProgPayETH.numberOfPayments[this.state.numberOfPaymentsIndex];\n    const contractFunded = ProgPayETH.contractFunded[this.state.fundedIndex];\n    const nextPayment = ProgPayETH.nextPayment[this.state.nextPaymentIndex];\n    const remainingBalance = ProgPayETH.remainingBalance[this.state.remainingBalanceIndex];\n    const terminated = ProgPayETH.contractTerminated[this.state.terminatedIndex];\n\n    if (nextPayment) {\n      console.log(\"NP \" + nextPayment.value);\n    }\n\n    if (payer) {\n      isPayer = this.props.drizzleState.accounts[0] === payer.value;\n      isPayee = this.props.drizzleState.accounts[0] === payee.value;\n      console.log(isPayer ? \"Payer\" : isPayee ? \"Payee\" : \"Neither Payer or Payee\");\n    }\n\n    let statusReq = this.getStatusReq();\n    let statusApp = this.getStatusApp();\n    let statusDep = this.getStatusDep();\n    console.log(`statusApp is ${statusApp} and statusReq is ${statusReq}`);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 7\n      }\n    }, \"Progress Payment Contract Dashboard (\", drizzle.contracts.ProgPayETH.address, \")\"), payer && isPayer === true && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }\n    }, \"Looks like you are the payer on this contract! The payee is \", payee && payee.value, \".\"), contractFunded && contractFunded.value === false && terminated && terminated.value === false && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: this.handleInitialDeposit,\n      disabled: statusDep === \"pending\" ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }\n    }, !statusDep ? 'Fund Contract' : statusReq === \"success\" ? 'Success!' : statusDep))), payee && isPayee === true && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }\n    }, \"Looks like you are the payee on this contract! The payer is \", payer && payer.value, \".\")), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 7\n      }\n    }, \"Contract initial value \", contractValue && web3.utils.fromWei(contractValue.value.toString(), 'ether'), \"\\u039E // \", numberOfPayments && numberOfPayments.value, \" payments.\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 7\n      }\n    }, \"Funded: \", contractFunded && contractFunded.value === false ? \"No\" : \"Yes\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 7\n      }\n    }, \"Status: \", terminated && terminated.value === false ? \"Active\" : \"Terminated\"), nextPayment && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }\n    }, \"Next payment: \", nextPayment && Number(nextPayment.value) === 0 ? \"NONE\" : nextPayment.value, \".\")), (contractFunded && contractFunded.value === true || terminated && terminated.value === true) && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 7\n      }\n    }, \"Remaining balance to be paid on this contract: \", remainingBalance && web3.utils.fromWei(remainingBalance.value.toString(), 'ether'), \"\\u039E.\")), payee && isPayee === true && /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: this.handleRequestPayment,\n      disabled: statusReq === \"pending\" ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }\n    }, !statusReq ? 'Request Next Payment' : statusReq === \"success\" ? 'Success! Request another.' : statusReq), payer && isPayer === true && /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: this.handleApprovePayment,\n      disabled: statusApp === \"pending\" ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }\n    }, !statusApp ? 'Approve Next Payment' : statusApp === \"success\" ? 'Success! Approve another.' : statusApp), numberOfPayments && /*#__PURE__*/React.createElement(ShowPaymentTable, {\n      drizzle: this.props.drizzle,\n      drizzleState: this.props.drizzleState,\n      numberOfPayments: numberOfPayments.value,\n      contractValue: contractValue.value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nexport default GetContractInfo;","map":{"version":3,"sources":["/Users/erick/eth/progpay/client/src/GetContractInfo.js"],"names":["React","ShowPaymentTable","Web3","web3","givenProvider","GetContractInfo","Component","constructor","props","state","handleRequestPayment","bind","handleApprovePayment","handleInitialDeposit","componentDidMount","drizzle","contract","contracts","ProgPayETH","payeeIndex","methods","cacheCall","payerIndex","contractValueIndex","numberOfPaymentsIndex","fundedIndex","nextPaymentIndex","remainingBalanceIndex","terminatedIndex","setState","drizzleState","stackIdReq","cacheSend","from","accounts","value","stackIdApp","contractValue","contractValueInWei","stackIdDep","getStatusReq","transactions","transactionStack","txHash","console","log","status","getStatusApp","getStatusDep","render","address","isPayer","isPayee","contractTxHash","contractArtifact","networks","transactionHash","payee","payer","numberOfPayments","contractFunded","nextPayment","remainingBalance","terminated","contractTerminated","statusReq","statusApp","statusDep","utils","fromWei","toString","Number"],"mappings":"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","sourcesContent":["\nimport React from \"react\";\nimport ShowPaymentTable from \"./ShowPaymentTable\";\n\nimport Web3 from 'web3';\nconst web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n\nclass GetContractInfo extends React.Component {\n\nconstructor(props){\n  super(props);\n  this.state = {};\n  this.handleRequestPayment = this.handleRequestPayment.bind(this);\n  this.handleApprovePayment = this.handleApprovePayment.bind(this);\n  this.handleInitialDeposit = this.handleInitialDeposit.bind(this);\n}\n\n\n\n componentDidMount() {\n    //access drizzle props within componentDidMount\n    const { drizzle} = this.props;\n\n    const contract = drizzle.contracts.ProgPayETH;\n\n    var payeeIndex = contract.methods[\"payee\"].cacheCall();\n    var payerIndex = contract.methods[\"payer\"].cacheCall();\n    var contractValueIndex = contract.methods[\"contractValueInWei\"].cacheCall();\n    var numberOfPaymentsIndex = contract.methods[\"numberOfPayments\"].cacheCall();\n    var fundedIndex = contract.methods[\"contractFunded\"].cacheCall();\n    var nextPaymentIndex = contract.methods[\"nextPayment\"].cacheCall();\n    var remainingBalanceIndex = contract.methods[\"remainingBalance\"].cacheCall();\n    var terminatedIndex = contract.methods[\"contractTerminated\"].cacheCall();\n\n\n    this.setState({payeeIndex, payerIndex, contractValueIndex, numberOfPaymentsIndex, fundedIndex, nextPaymentIndex, remainingBalanceIndex, terminatedIndex});\n }\n\n\n handleRequestPayment(){\n   const {drizzle, drizzleState} = this.props;\n   const contract = drizzle.contracts.ProgPayETH;\n   const stackIdReq = contract.methods['requestPayment'].cacheSend({from: drizzleState.accounts[0], value:0});\n   this.setState({ stackIdReq });\n }\n\n handleApprovePayment(){\n   const {drizzle, drizzleState} = this.props;\n   const contract = drizzle.contracts.ProgPayETH;\n   const stackIdApp = contract.methods['approvePayment'].cacheSend({from: drizzleState.accounts[0], value:0});\n   this.setState({ stackIdApp });\n }\n\n handleInitialDeposit(){\n   const {drizzle, drizzleState} = this.props;\n   const contract = drizzle.contracts.ProgPayETH;\n   const contractValue = drizzleState.contracts.ProgPayETH.contractValueInWei[this.state.contractValueIndex];\n   //console.log(contractValue);\n   const stackIdDep = contract.methods['initialDeposit'].cacheSend({from: drizzleState.accounts[0], value:contractValue.value});\n   this.setState({ stackIdDep });\n }\n\n getStatusReq(){\n   const { transactions, transactionStack } = this.props.drizzleState;\n   // get the transaction hash using our saved `stackId`\n   const txHash = transactionStack[this.state.stackIdReq];\n   // if transaction hash does not exist, don't display anything\n   if (!txHash) return null;\n\n   if (transactions[txHash]){\n   console.log(transactions[txHash].status);\n   return transactions[txHash].status;\n  }\n }\n\n getStatusApp(){\n   const { transactions, transactionStack } = this.props.drizzleState;\n   // get the transaction hash using our saved `stackId`\n   const txHash = transactionStack[this.state.stackIdApp];\n   // if transaction hash does not exist, don't display anything\n   if (!txHash) return null;\n\n   if (transactions[txHash]){\n   console.log(transactions[txHash].status);\n   return transactions[txHash].status;\n  }\n }\n\n getStatusDep(){\n   const { transactions, transactionStack } = this.props.drizzleState;\n   // get the transaction hash using our saved `stackId`\n   const txHash = transactionStack[this.state.stackIdDep];\n   // if transaction hash does not exist, don't display anything\n   if (!txHash) return null;\n\n   if (transactions[txHash]){\n   console.log(transactions[txHash].status);\n   return transactions[txHash].status;\n  }\n }\n\nrender() {\n  const { drizzle } = this.props;\n  const { ProgPayETH } = this.props.drizzleState.contracts;\n  console.log(drizzle);\n  console.log(drizzle.contracts.ProgPayETH.address);\n  let isPayer;\n  let isPayee;\n  let contractTxHash = drizzle.contracts.ProgPayETH.contractArtifact.networks['5777'].transactionHash;\n  //console.log('hash'+contractTxHash);\n\n/*\n  let dateTimeStamp;\n  let timeStampData = web3.eth.getTransaction(contractTxHash, (err, result) =>{\n    return result;\n  }).then((result)=>{\n    //console.log(result);\n    web3.eth.getBlock(result.blockNumber, (err, result) =>{\n      return result;\n    }).then((result)=>{\n      dateTimeStamp = \"was funded on \"+ new Date(result.timestamp*1000)+\".\";\n    });\n  });\n*/\n\n\n\n\n  const payee = ProgPayETH.payee[this.state.payeeIndex];\n  const payer = ProgPayETH.payer[this.state.payerIndex];\n  const contractValue = ProgPayETH.contractValueInWei[this.state.contractValueIndex];\n  const numberOfPayments = ProgPayETH.numberOfPayments[this.state.numberOfPaymentsIndex];\n  const contractFunded = ProgPayETH.contractFunded[this.state.fundedIndex];\n  const nextPayment = ProgPayETH.nextPayment[this.state.nextPaymentIndex];\n  const remainingBalance = ProgPayETH.remainingBalance[this.state.remainingBalanceIndex];\n  const terminated = ProgPayETH.contractTerminated[this.state.terminatedIndex];\n\n  if (nextPayment){\n    console.log(\"NP \"+nextPayment.value);\n  }\n\n  if (payer){\n    isPayer = this.props.drizzleState.accounts[0]===payer.value;\n    isPayee = this.props.drizzleState.accounts[0]===payee.value;\n    console.log(isPayer?\"Payer\":isPayee?\"Payee\":\"Neither Payer or Payee\");\n  }\n\n  let statusReq = this.getStatusReq();\n  let statusApp = this.getStatusApp();\n  let statusDep = this.getStatusDep();\n  console.log(`statusApp is ${statusApp} and statusReq is ${statusReq}`);\n\n    return (\n      <div>\n      <h4>Progress Payment Contract Dashboard ({drizzle.contracts.ProgPayETH.address})</h4>\n      {\n        payer && isPayer===true &&\n        <div>\n        <p>Looks like you are the payer on this contract! The payee is {payee && payee.value}.</p>\n        {contractFunded && contractFunded.value===false && terminated && terminated.value===false &&\n          <div>\n          <button className=\"btn btn-primary\" onClick={this.handleInitialDeposit} disabled = {statusDep===\"pending\"?true:false}>{!statusDep?'Fund Contract':statusReq===\"success\"?'Success!':statusDep}</button>\n          </div>\n        }\n        </div>\n      }\n      {\n        payee && isPayee===true &&\n        <div>\n        <p>Looks like you are the payee on this contract! The payer is {payer && payer.value}.</p>\n        </div>\n      }\n\n      <p>Contract initial value {contractValue && (web3.utils.fromWei((contractValue.value).toString(), 'ether'))}Ξ // {numberOfPayments && numberOfPayments.value} payments.</p>\n\n      <p>Funded: {contractFunded && contractFunded.value===false ?\"No\":\"Yes\"}</p>\n      <p>Status: {terminated && terminated.value===false?\"Active\":\"Terminated\"}</p>\n\n\n\n\n        {nextPayment &&\n          <div>\n          <p>Next payment: {nextPayment && Number(nextPayment.value)===0?\"NONE\":nextPayment.value}.</p>\n          </div>\n      }\n      {((contractFunded && contractFunded.value===true) || (terminated && terminated.value===true)) &&\n        <div>\n      <p>Remaining balance to be paid on this contract: {remainingBalance && (web3.utils.fromWei((remainingBalance.value).toString(), 'ether'))}Ξ.</p>\n        </div>\n    }\n\n      {\n        payee && isPayee===true &&\n        <button className=\"btn btn-primary\" onClick={this.handleRequestPayment} disabled = {statusReq===\"pending\"?true:false}>{!statusReq?'Request Next Payment':statusReq===\"success\"?'Success! Request another.':statusReq}</button>\n      }\n      {\n        payer && isPayer===true &&\n        <button className=\"btn btn-primary\" onClick={this.handleApprovePayment} disabled = {statusApp===\"pending\"?true:false}>{!statusApp?'Approve Next Payment':statusApp===\"success\"?'Success! Approve another.':statusApp}</button>\n      }\n      {numberOfPayments &&\n      <ShowPaymentTable\n      drizzle={this.props.drizzle}\n      drizzleState={this.props.drizzleState}\n      numberOfPayments={numberOfPayments.value}\n      contractValue={contractValue.value}\n      />\n    }\n      </div>\n    );\n  }\n}\n\nexport default GetContractInfo;\n"]},"metadata":{},"sourceType":"module"}