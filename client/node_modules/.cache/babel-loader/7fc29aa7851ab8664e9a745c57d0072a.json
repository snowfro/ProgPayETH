{"ast":null,"code":"var _jsxFileName = \"/Users/erick/eth/progpay/client/src/GetContractInfo.js\";\nimport React from \"react\";\nimport ShowPaymentTable from \"./ShowPaymentTable\";\nimport Web3 from 'web3';\nconst web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n\nclass GetContractInfo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stackIdReq: null,\n      stackIdApp: null\n    };\n    this.handleRequestPayment = this.handleRequestPayment.bind(this);\n    this.handleApprovePayment = this.handleApprovePayment.bind(this);\n  }\n\n  componentDidMount() {\n    //access drizzle props within componentDidMount\n    const {\n      drizzle\n    } = this.props;\n    const contract = drizzle.contracts.ProgPayETH;\n    var payeeIndex = contract.methods[\"payee\"].cacheCall();\n    var payerIndex = contract.methods[\"payer\"].cacheCall();\n    var contractValueIndex = contract.methods[\"contractValueInWei\"].cacheCall();\n    var numberOfPaymentsIndex = contract.methods[\"numberOfPayments\"].cacheCall();\n    var fundedIndex = contract.methods[\"contractFunded\"].cacheCall();\n    var nextPaymentIndex = contract.methods[\"nextPayment\"].cacheCall();\n    var remainingBalanceIndex = contract.methods[\"remainingBalance\"].cacheCall();\n    var terminatedIndex = contract.methods[\"contractTerminated\"].cacheCall();\n    this.setState({\n      payeeIndex,\n      payerIndex,\n      contractValueIndex,\n      numberOfPaymentsIndex,\n      fundedIndex,\n      nextPaymentIndex,\n      remainingBalanceIndex,\n      terminatedIndex\n    });\n  }\n\n  handleRequestPayment() {\n    const {\n      drizzle,\n      drizzleState\n    } = this.props;\n    const contract = drizzle.contracts.ProgPayETH;\n    const stackIdReq = contract.methods['requestPayment'].cacheSend({\n      from: drizzleState.accounts[0],\n      value: 0\n    });\n    this.setState({\n      stackIdReq\n    });\n  }\n\n  handleApprovePayment() {\n    const {\n      drizzle,\n      drizzleState\n    } = this.props;\n    const contract = drizzle.contracts.ProgPayETH;\n    const stackIdApp = contract.methods['approvePayment'].cacheSend({\n      from: drizzleState.accounts[0],\n      value: 0\n    });\n    this.setState({\n      stackIdApp\n    });\n  }\n\n  getStatusReq() {\n    const {\n      transactions,\n      transactionStack\n    } = this.props.drizzleState; // get the transaction hash using our saved `stackId`\n\n    const txHash = transactionStack[this.state.stackIdReq]; // if transaction hash does not exist, don't display anything\n\n    if (!txHash) return null;\n\n    if (transactions[txHash]) {\n      console.log(transactions[txHash].status);\n      return transactions[txHash].status;\n    }\n  }\n\n  getStatusApp() {\n    const {\n      transactions,\n      transactionStack\n    } = this.props.drizzleState; // get the transaction hash using our saved `stackId`\n\n    const txHash = transactionStack[this.state.stackIdApp]; // if transaction hash does not exist, don't display anything\n\n    if (!txHash) return null;\n\n    if (transactions[txHash]) {\n      console.log(transactions[txHash].status);\n      return transactions[txHash].status;\n    }\n  }\n\n  render() {\n    const {\n      drizzle,\n      drizzleState\n    } = this.props;\n    const {\n      ProgPayETH\n    } = this.props.drizzleState.contracts;\n    console.log(drizzle);\n    console.log(drizzle.contracts.ProgPayETH.address);\n    let isPayer;\n    let isPayee;\n    let contractTxHash = drizzle.contracts.ProgPayETH.contractArtifact.networks['5777'].transactionHash;\n    console.log('hash' + contractTxHash);\n    let timeStampData = web3.eth.getTransaction(contractTxHash, (err, result) => {\n      return result.blockNumber;\n    }).then(result => {\n      console.log(result); //web3.eth.getBlock(result, (err, result) =>{\n      //return result2.timestamp;\n      //});\n    });\n    const payee = ProgPayETH.payee[this.state.payeeIndex];\n    const payer = ProgPayETH.payer[this.state.payerIndex];\n    const contractValue = ProgPayETH.contractValueInWei[this.state.contractValueIndex];\n    const numberOfPayments = ProgPayETH.numberOfPayments[this.state.numberOfPaymentsIndex];\n    const contractFunded = ProgPayETH.contractFunded[this.state.fundedIndex];\n    const nextPayment = ProgPayETH.nextPayment[this.state.nextPaymentIndex];\n    const remainingBalance = ProgPayETH.remainingBalance[this.state.remainingBalanceIndex];\n    const terminated = ProgPayETH.contractTerminated[this.state.terminatedIndex];\n\n    if (payer) {\n      isPayer = this.props.drizzleState.accounts[0] === payer.value;\n      isPayee = this.props.drizzleState.accounts[0] === payee.value;\n      console.log(isPayer ? \"Payer\" : isPayee ? \"Payee\" : \"Neither Payer or Payee\");\n    }\n\n    let statusReq = this.getStatusReq();\n    let statusApp = this.getStatusApp();\n    console.log(`statusApp is ${statusApp} and statusReq is ${statusReq}`);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 7\n      }\n    }, \"Progress Payment Contract Dashboard (\", drizzle.contracts.ProgPayETH.address, \")\"), payer && isPayer === true && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }\n    }, \"Looks like you are the payer on this contract! The payee is \", payee && payee.value, \".\")), payee && isPayee === true && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }, \"Looks like you are the payee on this contract! The payer is \", payer && payer.value, \".\")), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 7\n      }\n    }, \"Contract initial value \", contractValue && web3.utils.fromWei(contractValue.value.toString(), 'ether'), \"\\u039E to be paid over \", numberOfPayments && numberOfPayments.value, \" payments.\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 7\n      }\n    }, \"This contract is \", contractFunded && (contractFunded.value === true ? \"\" : \"NOT YET\"), \" funded. \"), contractFunded && contractFunded.value === true && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }\n    }, terminated && terminated.value === false ? \"This contract is active. \" : \"This contract has terminated.\", \" The remaining balance to be paid on this contract: \", remainingBalance && web3.utils.fromWei(remainingBalance.value.toString(), 'ether'), \"\\u039E.\")), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 7\n      }\n    }, \"Next payment is number \", nextPayment && nextPayment.value, \".\"), payee && isPayee === true && /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: this.handleRequestPayment,\n      disabled: statusReq === \"pending\" ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }\n    }, !statusReq ? 'Request Payment' : statusReq === \"success\" ? 'Success! Request another.' : statusReq), payer && isPayer === true && /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: this.handleApprovePayment,\n      disabled: statusApp === \"pending\" ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }\n    }, !statusApp ? 'Approve Payment' : statusApp === \"success\" ? 'Success! Approve another.' : statusApp), numberOfPayments && /*#__PURE__*/React.createElement(ShowPaymentTable, {\n      drizzle: this.props.drizzle,\n      drizzleState: this.props.drizzleState,\n      numberOfPayments: numberOfPayments.value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nexport default GetContractInfo;","map":{"version":3,"sources":["/Users/erick/eth/progpay/client/src/GetContractInfo.js"],"names":["React","ShowPaymentTable","Web3","web3","givenProvider","GetContractInfo","Component","constructor","props","state","stackIdReq","stackIdApp","handleRequestPayment","bind","handleApprovePayment","componentDidMount","drizzle","contract","contracts","ProgPayETH","payeeIndex","methods","cacheCall","payerIndex","contractValueIndex","numberOfPaymentsIndex","fundedIndex","nextPaymentIndex","remainingBalanceIndex","terminatedIndex","setState","drizzleState","cacheSend","from","accounts","value","getStatusReq","transactions","transactionStack","txHash","console","log","status","getStatusApp","render","address","isPayer","isPayee","contractTxHash","contractArtifact","networks","transactionHash","timeStampData","eth","getTransaction","err","result","blockNumber","then","payee","payer","contractValue","contractValueInWei","numberOfPayments","contractFunded","nextPayment","remainingBalance","terminated","contractTerminated","statusReq","statusApp","utils","fromWei","toString"],"mappings":"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","sourcesContent":["\nimport React from \"react\";\nimport ShowPaymentTable from \"./ShowPaymentTable\";\n\nimport Web3 from 'web3';\nconst web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n\nclass GetContractInfo extends React.Component {\n\nconstructor(props){\n  super(props);\n  this.state = {stackIdReq:null, stackIdApp:null};\n  this.handleRequestPayment = this.handleRequestPayment.bind(this);\n  this.handleApprovePayment = this.handleApprovePayment.bind(this);\n}\n\n\n\n componentDidMount() {\n    //access drizzle props within componentDidMount\n    const { drizzle} = this.props;\n\n    const contract = drizzle.contracts.ProgPayETH;\n\n    var payeeIndex = contract.methods[\"payee\"].cacheCall();\n    var payerIndex = contract.methods[\"payer\"].cacheCall();\n    var contractValueIndex = contract.methods[\"contractValueInWei\"].cacheCall();\n    var numberOfPaymentsIndex = contract.methods[\"numberOfPayments\"].cacheCall();\n    var fundedIndex = contract.methods[\"contractFunded\"].cacheCall();\n    var nextPaymentIndex = contract.methods[\"nextPayment\"].cacheCall();\n    var remainingBalanceIndex = contract.methods[\"remainingBalance\"].cacheCall();\n    var terminatedIndex = contract.methods[\"contractTerminated\"].cacheCall();\n\n\n    this.setState({payeeIndex, payerIndex, contractValueIndex, numberOfPaymentsIndex, fundedIndex, nextPaymentIndex, remainingBalanceIndex, terminatedIndex});\n }\n\n\n handleRequestPayment(){\n   const {drizzle, drizzleState} = this.props;\n   const contract = drizzle.contracts.ProgPayETH;\n   const stackIdReq = contract.methods['requestPayment'].cacheSend({from: drizzleState.accounts[0], value:0});\n   this.setState({ stackIdReq });\n }\n\n handleApprovePayment(){\n   const {drizzle, drizzleState} = this.props;\n   const contract = drizzle.contracts.ProgPayETH;\n   const stackIdApp = contract.methods['approvePayment'].cacheSend({from: drizzleState.accounts[0], value:0});\n   this.setState({ stackIdApp });\n }\n\n getStatusReq(){\n   const { transactions, transactionStack } = this.props.drizzleState;\n   // get the transaction hash using our saved `stackId`\n   const txHash = transactionStack[this.state.stackIdReq];\n   // if transaction hash does not exist, don't display anything\n   if (!txHash) return null;\n\n   if (transactions[txHash]){\n   console.log(transactions[txHash].status);\n   return transactions[txHash].status;\n  }\n }\n\n getStatusApp(){\n   const { transactions, transactionStack } = this.props.drizzleState;\n   // get the transaction hash using our saved `stackId`\n   const txHash = transactionStack[this.state.stackIdApp];\n   // if transaction hash does not exist, don't display anything\n   if (!txHash) return null;\n\n   if (transactions[txHash]){\n   console.log(transactions[txHash].status);\n   return transactions[txHash].status;\n  }\n }\n\nrender() {\n  const { drizzle, drizzleState } = this.props;\n  const { ProgPayETH } = this.props.drizzleState.contracts;\n  console.log(drizzle);\n  console.log(drizzle.contracts.ProgPayETH.address);\n  let isPayer;\n  let isPayee;\n  let contractTxHash = drizzle.contracts.ProgPayETH.contractArtifact.networks['5777'].transactionHash;\n  console.log('hash'+contractTxHash);\n  let timeStampData = web3.eth.getTransaction(contractTxHash, (err, result) =>{\n    return result.blockNumber;\n  }).then((result)=>{\n    console.log(result);\n    //web3.eth.getBlock(result, (err, result) =>{\n      //return result2.timestamp;\n    //});\n  });\n\n\n\n\n  const payee = ProgPayETH.payee[this.state.payeeIndex];\n  const payer = ProgPayETH.payer[this.state.payerIndex];\n  const contractValue = ProgPayETH.contractValueInWei[this.state.contractValueIndex];\n  const numberOfPayments = ProgPayETH.numberOfPayments[this.state.numberOfPaymentsIndex];\n  const contractFunded = ProgPayETH.contractFunded[this.state.fundedIndex];\n  const nextPayment = ProgPayETH.nextPayment[this.state.nextPaymentIndex];\n  const remainingBalance = ProgPayETH.remainingBalance[this.state.remainingBalanceIndex];\n  const terminated = ProgPayETH.contractTerminated[this.state.terminatedIndex];\n\n  if (payer){\n    isPayer = this.props.drizzleState.accounts[0]===payer.value;\n    isPayee = this.props.drizzleState.accounts[0]===payee.value;\n    console.log(isPayer?\"Payer\":isPayee?\"Payee\":\"Neither Payer or Payee\");\n  }\n\n  let statusReq = this.getStatusReq();\n  let statusApp = this.getStatusApp();\n  console.log(`statusApp is ${statusApp} and statusReq is ${statusReq}`);\n\n    return (\n      <div>\n      <h4>Progress Payment Contract Dashboard ({drizzle.contracts.ProgPayETH.address})</h4>\n      {\n        payer && isPayer===true &&\n        <div>\n        <p>Looks like you are the payer on this contract! The payee is {payee && payee.value}.</p>\n        </div>\n      }\n      {\n        payee && isPayee===true &&\n        <div>\n        <p>Looks like you are the payee on this contract! The payer is {payer && payer.value}.</p>\n        </div>\n      }\n\n      <p>Contract initial value {contractValue && (web3.utils.fromWei((contractValue.value).toString(), 'ether'))}Ξ to be paid over {numberOfPayments && numberOfPayments.value} payments.</p>\n\n      <p>This contract is {contractFunded && (contractFunded.value===true?\"\":\"NOT YET\")} funded. </p>\n      {contractFunded && contractFunded.value===true &&\n        <div>\n        <p>{terminated && terminated.value===false? \"This contract is active. \":\"This contract has terminated.\"} The remaining balance to be paid on this contract: {remainingBalance && (web3.utils.fromWei((remainingBalance.value).toString(), 'ether'))}Ξ.</p>\n        </div>\n      }\n\n      <p>Next payment is number {nextPayment && nextPayment.value}.</p>\n      {\n        payee && isPayee===true &&\n        <button className=\"btn btn-primary\" onClick={this.handleRequestPayment} disabled = {statusReq===\"pending\"?true:false}>{!statusReq?'Request Payment':statusReq===\"success\"?'Success! Request another.':statusReq}</button>\n      }\n      {\n        payer && isPayer===true &&\n        <button className=\"btn btn-primary\" onClick={this.handleApprovePayment} disabled = {statusApp===\"pending\"?true:false}>{!statusApp?'Approve Payment':statusApp===\"success\"?'Success! Approve another.':statusApp}</button>\n      }\n      {numberOfPayments &&\n      <ShowPaymentTable\n      drizzle={this.props.drizzle}\n      drizzleState={this.props.drizzleState}\n      numberOfPayments={numberOfPayments.value}\n      />\n    }\n      </div>\n    );\n  }\n}\n\nexport default GetContractInfo;\n"]},"metadata":{},"sourceType":"module"}