{"ast":null,"code":"'use strict'; //\n// We store our EE objects in a plain object whose properties are event names.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// `~` to make sure that the built-in object properties are not overridden or\n// used as an attack vector.\n// We also assume that `Object.create(null)` is available when the event name\n// is an ES6 Symbol.\n//\n\nvar prefix = typeof Object.create !== 'function' ? '~' : false;\n/**\n * Representation of a single EventEmitter function.\n *\n * @param {Function} fn Event handler to be called.\n * @param {Mixed} context Context for function execution.\n * @param {Boolean} once Only emit once\n * @api private\n */\n\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n/**\n * Minimal EventEmitter interface that is molded against the Node.js\n * EventEmitter interface.\n *\n * @constructor\n * @api public\n */\n\n\nfunction EventEmitter() {}\n/* Nothing to set */\n\n/**\n * Holds the assigned EventEmitters by name.\n *\n * @type {Object}\n * @private\n */\n\n\nEventEmitter.prototype._events = undefined;\n/**\n * Return a list of assigned event listeners.\n *\n * @param {String} event The events that should be listed.\n * @param {Boolean} exists We only need to know if there are listeners.\n * @returns {Array|Boolean}\n * @api public\n */\n\nEventEmitter.prototype.listeners = function listeners(event, exists) {\n  var evt = prefix ? prefix + event : event,\n      available = this._events && this._events[evt];\n  if (exists) return !!available;\n  if (!available) return [];\n  if (available.fn) return [available.fn];\n\n  for (var i = 0, l = available.length, ee = new Array(l); i < l; i++) {\n    ee[i] = available[i].fn;\n  }\n\n  return ee;\n};\n/**\n * Emit an event to all registered event listeners.\n *\n * @param {String} event The name of the event.\n * @returns {Boolean} Indication if we've emitted an event.\n * @api public\n */\n\n\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n  if (!this._events || !this._events[evt]) return false;\n  var listeners = this._events[evt],\n      len = arguments.length,\n      args,\n      i;\n\n  if ('function' === typeof listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1:\n        return listeners.fn.call(listeners.context), true;\n\n      case 2:\n        return listeners.fn.call(listeners.context, a1), true;\n\n      case 3:\n        return listeners.fn.call(listeners.context, a1, a2), true;\n\n      case 4:\n        return listeners.fn.call(listeners.context, a1, a2, a3), true;\n\n      case 5:\n        return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n\n      case 6:\n        return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len - 1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length,\n        j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1:\n          listeners[i].fn.call(listeners[i].context);\n          break;\n\n        case 2:\n          listeners[i].fn.call(listeners[i].context, a1);\n          break;\n\n        case 3:\n          listeners[i].fn.call(listeners[i].context, a1, a2);\n          break;\n\n        default:\n          if (!args) for (j = 1, args = new Array(len - 1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n/**\n * Register a new EventListener for the given event.\n *\n * @param {String} event Name of the event.\n * @param {Functon} fn Callback function.\n * @param {Mixed} context The context of the function.\n * @api public\n */\n\n\nEventEmitter.prototype.on = function on(event, fn, context) {\n  var listener = new EE(fn, context || this),\n      evt = prefix ? prefix + event : event;\n  if (!this._events) this._events = prefix ? {} : Object.create(null);\n  if (!this._events[evt]) this._events[evt] = listener;else {\n    if (!this._events[evt].fn) this._events[evt].push(listener);else this._events[evt] = [this._events[evt], listener];\n  }\n  return this;\n};\n/**\n * Add an EventListener that's only called once.\n *\n * @param {String} event Name of the event.\n * @param {Function} fn Callback function.\n * @param {Mixed} context The context of the function.\n * @api public\n */\n\n\nEventEmitter.prototype.once = function once(event, fn, context) {\n  var listener = new EE(fn, context || this, true),\n      evt = prefix ? prefix + event : event;\n  if (!this._events) this._events = prefix ? {} : Object.create(null);\n  if (!this._events[evt]) this._events[evt] = listener;else {\n    if (!this._events[evt].fn) this._events[evt].push(listener);else this._events[evt] = [this._events[evt], listener];\n  }\n  return this;\n};\n/**\n * Remove event listeners.\n *\n * @param {String} event The event we want to remove.\n * @param {Function} fn The listener that we need to find.\n * @param {Mixed} context Only remove listeners matching this context.\n * @param {Boolean} once Only remove once listeners.\n * @api public\n */\n\n\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n  if (!this._events || !this._events[evt]) return this;\n  var listeners = this._events[evt],\n      events = [];\n\n  if (fn) {\n    if (listeners.fn) {\n      if (listeners.fn !== fn || once && !listeners.once || context && listeners.context !== context) {\n        events.push(listeners);\n      }\n    } else {\n      for (var i = 0, length = listeners.length; i < length; i++) {\n        if (listeners[i].fn !== fn || once && !listeners[i].once || context && listeners[i].context !== context) {\n          events.push(listeners[i]);\n        }\n      }\n    }\n  } //\n  // Reset the array, or remove it completely if we have no more listeners.\n  //\n\n\n  if (events.length) {\n    this._events[evt] = events.length === 1 ? events[0] : events;\n  } else {\n    delete this._events[evt];\n  }\n\n  return this;\n};\n/**\n * Remove all listeners or only the listeners for the specified event.\n *\n * @param {String} event The event want to remove all listeners for.\n * @api public\n */\n\n\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  if (!this._events) return this;\n  if (event) delete this._events[prefix ? prefix + event : event];else this._events = prefix ? {} : Object.create(null);\n  return this;\n}; //\n// Alias methods names because people roll like that.\n//\n\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on; //\n// This function doesn't apply anymore.\n//\n\nEventEmitter.prototype.setMaxListeners = function setMaxListeners() {\n  return this;\n}; //\n// Expose the prefix.\n//\n\n\nEventEmitter.prefixed = prefix; //\n// Expose the module.\n//\n\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}","map":{"version":3,"sources":["/Users/erick/eth/progpay/client/node_modules/drizzle/node_modules/eventemitter3/index.js"],"names":["prefix","Object","create","EE","fn","context","once","EventEmitter","prototype","_events","undefined","listeners","event","exists","evt","available","i","l","length","ee","Array","emit","a1","a2","a3","a4","a5","len","arguments","args","removeListener","call","apply","j","on","listener","push","events","removeAllListeners","off","addListener","setMaxListeners","prefixed","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n//\n// We store our EE objects in a plain object whose properties are event names.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// `~` to make sure that the built-in object properties are not overridden or\n// used as an attack vector.\n// We also assume that `Object.create(null)` is available when the event name\n// is an ES6 Symbol.\n//\nvar prefix = typeof Object.create !== 'function' ? '~' : false;\n\n/**\n * Representation of a single EventEmitter function.\n *\n * @param {Function} fn Event handler to be called.\n * @param {Mixed} context Context for function execution.\n * @param {Boolean} once Only emit once\n * @api private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Minimal EventEmitter interface that is molded against the Node.js\n * EventEmitter interface.\n *\n * @constructor\n * @api public\n */\nfunction EventEmitter() { /* Nothing to set */ }\n\n/**\n * Holds the assigned EventEmitters by name.\n *\n * @type {Object}\n * @private\n */\nEventEmitter.prototype._events = undefined;\n\n/**\n * Return a list of assigned event listeners.\n *\n * @param {String} event The events that should be listed.\n * @param {Boolean} exists We only need to know if there are listeners.\n * @returns {Array|Boolean}\n * @api public\n */\nEventEmitter.prototype.listeners = function listeners(event, exists) {\n  var evt = prefix ? prefix + event : event\n    , available = this._events && this._events[evt];\n\n  if (exists) return !!available;\n  if (!available) return [];\n  if (available.fn) return [available.fn];\n\n  for (var i = 0, l = available.length, ee = new Array(l); i < l; i++) {\n    ee[i] = available[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Emit an event to all registered event listeners.\n *\n * @param {String} event The name of the event.\n * @returns {Boolean} Indication if we've emitted an event.\n * @api public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events || !this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if ('function' === typeof listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Register a new EventListener for the given event.\n *\n * @param {String} event Name of the event.\n * @param {Functon} fn Callback function.\n * @param {Mixed} context The context of the function.\n * @api public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  var listener = new EE(fn, context || this)\n    , evt = prefix ? prefix + event : event;\n\n  if (!this._events) this._events = prefix ? {} : Object.create(null);\n  if (!this._events[evt]) this._events[evt] = listener;\n  else {\n    if (!this._events[evt].fn) this._events[evt].push(listener);\n    else this._events[evt] = [\n      this._events[evt], listener\n    ];\n  }\n\n  return this;\n};\n\n/**\n * Add an EventListener that's only called once.\n *\n * @param {String} event Name of the event.\n * @param {Function} fn Callback function.\n * @param {Mixed} context The context of the function.\n * @api public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  var listener = new EE(fn, context || this, true)\n    , evt = prefix ? prefix + event : event;\n\n  if (!this._events) this._events = prefix ? {} : Object.create(null);\n  if (!this._events[evt]) this._events[evt] = listener;\n  else {\n    if (!this._events[evt].fn) this._events[evt].push(listener);\n    else this._events[evt] = [\n      this._events[evt], listener\n    ];\n  }\n\n  return this;\n};\n\n/**\n * Remove event listeners.\n *\n * @param {String} event The event we want to remove.\n * @param {Function} fn The listener that we need to find.\n * @param {Mixed} context Only remove listeners matching this context.\n * @param {Boolean} once Only remove once listeners.\n * @api public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events || !this._events[evt]) return this;\n\n  var listeners = this._events[evt]\n    , events = [];\n\n  if (fn) {\n    if (listeners.fn) {\n      if (\n           listeners.fn !== fn\n        || (once && !listeners.once)\n        || (context && listeners.context !== context)\n      ) {\n        events.push(listeners);\n      }\n    } else {\n      for (var i = 0, length = listeners.length; i < length; i++) {\n        if (\n             listeners[i].fn !== fn\n          || (once && !listeners[i].once)\n          || (context && listeners[i].context !== context)\n        ) {\n          events.push(listeners[i]);\n        }\n      }\n    }\n  }\n\n  //\n  // Reset the array, or remove it completely if we have no more listeners.\n  //\n  if (events.length) {\n    this._events[evt] = events.length === 1 ? events[0] : events;\n  } else {\n    delete this._events[evt];\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners or only the listeners for the specified event.\n *\n * @param {String} event The event want to remove all listeners for.\n * @api public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  if (!this._events) return this;\n\n  if (event) delete this._events[prefix ? prefix + event : event];\n  else this._events = prefix ? {} : Object.create(null);\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// This function doesn't apply anymore.\n//\nEventEmitter.prototype.setMaxListeners = function setMaxListeners() {\n  return this;\n};\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n"]},"metadata":{},"sourceType":"script"}