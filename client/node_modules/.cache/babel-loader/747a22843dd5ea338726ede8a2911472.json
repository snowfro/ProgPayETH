{"ast":null,"code":"var _jsxFileName = \"/Users/erick/eth/progpay/client/src/DissolveFunctions.js\";\nimport React from \"react\";\nimport Web3 from 'web3';\nconst web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n\nclass DissolveFunctions extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    const {\n      drizzle\n    } = this.props;\n    const contract = drizzle.contracts.ProgPayETH;\n    const payerDissolveIndex = contract.methods['payerWantsOut'].cacheCall();\n    const payeeDissolveIndex = contract.methods['payeeWantsOut'].cacheCall();\n    /*\n           const paymentIndex = contract.methods[\"paymentNumberToValue\"].cacheCall(i+1);\n           const requestedIndex = contract.methods[\"paymentNumberToRequested\"].cacheCall(i+1);\n           const approvedIndex = contract.methods[\"paymentNumberToApproved\"].cacheCall(i+1);\n    */\n\n    this.setState({\n      payerDissolveIndex,\n      payeeDissolveIndex\n    });\n  }\n\n  render() {\n    const {\n      drizzle,\n      drizzleState\n    } = this.props;\n    const contract = drizzleState.contracts.ProgPayETH;\n    const payerDissolve = contract.payerWantsOut[this.state.payerDissolveIndex];\n    const payeeDissolve = contract.payeeWantsOut[this.state.payeeDissolveIndex];\n    console.log(payerDissolve && \"payer \" + payerDissolve.value);\n    console.log(payeeDissolve && \"payee \" + payeeDissolve.value);\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, \"...\");\n  }\n\n}\n\nexport default DissolveFunctions;","map":{"version":3,"sources":["/Users/erick/eth/progpay/client/src/DissolveFunctions.js"],"names":["React","Web3","web3","givenProvider","DissolveFunctions","Component","constructor","props","state","componentDidMount","drizzle","contract","contracts","ProgPayETH","payerDissolveIndex","methods","cacheCall","payeeDissolveIndex","setState","render","drizzleState","payerDissolve","payerWantsOut","payeeDissolve","payeeWantsOut","console","log","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,IAAP,MAAiB,MAAjB;AACA,MAAMC,IAAI,GAAG,IAAID,IAAJ,CAASA,IAAI,CAACE,aAAL,IAAsB,uBAA/B,CAAb;;AAEA,MAAMC,iBAAN,SAAgCJ,KAAK,CAACK,SAAtC,CAAgD;AAE9CC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAY,EAAZ;AAED;;AAGDC,EAAAA,iBAAiB,GAAG;AAEjB,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAKH,KAAzB;AACA,UAAMI,QAAQ,GAAGD,OAAO,CAACE,SAAR,CAAkBC,UAAnC;AAEA,UAAMC,kBAAkB,GAAGH,QAAQ,CAACI,OAAT,CAAiB,eAAjB,EAAkCC,SAAlC,EAA3B;AACA,UAAMC,kBAAkB,GAAGN,QAAQ,CAACI,OAAT,CAAiB,eAAjB,EAAkCC,SAAlC,EAA3B;AAEL;;;;;;AAMI,SAAKE,QAAL,CAAc;AAACJ,MAAAA,kBAAD;AAAqBG,MAAAA;AAArB,KAAd;AACD;;AAKDE,EAAAA,MAAM,GAAE;AAEN,UAAM;AAAET,MAAAA,OAAF;AAAWU,MAAAA;AAAX,QAA4B,KAAKb,KAAvC;AACA,UAAMI,QAAQ,GAAGS,YAAY,CAACR,SAAb,CAAuBC,UAAxC;AAEA,UAAMQ,aAAa,GAAGV,QAAQ,CAACW,aAAT,CAAuB,KAAKd,KAAL,CAAWM,kBAAlC,CAAtB;AACA,UAAMS,aAAa,GAAGZ,QAAQ,CAACa,aAAT,CAAuB,KAAKhB,KAAL,CAAWS,kBAAlC,CAAtB;AAEAQ,IAAAA,OAAO,CAACC,GAAR,CAAYL,aAAa,IAAI,WAAUA,aAAa,CAACM,KAArD;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYH,aAAa,IAAI,WAASA,aAAa,CAACI,KAApD;AAIA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF;AAIH;;AA9C+C;;AAmDhD,eAAevB,iBAAf","sourcesContent":["import React from \"react\";\n\nimport Web3 from 'web3';\nconst web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n\nclass DissolveFunctions extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state ={};\n\n  }\n\n\n  componentDidMount() {\n\n     const { drizzle } = this.props;\n     const contract = drizzle.contracts.ProgPayETH;\n\n     const payerDissolveIndex = contract.methods['payerWantsOut'].cacheCall();\n     const payeeDissolveIndex = contract.methods['payeeWantsOut'].cacheCall();\n\n/*\n       const paymentIndex = contract.methods[\"paymentNumberToValue\"].cacheCall(i+1);\n       const requestedIndex = contract.methods[\"paymentNumberToRequested\"].cacheCall(i+1);\n       const approvedIndex = contract.methods[\"paymentNumberToApproved\"].cacheCall(i+1);\n*/\n\n    this.setState({payerDissolveIndex, payeeDissolveIndex});\n  }\n\n\n\n\n  render(){\n\n    const { drizzle, drizzleState } = this.props;\n    const contract = drizzleState.contracts.ProgPayETH;\n\n    const payerDissolve = contract.payerWantsOut[this.state.payerDissolveIndex];\n    const payeeDissolve = contract.payeeWantsOut[this.state.payeeDissolveIndex];\n\n    console.log(payerDissolve && \"payer \"+ payerDissolve.value);\n    console.log(payeeDissolve && \"payee \"+payeeDissolve.value);\n\n\n\n    return (\n      <p>...</p>\n\n    );\n}\n}\n\n\n\nexport default DissolveFunctions;\n"]},"metadata":{},"sourceType":"module"}