{"ast":null,"code":"var _jsxFileName = \"/Users/erick/eth/progpay/client/src/GetContractInfo.js\";\nimport React from \"react\";\nimport ShowPaymentTable from \"./ShowPaymentTable\";\nimport Web3 from 'web3';\nconst web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n\nclass GetContractInfo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stackId: null\n    };\n    this.handleRequestPayment = this.handleRequestPayment.bind(this);\n  }\n\n  componentDidMount() {\n    //access drizzle props within componentDidMount\n    const {\n      drizzle\n    } = this.props;\n    const contract = drizzle.contracts.ProgPayETH;\n    var payeeIndex = contract.methods[\"payee\"].cacheCall();\n    var payerIndex = contract.methods[\"payer\"].cacheCall();\n    var contractValueIndex = contract.methods[\"contractValueInWei\"].cacheCall();\n    var numberOfPaymentsIndex = contract.methods[\"numberOfPayments\"].cacheCall();\n    var fundedIndex = contract.methods[\"contractFunded\"].cacheCall();\n    var nextPaymentIndex = contract.methods[\"nextPayment\"].cacheCall();\n    var remainingBalanceIndex = contract.methods[\"remainingBalance\"].cacheCall();\n    var terminatedIndex = contract.methods[\"contractTerminated\"].cacheCall();\n    this.setState({\n      payeeIndex,\n      payerIndex,\n      contractValueIndex,\n      numberOfPaymentsIndex,\n      fundedIndex,\n      nextPaymentIndex,\n      remainingBalanceIndex,\n      terminatedIndex\n    });\n  }\n\n  handleRequestPayment() {\n    const {\n      drizzle,\n      drizzleState\n    } = this.props;\n    const contract = drizzle.contracts.ProgPayETH;\n    console.log(drizzle);\n    console.log(contract);\n    console.log(contract.methods);\n    console.log(contract.methods.requestPayment);\n    const stackId = contract.methods['payerMediatorAddress'].cacheSend({\n      from: drizzleState.accounts[0],\n      value: 0\n    });\n    this.setState({\n      stackId: null\n    });\n  }\n\n  getStatus() {\n    const {\n      transactions,\n      transactionStack\n    } = this.props.drizzleState; // get the transaction hash using our saved `stackId`\n\n    const txHash = transactionStack[this.state.stackId]; // if transaction hash does not exist, don't display anything\n\n    if (!txHash) return null;\n\n    if (transactions[txHash]) {\n      console.log(transactions[txHash].status);\n      return transactions[txHash].status;\n    }\n  }\n\n  render() {\n    const {\n      drizzle\n    } = this.props; //console.log(drizzle);\n\n    const {\n      ProgPayETH\n    } = this.props.drizzleState.contracts;\n    let isPayer;\n    let isPayee; //console.log(ProgPayETH);\n\n    const payee = ProgPayETH.payee[this.state.payeeIndex];\n    const payer = ProgPayETH.payer[this.state.payerIndex];\n    const contractValue = ProgPayETH.contractValueInWei[this.state.contractValueIndex];\n    const numberOfPayments = ProgPayETH.numberOfPayments[this.state.numberOfPaymentsIndex];\n    const contractFunded = ProgPayETH.contractFunded[this.state.fundedIndex];\n    const nextPayment = ProgPayETH.nextPayment[this.state.nextPaymentIndex];\n    const remainingBalance = ProgPayETH.remainingBalance[this.state.remainingBalanceIndex];\n    const terminated = ProgPayETH.contractTerminated[this.state.terminatedIndex];\n\n    if (payer) {\n      isPayer = this.props.drizzleState.accounts[0] === payer.value;\n      console.log(`ispayer: ${isPayer}`);\n    }\n\n    if (payee) {\n      isPayee = this.props.drizzleState.accounts[0] === payee.value;\n      console.log(`ispayee: ${isPayee}`);\n    }\n\n    let status = this.getStatus();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }, payer && isPayer === true && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, \"Looks like you are the payer on this contract! The payee is \", payee && payee.value, \".\")), payee && isPayee === true && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, \"Looks like you are the payee on this contract! The payer is \", payer && payer.value, \".\")), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }\n    }, \"Contract initial value \", contractValue && web3.utils.fromWei(contractValue.value.toString(), 'ether'), \"\\u039E to be paid over \", numberOfPayments && numberOfPayments.value, \" payments.\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }\n    }, \"This contract is \", contractFunded && (contractFunded.value === true ? \"\" : \"NOT YET\"), \" funded. \"), contractFunded && contractFunded.value === true && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }, terminated && terminated.value === false ? \"This contract is active. \" : \"This contract has terminated.\", \" The remaining balance to be paid on this contract: \", remainingBalance && web3.utils.fromWei(remainingBalance.value.toString(), 'ether'), \"\\u039E.\")), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }\n    }, \"Next payment is number \", nextPayment && nextPayment.value, \".\"), payee && isPayee === true && /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: this.handleRequestPayment,\n      disabled: status === \"pending\" ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }, !status ? 'Request Payment' : status === \"success\" ? 'Success! Request another.' : status), numberOfPayments && /*#__PURE__*/React.createElement(ShowPaymentTable, {\n      drizzle: this.props.drizzle,\n      drizzleState: this.props.drizzleState,\n      numberOfPayments: numberOfPayments.value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nexport default GetContractInfo;","map":{"version":3,"sources":["/Users/erick/eth/progpay/client/src/GetContractInfo.js"],"names":["React","ShowPaymentTable","Web3","web3","givenProvider","GetContractInfo","Component","constructor","props","state","stackId","handleRequestPayment","bind","componentDidMount","drizzle","contract","contracts","ProgPayETH","payeeIndex","methods","cacheCall","payerIndex","contractValueIndex","numberOfPaymentsIndex","fundedIndex","nextPaymentIndex","remainingBalanceIndex","terminatedIndex","setState","drizzleState","console","log","requestPayment","cacheSend","from","accounts","value","getStatus","transactions","transactionStack","txHash","status","render","isPayer","isPayee","payee","payer","contractValue","contractValueInWei","numberOfPayments","contractFunded","nextPayment","remainingBalance","terminated","contractTerminated","utils","fromWei","toString"],"mappings":"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","sourcesContent":["\nimport React from \"react\";\nimport ShowPaymentTable from \"./ShowPaymentTable\";\n\nimport Web3 from 'web3';\nconst web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n\nclass GetContractInfo extends React.Component {\n\nconstructor(props){\n  super(props);\n  this.state = {stackId:null};\n  this.handleRequestPayment = this.handleRequestPayment.bind(this);\n}\n\n\n\n componentDidMount() {\n    //access drizzle props within componentDidMount\n    const { drizzle} = this.props;\n\n    const contract = drizzle.contracts.ProgPayETH;\n\n    var payeeIndex = contract.methods[\"payee\"].cacheCall();\n    var payerIndex = contract.methods[\"payer\"].cacheCall();\n    var contractValueIndex = contract.methods[\"contractValueInWei\"].cacheCall();\n    var numberOfPaymentsIndex = contract.methods[\"numberOfPayments\"].cacheCall();\n    var fundedIndex = contract.methods[\"contractFunded\"].cacheCall();\n    var nextPaymentIndex = contract.methods[\"nextPayment\"].cacheCall();\n    var remainingBalanceIndex = contract.methods[\"remainingBalance\"].cacheCall();\n    var terminatedIndex = contract.methods[\"contractTerminated\"].cacheCall();\n\n\n    this.setState({payeeIndex, payerIndex, contractValueIndex, numberOfPaymentsIndex, fundedIndex, nextPaymentIndex, remainingBalanceIndex, terminatedIndex});\n }\n\n handleRequestPayment(){\n   const {drizzle, drizzleState} = this.props;\n   const contract = drizzle.contracts.ProgPayETH;\n   console.log(drizzle);\n   console.log(contract);\n   console.log(contract.methods);\n   console.log(contract.methods.requestPayment);\n   const stackId = contract.methods['payerMediatorAddress'].cacheSend({from: drizzleState.accounts[0], value:0});\n   this.setState({ stackId:null });\n }\n\n getStatus(){\n   const { transactions, transactionStack } = this.props.drizzleState;\n   // get the transaction hash using our saved `stackId`\n   const txHash = transactionStack[this.state.stackId];\n   // if transaction hash does not exist, don't display anything\n   if (!txHash) return null;\n\n   if (transactions[txHash]){\n   console.log(transactions[txHash].status);\n   return transactions[txHash].status;\n  }\n }\n\nrender() {\n  const {drizzle} = this.props;\n  //console.log(drizzle);\n  const { ProgPayETH } = this.props.drizzleState.contracts;\n  let isPayer;\n  let isPayee;\n  //console.log(ProgPayETH);\n\n  const payee = ProgPayETH.payee[this.state.payeeIndex];\n  const payer = ProgPayETH.payer[this.state.payerIndex];\n  const contractValue = ProgPayETH.contractValueInWei[this.state.contractValueIndex];\n  const numberOfPayments = ProgPayETH.numberOfPayments[this.state.numberOfPaymentsIndex];\n  const contractFunded = ProgPayETH.contractFunded[this.state.fundedIndex];\n  const nextPayment = ProgPayETH.nextPayment[this.state.nextPaymentIndex];\n  const remainingBalance = ProgPayETH.remainingBalance[this.state.remainingBalanceIndex];\n  const terminated = ProgPayETH.contractTerminated[this.state.terminatedIndex];\n\n  if (payer){\n    isPayer = this.props.drizzleState.accounts[0]===payer.value;\n    console.log(`ispayer: ${isPayer}`);\n  }\n\n  if (payee){\n    isPayee = this.props.drizzleState.accounts[0]===payee.value;\n    console.log(`ispayee: ${isPayee}`);\n  }\n\n  let status = this.getStatus();\n\n    return (\n      <div>\n      {\n        payer && isPayer===true &&\n        <div>\n        <p>Looks like you are the payer on this contract! The payee is {payee && payee.value}.</p>\n        </div>\n      }\n      {\n        payee && isPayee===true &&\n        <div>\n        <p>Looks like you are the payee on this contract! The payer is {payer && payer.value}.</p>\n        </div>\n      }\n\n      <p>Contract initial value {contractValue && (web3.utils.fromWei((contractValue.value).toString(), 'ether'))}Ξ to be paid over {numberOfPayments && numberOfPayments.value} payments.</p>\n\n      <p>This contract is {contractFunded && (contractFunded.value===true?\"\":\"NOT YET\")} funded. </p>\n      {contractFunded && contractFunded.value===true &&\n        <div>\n        <p>{terminated && terminated.value===false? \"This contract is active. \":\"This contract has terminated.\"} The remaining balance to be paid on this contract: {remainingBalance && (web3.utils.fromWei((remainingBalance.value).toString(), 'ether'))}Ξ.</p>\n        </div>\n      }\n\n      <p>Next payment is number {nextPayment && nextPayment.value}.</p>\n      {\n        payee && isPayee===true &&\n        <button className=\"btn btn-primary\" onClick={this.handleRequestPayment} disabled = {status===\"pending\"?true:false}>{!status?'Request Payment':status===\"success\"?'Success! Request another.':status}</button>\n      }\n      {numberOfPayments &&\n      <ShowPaymentTable\n      drizzle={this.props.drizzle}\n      drizzleState={this.props.drizzleState}\n      numberOfPayments={numberOfPayments.value}\n      />\n    }\n      </div>\n    );\n  }\n}\n\nexport default GetContractInfo;\n"]},"metadata":{},"sourceType":"module"}