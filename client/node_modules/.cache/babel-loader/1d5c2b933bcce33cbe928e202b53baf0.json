{"ast":null,"code":"var _jsxFileName = \"/Users/erick/eth/progpay/client/src/GetContractInfo.js\";\nimport React from \"react\";\nimport ShowPaymentTable from \"./ShowPaymentTable\";\nimport DissolveFunctions from \"./DissolveFunctions\";\nimport Web3 from 'web3';\nconst web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n\nclass GetContractInfo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dissolve: false\n    };\n    this.handleInitialDeposit = this.handleInitialDeposit.bind(this);\n    this.handleDissolveFunctionsToggle = this.handleDissolveFunctionsToggle.bind(this);\n  }\n\n  componentDidMount() {\n    //access drizzle props within componentDidMount\n    const {\n      drizzle,\n      drizzleState\n    } = this.props;\n    const contract = drizzle.contracts.ProgPayETH;\n    var payeeIndex = contract.methods[\"payee\"].cacheCall();\n    var payerIndex = contract.methods[\"payer\"].cacheCall();\n    var contractValueIndex = contract.methods[\"contractValueInWei\"].cacheCall();\n    var numberOfPaymentsIndex = contract.methods[\"numberOfPayments\"].cacheCall();\n    var fundedIndex = contract.methods[\"contractFunded\"].cacheCall();\n    var nextPaymentIndex = contract.methods[\"nextPayment\"].cacheCall();\n    var remainingBalanceIndex = contract.methods[\"remainingBalance\"].cacheCall();\n    var terminatedIndex = contract.methods[\"contractTerminated\"].cacheCall();\n    this.setState({\n      payeeIndex,\n      payerIndex,\n      contractValueIndex,\n      numberOfPaymentsIndex,\n      fundedIndex,\n      nextPaymentIndex,\n      remainingBalanceIndex,\n      terminatedIndex\n    });\n  }\n\n  handleDissolveFunctionsToggle() {\n    this.setState({\n      dissolve: !this.state.dissolve\n    });\n  }\n\n  handleInitialDeposit() {\n    const {\n      drizzle,\n      drizzleState\n    } = this.props;\n    const contract = drizzle.contracts.ProgPayETH;\n    const contractValue = drizzleState.contracts.ProgPayETH.contractValueInWei[this.state.contractValueIndex];\n    const stackIdDep = contract.methods['initialDeposit'].cacheSend({\n      from: drizzleState.accounts[0],\n      value: contractValue.value\n    });\n    this.setState({\n      stackIdDep\n    });\n  }\n\n  getStatusDep() {\n    const {\n      transactions,\n      transactionStack\n    } = this.props.drizzleState; // get the transaction hash using our saved `stackId`\n\n    const txHash = transactionStack[this.state.stackIdDep]; // if transaction hash does not exist, don't display anything\n\n    if (!txHash) return null;\n\n    if (transactions[txHash]) {\n      console.log(transactions[txHash].status);\n      return transactions[txHash].status;\n    }\n  }\n\n  render() {\n    const {\n      drizzle\n    } = this.props;\n    const {\n      ProgPayETH\n    } = this.props.drizzleState.contracts;\n    console.log(drizzle);\n    console.log(drizzle.contracts.ProgPayETH.address);\n    let isPayer;\n    let isPayee;\n    console.log(\"dissolve? \" + this.state.dissolve);\n    /*\n      let contractTxHash = drizzle.contracts.ProgPayETH.contractArtifact.networks['5777'].transactionHash;\n      let dateTimeStamp;\n      let timeStampData = web3.eth.getTransaction(contractTxHash, (err, result) =>{\n        return result;\n      }).then((result)=>{\n        //console.log(result);\n        web3.eth.getBlock(result.blockNumber, (err, result) =>{\n          return result;\n        }).then((result)=>{\n          dateTimeStamp = \"was funded on \"+ new Date(result.timestamp*1000)+\".\";\n        });\n      });\n    */\n\n    const payee = ProgPayETH.payee[this.state.payeeIndex];\n    const payer = ProgPayETH.payer[this.state.payerIndex];\n    const contractValue = ProgPayETH.contractValueInWei[this.state.contractValueIndex];\n    const numberOfPayments = ProgPayETH.numberOfPayments[this.state.numberOfPaymentsIndex];\n    const contractFunded = ProgPayETH.contractFunded[this.state.fundedIndex];\n    const nextPayment = ProgPayETH.nextPayment[this.state.nextPaymentIndex];\n    const remainingBalance = ProgPayETH.remainingBalance[this.state.remainingBalanceIndex];\n    const terminated = ProgPayETH.contractTerminated[this.state.terminatedIndex];\n\n    if (nextPayment) {//console.log(\"NP \"+nextPayment.value);\n    }\n\n    if (payer) {\n      isPayer = this.props.drizzleState.accounts[0] === payer.value;\n      isPayee = this.props.drizzleState.accounts[0] === payee.value; //console.log(isPayer?\"Payer\":isPayee?\"Payee\":\"Neither Payer or Payee\");\n    }\n\n    let statusDep = this.getStatusDep();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }\n    }, \"Progress Payment Contract Dashboard (\", drizzle.contracts.ProgPayETH.address, \")\"), payer && isPayer === true && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }, \"Looks like you are the payer on this contract! The payee is \", payee && payee.value, \".\"), contractFunded && contractFunded.value === false && terminated && terminated.value === false && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: this.handleInitialDeposit,\n      disabled: statusDep === \"pending\" ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    }, !statusDep ? 'Fund Contract' : statusDep === \"success\" ? 'Success!' : statusDep))), payee && isPayee === true && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }\n    }, \"Looks like you are the payee on this contract! The payer is \", payer && payer.value, \".\")), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 7\n      }\n    }, \"Contract initial value \", contractValue && web3.utils.fromWei(contractValue.value.toString(), 'ether'), \"\\u039E // \", numberOfPayments && numberOfPayments.value, \" payments.\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 7\n      }\n    }, \"Funded: \", contractFunded && contractFunded.value === false ? \"No\" : \"Yes\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 7\n      }\n    }, \"Status: \", terminated && terminated.value === false ? \"Active\" : \"Terminated\"), nextPayment && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }\n    }, \"Next payment: \", nextPayment && Number(nextPayment.value) === 0 ? \"NONE\" : nextPayment.value, \".\")), (contractFunded && contractFunded.value === true || terminated && terminated.value === true) && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 7\n      }\n    }, \"Remaining balance to be paid on this contract: \", remainingBalance && web3.utils.fromWei(remainingBalance.value.toString(), 'ether'), \"\\u039E.\")), numberOfPayments && /*#__PURE__*/React.createElement(ShowPaymentTable, {\n      drizzle: this.props.drizzle,\n      drizzleState: this.props.drizzleState,\n      indexes: this.state,\n      numberOfPayments: numberOfPayments.value,\n      contractValue: contractValue.value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 7\n      }\n    }), this.state.dissolve && contractFunded && contractFunded.value === true && /*#__PURE__*/React.createElement(DissolveFunctions, {\n      drizzle: this.props.drizzle,\n      drizzleState: this.props.drizzleState,\n      indexes: this.state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleDissolveFunctionsToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 5\n      }\n    }, this.state.dissolve ? \"Hide Dissolve Functions\" : \"Show Dissolve Functions\"));\n  }\n\n}\n\nexport default GetContractInfo;","map":{"version":3,"sources":["/Users/erick/eth/progpay/client/src/GetContractInfo.js"],"names":["React","ShowPaymentTable","DissolveFunctions","Web3","web3","givenProvider","GetContractInfo","Component","constructor","props","state","dissolve","handleInitialDeposit","bind","handleDissolveFunctionsToggle","componentDidMount","drizzle","drizzleState","contract","contracts","ProgPayETH","payeeIndex","methods","cacheCall","payerIndex","contractValueIndex","numberOfPaymentsIndex","fundedIndex","nextPaymentIndex","remainingBalanceIndex","terminatedIndex","setState","contractValue","contractValueInWei","stackIdDep","cacheSend","from","accounts","value","getStatusDep","transactions","transactionStack","txHash","console","log","status","render","address","isPayer","isPayee","payee","payer","numberOfPayments","contractFunded","nextPayment","remainingBalance","terminated","contractTerminated","statusDep","utils","fromWei","toString","Number"],"mappings":"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","sourcesContent":["\nimport React from \"react\";\nimport ShowPaymentTable from \"./ShowPaymentTable\";\nimport DissolveFunctions from \"./DissolveFunctions\";\n\nimport Web3 from 'web3';\nconst web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n\nclass GetContractInfo extends React.Component {\n\nconstructor(props){\n  super(props);\n  this.state = {dissolve:false};\n  this.handleInitialDeposit = this.handleInitialDeposit.bind(this);\n  this.handleDissolveFunctionsToggle = this.handleDissolveFunctionsToggle.bind(this);\n}\n\n\n\n componentDidMount() {\n    //access drizzle props within componentDidMount\n    const {drizzle, drizzleState} = this.props;\n\n    const contract = drizzle.contracts.ProgPayETH;\n\n    var payeeIndex = contract.methods[\"payee\"].cacheCall();\n    var payerIndex = contract.methods[\"payer\"].cacheCall();\n    var contractValueIndex = contract.methods[\"contractValueInWei\"].cacheCall();\n    var numberOfPaymentsIndex = contract.methods[\"numberOfPayments\"].cacheCall();\n    var fundedIndex = contract.methods[\"contractFunded\"].cacheCall();\n    var nextPaymentIndex = contract.methods[\"nextPayment\"].cacheCall();\n    var remainingBalanceIndex = contract.methods[\"remainingBalance\"].cacheCall();\n    var terminatedIndex = contract.methods[\"contractTerminated\"].cacheCall();\n\n    this.setState({payeeIndex, payerIndex, contractValueIndex, numberOfPaymentsIndex, fundedIndex, nextPaymentIndex, remainingBalanceIndex, terminatedIndex});\n }\n\nhandleDissolveFunctionsToggle(){\n  this.setState({dissolve:!this.state.dissolve});\n}\n\n\n handleInitialDeposit(){\n   const {drizzle, drizzleState} = this.props;\n   const contract = drizzle.contracts.ProgPayETH;\n   const contractValue = drizzleState.contracts.ProgPayETH.contractValueInWei[this.state.contractValueIndex];\n   const stackIdDep = contract.methods['initialDeposit'].cacheSend({from: drizzleState.accounts[0], value:contractValue.value});\n   this.setState({ stackIdDep });\n }\n\n\n getStatusDep(){\n   const { transactions, transactionStack } = this.props.drizzleState;\n   // get the transaction hash using our saved `stackId`\n   const txHash = transactionStack[this.state.stackIdDep];\n   // if transaction hash does not exist, don't display anything\n   if (!txHash) return null;\n\n   if (transactions[txHash]){\n   console.log(transactions[txHash].status);\n   return transactions[txHash].status;\n  }\n }\n\nrender() {\n  const { drizzle } = this.props;\n  const { ProgPayETH } = this.props.drizzleState.contracts;\n  console.log(drizzle);\n  console.log(drizzle.contracts.ProgPayETH.address);\n  let isPayer;\n  let isPayee;\n  console.log(\"dissolve? \"+ this.state.dissolve);\n\n/*\n  let contractTxHash = drizzle.contracts.ProgPayETH.contractArtifact.networks['5777'].transactionHash;\n  let dateTimeStamp;\n  let timeStampData = web3.eth.getTransaction(contractTxHash, (err, result) =>{\n    return result;\n  }).then((result)=>{\n    //console.log(result);\n    web3.eth.getBlock(result.blockNumber, (err, result) =>{\n      return result;\n    }).then((result)=>{\n      dateTimeStamp = \"was funded on \"+ new Date(result.timestamp*1000)+\".\";\n    });\n  });\n*/\n\n\n\n\n  const payee = ProgPayETH.payee[this.state.payeeIndex];\n  const payer = ProgPayETH.payer[this.state.payerIndex];\n  const contractValue = ProgPayETH.contractValueInWei[this.state.contractValueIndex];\n  const numberOfPayments = ProgPayETH.numberOfPayments[this.state.numberOfPaymentsIndex];\n  const contractFunded = ProgPayETH.contractFunded[this.state.fundedIndex];\n  const nextPayment = ProgPayETH.nextPayment[this.state.nextPaymentIndex];\n  const remainingBalance = ProgPayETH.remainingBalance[this.state.remainingBalanceIndex];\n  const terminated = ProgPayETH.contractTerminated[this.state.terminatedIndex];\n\n  if (nextPayment){\n    //console.log(\"NP \"+nextPayment.value);\n  }\n\n  if (payer){\n    isPayer = this.props.drizzleState.accounts[0]===payer.value;\n    isPayee = this.props.drizzleState.accounts[0]===payee.value;\n    //console.log(isPayer?\"Payer\":isPayee?\"Payee\":\"Neither Payer or Payee\");\n  }\n\n\n  let statusDep = this.getStatusDep();\n\n\n    return (\n      <div>\n      <h4>Progress Payment Contract Dashboard ({drizzle.contracts.ProgPayETH.address})</h4>\n      {\n        payer && isPayer===true &&\n        <div>\n        <p>Looks like you are the payer on this contract! The payee is {payee && payee.value}.</p>\n        {contractFunded && contractFunded.value===false && terminated && terminated.value===false &&\n          <div>\n          <button className=\"btn btn-primary\" onClick={this.handleInitialDeposit} disabled = {statusDep===\"pending\"?true:false}>{!statusDep?'Fund Contract':statusDep===\"success\"?'Success!':statusDep}</button>\n          </div>\n        }\n        </div>\n      }\n      {\n        payee && isPayee===true &&\n        <div>\n        <p>Looks like you are the payee on this contract! The payer is {payer && payer.value}.</p>\n        </div>\n      }\n\n      <p>Contract initial value {contractValue && (web3.utils.fromWei((contractValue.value).toString(), 'ether'))}Ξ // {numberOfPayments && numberOfPayments.value} payments.</p>\n\n      <p>Funded: {contractFunded && contractFunded.value===false ?\"No\":\"Yes\"}</p>\n      <p>Status: {terminated && terminated.value===false?\"Active\":\"Terminated\"}</p>\n\n\n\n\n        {nextPayment &&\n          <div>\n          <p>Next payment: {nextPayment && Number(nextPayment.value)===0?\"NONE\":nextPayment.value}.</p>\n          </div>\n      }\n      {((contractFunded && contractFunded.value===true) || (terminated && terminated.value===true)) &&\n        <div>\n      <p>Remaining balance to be paid on this contract: {remainingBalance && (web3.utils.fromWei((remainingBalance.value).toString(), 'ether'))}Ξ.</p>\n        </div>\n    }\n\n\n    { numberOfPayments &&\n      <ShowPaymentTable\n      drizzle={this.props.drizzle}\n      drizzleState={this.props.drizzleState}\n      indexes={this.state}\n      numberOfPayments={numberOfPayments.value}\n      contractValue={contractValue.value}\n      />\n    }\n\n    { this.state.dissolve && contractFunded && contractFunded.value===true &&\n      <DissolveFunctions\n      drizzle={this.props.drizzle}\n      drizzleState={this.props.drizzleState}\n      indexes={this.state}\n      />\n    }\n\n    <button onClick={this.handleDissolveFunctionsToggle}>{this.state.dissolve?\"Hide Dissolve Functions\":\"Show Dissolve Functions\"}</button>\n      </div>\n    );\n  }\n}\n\nexport default GetContractInfo;\n"]},"metadata":{},"sourceType":"module"}