{"ast":null,"code":"var f = require('../formatters');\n\nvar SolidityType = require('../type');\n/**\n * SolidityTypeBool is a protoype that represents bool type\n * It matches:\n * bool\n * bool[]\n * bool[4]\n * bool[][]\n * bool[3][]\n * bool[][6][], ...\n */\n\n\nvar SolidityTypeBool = function SolidityTypeBool() {\n  this._inputFormatter = f.formatInputBool;\n  this._outputFormatter = f.formatOutputBool;\n};\n\nSolidityTypeBool.prototype = new SolidityType({});\nSolidityTypeBool.prototype.constructor = SolidityTypeBool;\n\nSolidityTypeBool.prototype.isType = function (name) {\n  return !!name.match(/^bool(\\[([0-9]*)\\])*$/);\n};\n\nmodule.exports = SolidityTypeBool;","map":{"version":3,"sources":["/Users/erick/eth/progpay/client/node_modules/drizzle/node_modules/web3-eth-abi/src/types/bool.js"],"names":["f","require","SolidityType","SolidityTypeBool","_inputFormatter","formatInputBool","_outputFormatter","formatOutputBool","prototype","constructor","isType","name","match","module","exports"],"mappings":"AAAA,IAAIA,CAAC,GAAGC,OAAO,CAAC,eAAD,CAAf;;AACA,IAAIC,YAAY,GAAGD,OAAO,CAAC,SAAD,CAA1B;AAEA;;;;;;;;;;;;AAUA,IAAIE,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAY;AAC/B,OAAKC,eAAL,GAAuBJ,CAAC,CAACK,eAAzB;AACA,OAAKC,gBAAL,GAAwBN,CAAC,CAACO,gBAA1B;AACH,CAHD;;AAKAJ,gBAAgB,CAACK,SAAjB,GAA6B,IAAIN,YAAJ,CAAiB,EAAjB,CAA7B;AACAC,gBAAgB,CAACK,SAAjB,CAA2BC,WAA3B,GAAyCN,gBAAzC;;AAEAA,gBAAgB,CAACK,SAAjB,CAA2BE,MAA3B,GAAoC,UAAUC,IAAV,EAAgB;AAChD,SAAO,CAAC,CAACA,IAAI,CAACC,KAAL,CAAW,uBAAX,CAAT;AACH,CAFD;;AAIAC,MAAM,CAACC,OAAP,GAAiBX,gBAAjB","sourcesContent":["var f = require('../formatters');\nvar SolidityType = require('../type');\n\n/**\n * SolidityTypeBool is a protoype that represents bool type\n * It matches:\n * bool\n * bool[]\n * bool[4]\n * bool[][]\n * bool[3][]\n * bool[][6][], ...\n */\nvar SolidityTypeBool = function () {\n    this._inputFormatter = f.formatInputBool;\n    this._outputFormatter = f.formatOutputBool;\n};\n\nSolidityTypeBool.prototype = new SolidityType({});\nSolidityTypeBool.prototype.constructor = SolidityTypeBool;\n\nSolidityTypeBool.prototype.isType = function (name) {\n    return !!name.match(/^bool(\\[([0-9]*)\\])*$/);\n};\n\nmodule.exports = SolidityTypeBool;\n"]},"metadata":{},"sourceType":"script"}